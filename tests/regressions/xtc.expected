<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="xtc2tpdb.xsl" type="text/xsl"?>
<problem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
type="termination"
xsi:noNamespaceSchemaLocation="http://dev.aspsimon.org/xtc.xsd">
<trs>
<rules>
<rule>
<lhs>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_and</name>
</funapp>
<var>bool_and_1_0</var>
</application>
<funapp>
<name>tests.OK.bool.false</name>
</funapp>
</application>
</lhs>
<rhs>
<funapp>
<name>tests.OK.bool.false</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_and</name>
</funapp>
<var>bool_and_2_0</var>
</application>
<funapp>
<name>tests.OK.bool.true</name>
</funapp>
</application>
</lhs>
<rhs>
<var>bool_and_2_0</var>
</rhs>
</rule>
<rule>
<lhs>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_and</name>
</funapp>
<funapp>
<name>tests.OK.bool.false</name>
</funapp>
</application>
<var>bool_and_3_0</var>
</application>
</lhs>
<rhs>
<funapp>
<name>tests.OK.bool.false</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_and</name>
</funapp>
<funapp>
<name>tests.OK.bool.true</name>
</funapp>
</application>
<var>bool_and_4_0</var>
</application>
</lhs>
<rhs>
<var>bool_and_4_0</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>tests.OK.bool.bool_impl</name>
</funapp>
</lhs>
<rhs>
<lambda>
<var>v_a</var>
<type><basic>tests.OK.bool.B</basic>
<type>
<lambda>
<var>v_b</var>
<type><basic>tests.OK.bool.B</basic>
<type>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_or</name>
</funapp>
<var>v_b</var>
</application>
<application>
<funapp>
<name>tests.OK.bool.bool_neg</name>
</funapp>
<var>v_a</var>
</application>
</application>
</lambda>
</lambda>
</rhs>
</rule>
<rule>
<lhs>
<application>
<funapp>
<name>tests.OK.bool.bool_neg</name>
</funapp>
<funapp>
<name>tests.OK.bool.false</name>
</funapp>
</application>
</lhs>
<rhs>
<funapp>
<name>tests.OK.bool.true</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<application>
<funapp>
<name>tests.OK.bool.bool_neg</name>
</funapp>
<funapp>
<name>tests.OK.bool.true</name>
</funapp>
</application>
</lhs>
<rhs>
<funapp>
<name>tests.OK.bool.false</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_or</name>
</funapp>
<var>bool_or_1_0</var>
</application>
<funapp>
<name>tests.OK.bool.false</name>
</funapp>
</application>
</lhs>
<rhs>
<var>bool_or_1_0</var>
</rhs>
</rule>
<rule>
<lhs>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_or</name>
</funapp>
<var>bool_or_2_0</var>
</application>
<funapp>
<name>tests.OK.bool.true</name>
</funapp>
</application>
</lhs>
<rhs>
<funapp>
<name>tests.OK.bool.true</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_or</name>
</funapp>
<funapp>
<name>tests.OK.bool.false</name>
</funapp>
</application>
<var>bool_or_3_0</var>
</application>
</lhs>
<rhs>
<var>bool_or_3_0</var>
</rhs>
</rule>
<rule>
<lhs>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_or</name>
</funapp>
<funapp>
<name>tests.OK.bool.true</name>
</funapp>
</application>
<var>bool_or_4_0</var>
</application>
</lhs>
<rhs>
<funapp>
<name>tests.OK.bool.true</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>tests.OK.bool.bool_xor</name>
</funapp>
</lhs>
<rhs>
<lambda>
<var>v_a</var>
<type><basic>tests.OK.bool.B</basic>
<type>
<lambda>
<var>v_b</var>
<type><basic>tests.OK.bool.B</basic>
<type>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_or</name>
</funapp>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_and</name>
</funapp>
<var>v_a</var>
</application>
<application>
<funapp>
<name>tests.OK.bool.bool_neg</name>
</funapp>
<var>v_b</var>
</application>
</application>
</application>
<application>
<application>
<funapp>
<name>tests.OK.bool.bool_and</name>
</funapp>
<var>v_b</var>
</application>
<application>
<funapp>
<name>tests.OK.bool.bool_neg</name>
</funapp>
<var>v_a</var>
</application>
</application>
</application>
</lambda>
</lambda>
</rhs>
</rule>
</rules>
<higherOrderSignature>
<variableTypeInfo>
<varDeclaration>
<var>bool_and_1_0</var>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</varDeclaration>
<varDeclaration>
<var>bool_and_2_0</var>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</varDeclaration>
<varDeclaration>
<var>bool_and_3_0</var>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</varDeclaration>
<varDeclaration>
<var>bool_and_4_0</var>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</varDeclaration>
<varDeclaration>
<var>bool_or_1_0</var>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</varDeclaration>
<varDeclaration>
<var>bool_or_2_0</var>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</varDeclaration>
<varDeclaration>
<var>bool_or_3_0</var>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</varDeclaration>
<varDeclaration>
<var>bool_or_4_0</var>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</varDeclaration>
</variableTypeInfo>
<functionSymbolTypeInfo>
<funcDeclaration>
<name>tests.OK.bool.bool_and</name>
<typeDeclaration>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</arrow>
</type>
</arrow>
</type>
</typeDeclaration>
</funcDeclaration>
<funcDeclaration>
<name>tests.OK.bool.bool_impl</name>
<typeDeclaration>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</arrow>
</type>
</arrow>
</type>
</typeDeclaration>
</funcDeclaration>
<funcDeclaration>
<name>tests.OK.bool.bool_neg</name>
<typeDeclaration>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</arrow>
</type>
</typeDeclaration>
</funcDeclaration>
<funcDeclaration>
<name>tests.OK.bool.bool_or</name>
<typeDeclaration>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</arrow>
</type>
</arrow>
</type>
</typeDeclaration>
</funcDeclaration>
<funcDeclaration>
<name>tests.OK.bool.bool_xor</name>
<typeDeclaration>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<arrow>
<type>
<basic>tests.OK.bool.B</basic>
</type>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</arrow>
</type>
</arrow>
</type>
</typeDeclaration>
</funcDeclaration>
<funcDeclaration>
<name>tests.OK.bool.false</name>
<typeDeclaration>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</typeDeclaration>
</funcDeclaration>
<funcDeclaration>
<name>tests.OK.bool.true</name>
<typeDeclaration>
<type>
<basic>tests.OK.bool.B</basic>
</type>
</typeDeclaration>
</funcDeclaration>
</functionSymbolTypeInfo>
</higherOrderSignature>
</trs>
<strategy>FULL</strategy>
<metainformation>
<originalfilename>Produced from a Dedukti file</originalfilename>
</metainformation>
</problem>
