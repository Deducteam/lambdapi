(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

def ifdec :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  H : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) C ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) C ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) C

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   H : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) C =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) C =>
   Coq__Init__Specif.match____sumbool (cupicef.type (cupicef.s cupicef.z)) A
     B (H0 : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) => C)
     (__ : cupicef.Term cupicef.prop A => x)
     (__ : cupicef.Term cupicef.prop B => y) H.

thm ifdec__left :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.set ->
  H : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) ->
  __ : cupicef.Term cupicef.prop (Coq__Init__Logic.not B) ->
  x : cupicef.Term cupicef.set C ->
  y : cupicef.Term cupicef.set C ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I C)
       (ifdec A B
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I C)
          H x y)
       x)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.set =>
   H : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) =>
   H0 : cupicef.Term cupicef.prop (Coq__Init__Logic.not B) =>
   x : cupicef.Term cupicef.set C =>
   y : cupicef.Term cupicef.set C =>
   Coq__Init__Specif.match____sumbool cupicef.prop A B
     (s : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) =>
      Coq__Init__Logic.eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I C)
        (ifdec A B
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I C)
           s x y)
        x)
     (a : cupicef.Term cupicef.prop A =>
      Coq__Init__Logic.eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I C)
        x)
     (b : cupicef.Term cupicef.prop B =>
      Coq__Init__Logic.False__ind
        (Coq__Init__Logic.eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I C)
           (ifdec A B
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I C)
              (Coq__Init__Specif.right A B b) x y)
           x)
        (H0 b))
     H.

thm ifdec__right :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.set ->
  H : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) ->
  __ : cupicef.Term cupicef.prop (Coq__Init__Logic.not A) ->
  x : cupicef.Term cupicef.set C ->
  y : cupicef.Term cupicef.set C ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I C)
       (ifdec A B
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I C)
          H x y)
       y)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.set =>
   H : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) =>
   H0 : cupicef.Term cupicef.prop (Coq__Init__Logic.not A) =>
   x : cupicef.Term cupicef.set C =>
   y : cupicef.Term cupicef.set C =>
   Coq__Init__Specif.match____sumbool cupicef.prop A B
     (s : cupicef.Term cupicef.set (Coq__Init__Specif.sumbool A B) =>
      Coq__Init__Logic.eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I C)
        (ifdec A B
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I C)
           s x y)
        y)
     (a : cupicef.Term cupicef.prop A =>
      Coq__Init__Logic.False__ind
        (Coq__Init__Logic.eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I C)
           (ifdec A B
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I C)
              (Coq__Init__Specif.left A B a) x y)
           y)
        (H0 a))
     (b : cupicef.Term cupicef.prop B =>
      Coq__Init__Logic.eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I C)
        y)
     H.

(; End of translation. ;)
