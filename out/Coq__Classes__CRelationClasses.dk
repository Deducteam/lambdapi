(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

def crelation :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Univ
    (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   cupicef.prod (cupicef.type s0)
     (cupicef.rule (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0) (cupicef.axiom (cupicef.type s1))))
     cupicef.I A
     (__ : cupicef.Term (cupicef.type s0) A =>
      cupicef.prod (cupicef.type s0) (cupicef.axiom (cupicef.type s1))
        (cupicef.rule (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
        cupicef.I A
        (__0 : cupicef.Term (cupicef.type s0) A =>
         cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
           cupicef.I)).

def arrow :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  B : cupicef.Univ (cupicef.type s1) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   B : cupicef.Univ (cupicef.type s1) =>
   cupicef.prod (cupicef.type s0) (cupicef.type s1)
     (cupicef.rule (cupicef.type s0) (cupicef.type s1)) cupicef.I A
     (__ : cupicef.Term (cupicef.type s0) A => B).

def flip :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  B : cupicef.Univ (cupicef.type s1) ->
  C : cupicef.Univ (cupicef.type s2) ->
  f :
    (__ : cupicef.Term (cupicef.type s0) A ->
     __0 : cupicef.Term (cupicef.type s1) B ->
     cupicef.Term (cupicef.type s2) C) ->
  x : cupicef.Term (cupicef.type s1) B ->
  y : cupicef.Term (cupicef.type s0) A ->
  cupicef.Term (cupicef.type s2) C

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   B : cupicef.Univ (cupicef.type s1) =>
   C : cupicef.Univ (cupicef.type s2) =>
   f :
     (__ : cupicef.Term (cupicef.type s0) A ->
      __0 : cupicef.Term (cupicef.type s1) B ->
      cupicef.Term (cupicef.type s2) C) =>
   x : cupicef.Term (cupicef.type s1) B =>
   y : cupicef.Term (cupicef.type s0) A =>
   f y x.

def iffT :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_2 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_3 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  B : cupicef.Univ (cupicef.type s1) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_2 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_3 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   B : cupicef.Univ (cupicef.type s1) =>
   Coq__Init__Datatypes.prod
     (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     (cupicef.prod (cupicef.type s0) (cupicef.type s1)
        (cupicef.rule (cupicef.type s0) (cupicef.type s1)) cupicef.I A
        (__ : cupicef.Term (cupicef.type s0) A => B))
     (cupicef.prod (cupicef.type s1) (cupicef.type s0)
        (cupicef.rule (cupicef.type s1) (cupicef.type s0)) cupicef.I B
        (__ : cupicef.Term (cupicef.type s1) B => A)).

def Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   cupicef.prod (cupicef.type s0) (cupicef.type s1)
     (cupicef.rule (cupicef.type s0) (cupicef.type s1)) cupicef.I A
     (x : cupicef.Term (cupicef.type s0) A => R x x).

#TYPE_CLASS Reflexive.

def reflexivity :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  Reflexive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Reflexive s0 s1 A R) ->
  x : cupicef.Term (cupicef.type s0) A ->
  cupicef.Term (cupicef.type s1) (R x x)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   Reflexive0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Reflexive s0 s1 A R) =>
   Reflexive0.

def complement :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
    (crelation s0 s2 A)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   cupicef.cast
     (cupicef.rule (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.type (cupicef.s cupicef.z))))))
     (cupicef.rule (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))))
     (cupicef.prod (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.type (cupicef.s cupicef.z)))))
        (cupicef.rule (cupicef.axiom (cupicef.type s0))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.type (cupicef.s cupicef.z))))))
        cupicef.I
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (A : cupicef.Univ (cupicef.type s0) =>
         cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.type (cupicef.s cupicef.z))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.type (cupicef.s cupicef.z)))))
           cupicef.I (crelation s0 s1 A)
           (R :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s1)))
                (crelation s0 s1 A) =>
            cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.type (cupicef.s cupicef.z))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type s0) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))))
     (cupicef.prod (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2))))
        (cupicef.rule (cupicef.axiom (cupicef.type s0))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))))
        cupicef.I
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (A : cupicef.Univ (cupicef.type s0) =>
         cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2))))
           cupicef.I (crelation s0 s1 A)
           (R :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s1)))
                (crelation s0 s1 A) =>
            crelation s0 s2 A)))
     cupicef.I
     (A : cupicef.Univ (cupicef.type s0) =>
      R :
        cupicef.Term
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (crelation s0 s1 A) =>
      x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      cupicef.prod (cupicef.type s1) cupicef.prop
        (cupicef.rule (cupicef.type s1) cupicef.prop) cupicef.I (R x y)
        (__ : cupicef.Term (cupicef.type s1) (R x y) =>
         Coq__Init__Logic.False)).

thm complement__inverse :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) ->
  cstr_2 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4))
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  cstr_3 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0)
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    (__ : cupicef.Term (cupicef.type s0) A ->
     __0 : cupicef.Term (cupicef.type s0) A ->
     cupicef.Univ (cupicef.type s1)) ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.eq
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4))))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s4))))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          (cupicef.pair
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.type s0)
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))))
             cstr_3
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.axiom (cupicef.type s4))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))))
             cstr_2 cupicef.BoolNone)
          (crelation s0 s4 A))
       (complement s0 s1 s4 A
          (flip s0 s0 s2 A A
             (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                (cupicef.axiom (cupicef.type s2))
                (cupicef.univ (cupicef.axiom (cupicef.type s1))
                   (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                   cupicef.I)
                (cupicef.univ (cupicef.type s2)
                   (cupicef.axiom (cupicef.type s2)) cupicef.I)
                cstr_0
                (cupicef.univ (cupicef.type s1)
                   (cupicef.axiom (cupicef.type s1)) cupicef.I))
             R))
       (flip s0 s0 s3 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
             (cupicef.axiom (cupicef.type s3))
             (cupicef.univ (cupicef.axiom (cupicef.type s4))
                (cupicef.axiom (cupicef.axiom (cupicef.type s4))) cupicef.I)
             (cupicef.univ (cupicef.type s3)
                (cupicef.axiom (cupicef.type s3)) cupicef.I)
             cstr_1
             (cupicef.univ (cupicef.type s4)
                (cupicef.axiom (cupicef.type s4)) cupicef.I))
          (complement s0 s1 s4 A R)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) =>
   cstr_2 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4))
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   cstr_3 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0)
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     (__ : cupicef.Term (cupicef.type s0) A ->
      __0 : cupicef.Term (cupicef.type s0) A ->
      cupicef.Univ (cupicef.type s1)) =>
   Coq__Init__Logic.eq__refl
     (cupicef.cast
        (cupicef.axiom
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4))))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
           (cupicef.axiom
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s4))))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        (cupicef.pair
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.type s0)
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z)))))
           cstr_3
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.axiom (cupicef.type s4))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z)))))
           cstr_2 cupicef.BoolNone)
        (crelation s0 s4 A))
     (flip s0 s0 s3 A A
        (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
           (cupicef.axiom (cupicef.type s3))
           (cupicef.univ (cupicef.axiom (cupicef.type s4))
              (cupicef.axiom (cupicef.axiom (cupicef.type s4))) cupicef.I)
           (cupicef.univ (cupicef.type s3) (cupicef.axiom (cupicef.type s3))
              cupicef.I)
           cstr_1
           (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
              cupicef.I))
        (complement s0 s1 s4 A R)).

def Irreflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   Reflexive s0 s1 A (complement s0 s2 s1 A R).

#TYPE_CLASS Irreflexive.

def irreflexivity :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  Irreflexive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Irreflexive s0 s1 s2 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1 A (complement s0 s2 s1 A R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   Irreflexive0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Irreflexive s0 s1 s2 A R) =>
   Irreflexive0.

def Symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   cupicef.prod (cupicef.type s0)
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type s0) A =>
      cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s1) (cupicef.type s1))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
        cupicef.I A
        (y : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s1) (cupicef.type s1)
           (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I
           (R x y) (__ : cupicef.Term (cupicef.type s1) (R x y) => R y x))).

#TYPE_CLASS Symmetric.

def symmetry :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  Symmetric0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Symmetric s0 s1 A R) ->
  x : cupicef.Term (cupicef.type s0) A ->
  y : cupicef.Term (cupicef.type s0) A ->
  __ : cupicef.Term (cupicef.type s1) (R x y) ->
  cupicef.Term (cupicef.type s1) (R y x)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   Symmetric0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Symmetric s0 s1 A R) =>
   Symmetric0.

def Asymmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s1)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  cupicef.Univ
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s1) (cupicef.type s2)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s1)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   cupicef.prod (cupicef.type s0)
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s2) (cupicef.type s1)))
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s2) (cupicef.type s1))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type s0) A =>
      cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s2) (cupicef.type s1))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s2) (cupicef.type s1)))
        cupicef.I A
        (y : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s2) (cupicef.type s1)
           (cupicef.rule (cupicef.type s2) (cupicef.type s1)) cupicef.I
           (R x y)
           (__ : cupicef.Term (cupicef.type s2) (R x y) =>
            cupicef.cast (cupicef.axiom (cupicef.type s3))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ (cupicef.type s3)
                 (cupicef.axiom (cupicef.type s3)) cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              cstr_0 (complement s0 s2 s3 A R y x)))).

#TYPE_CLASS Asymmetric.

def asymmetry :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s1)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  Asymmetric0 :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (Asymmetric s0 s1 s2 s3 cstr_0 A R) ->
  x : cupicef.Term (cupicef.type s0) A ->
  y : cupicef.Term (cupicef.type s0) A ->
  __ : cupicef.Term (cupicef.type s2) (R x y) ->
  cupicef.Term (cupicef.type s3) (complement s0 s2 s3 A R y x)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s1)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   Asymmetric0 :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (Asymmetric s0 s1 s2 s3 cstr_0 A R) =>
   Asymmetric0.

def Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   cupicef.prod (cupicef.type s0)
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type s0) A =>
      cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
        cupicef.I A
        (y : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s0)
           (cupicef.rule (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
           cupicef.I A
           (z : cupicef.Term (cupicef.type s0) A =>
            cupicef.prod (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
              cupicef.I (R x y)
              (__ : cupicef.Term (cupicef.type s1) (R x y) =>
               cupicef.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I
                 (R y z)
                 (__0 : cupicef.Term (cupicef.type s1) (R y z) => R x z))))).

#TYPE_CLASS Transitive.

def transitivity :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  Transitive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Transitive s0 s1 A R) ->
  x : cupicef.Term (cupicef.type s0) A ->
  y : cupicef.Term (cupicef.type s0) A ->
  z : cupicef.Term (cupicef.type s0) A ->
  __ : cupicef.Term (cupicef.type s1) (R x y) ->
  __0 : cupicef.Term (cupicef.type s1) (R y z) ->
  cupicef.Term (cupicef.type s1) (R x z)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   Transitive0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Transitive s0 s1 A R) =>
   Transitive0.

def PreOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1)).

#TYPE_CLASS PreOrder.

def Build__PreOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  PreOrder__Reflexive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Reflexive s0 s1 A R) ->
  PreOrder__Transitive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Transitive s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (PreOrder s0 s1 A R).

[ ] cupicef.code_guarded? _ (Build__PreOrder _ _ _ _ _ _) --> cupicef.guarded.

def match____PreOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  P :
    (cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (PreOrder s0 s1 A R) ->
     cupicef.Univ s) ->
  case__Build__PreOrder :
    (PreOrder__Reflexive0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
         (Reflexive s0 s1 A R) ->
     PreOrder__Transitive0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
         (Transitive s0 s1 A R) ->
     cupicef.Term s
       (P
          (Build__PreOrder s0 s1 A R PreOrder__Reflexive0
             PreOrder__Transitive0))) ->
  x :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (PreOrder s0 s1 A R) ->
  cupicef.Term s (P x).

[ s0, s1, s, A, R, P, case__Build__PreOrder, PreOrder__Reflexive0, PreOrder__Transitive0]
  match____PreOrder s0 s1 s A R P case__Build__PreOrder
    (Build__PreOrder s0 s1 A R PreOrder__Reflexive0 PreOrder__Transitive0)
  -->
  case__Build__PreOrder PreOrder__Reflexive0 PreOrder__Transitive0.

[ s0, s1, s, A, R, P, s']
  match____PreOrder s0 s1 s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____PreOrder s0 s1 s' A R (x => P x).

def PreOrder__Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  PreOrder0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (PreOrder s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   PreOrder0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (PreOrder s0 s1 A R) =>
   match____PreOrder s0 s1 (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     A R
     (PreOrder1 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (PreOrder s0 s1 A R) =>
      Reflexive s0 s1 A R)
     (PreOrder__Reflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Reflexive s0 s1 A R) =>
      PreOrder__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      PreOrder__Reflexive0)
     PreOrder0.

#TYPE_CLASS_INSTANCE PreOrder__Reflexive.

def PreOrder__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  PreOrder0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (PreOrder s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Transitive s0 s1 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   PreOrder0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (PreOrder s0 s1 A R) =>
   match____PreOrder s0 s1 (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     A R
     (PreOrder1 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (PreOrder s0 s1 A R) =>
      Transitive s0 s1 A R)
     (PreOrder__Reflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Reflexive s0 s1 A R) =>
      PreOrder__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      PreOrder__Transitive0)
     PreOrder0.

#TYPE_CLASS_INSTANCE PreOrder__Transitive.

def StrictOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  cupicef.Univ
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s1) (cupicef.type s2))).

#TYPE_CLASS StrictOrder.

def Build__StrictOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  StrictOrder__Irreflexive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Irreflexive s0 s1 s2 A R) ->
  StrictOrder__Transitive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
      (Transitive s0 s2 A R) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
    (StrictOrder s0 s1 s2 A R).

[ ] cupicef.code_guarded? _ (Build__StrictOrder _ _ _ _ _ _ _) --> cupicef.guarded.

def match____StrictOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  P :
    (cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (StrictOrder s0 s1 s2 A R) ->
     cupicef.Univ s) ->
  case__Build__StrictOrder :
    (StrictOrder__Irreflexive0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
         (Irreflexive s0 s1 s2 A R) ->
     StrictOrder__Transitive0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
         (Transitive s0 s2 A R) ->
     cupicef.Term s
       (P
          (Build__StrictOrder s0 s1 s2 A R StrictOrder__Irreflexive0
             StrictOrder__Transitive0))) ->
  x :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (StrictOrder s0 s1 s2 A R) ->
  cupicef.Term s (P x).

[ s0, s1, s2, s, A, R, P, case__Build__StrictOrder, StrictOrder__Irreflexive0, StrictOrder__Transitive0]
  match____StrictOrder s0 s1 s2 s A R P case__Build__StrictOrder
    (Build__StrictOrder s0 s1 s2 A R StrictOrder__Irreflexive0
       StrictOrder__Transitive0)
  -->
  case__Build__StrictOrder StrictOrder__Irreflexive0 StrictOrder__Transitive0.

[ s0, s1, s2, s, A, R, P, s']
  match____StrictOrder s0 s1 s2 s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____StrictOrder s0 s1 s2 s' A R (x => P x).

def StrictOrder__Irreflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  StrictOrder0 :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (StrictOrder s0 s1 s2 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Irreflexive s0 s1 s2 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   StrictOrder0 :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (StrictOrder s0 s1 s2 A R) =>
   match____StrictOrder s0 s1 s2
     (cupicef.sup (cupicef.type s0) (cupicef.type s1)) A R
     (StrictOrder1 :
        cupicef.Term
          (cupicef.sup (cupicef.type s0)
             (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
          (StrictOrder s0 s1 s2 A R) =>
      Irreflexive s0 s1 s2 A R)
     (StrictOrder__Irreflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Irreflexive s0 s1 s2 A R) =>
      StrictOrder__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
          (Transitive s0 s2 A R) =>
      StrictOrder__Irreflexive0)
     StrictOrder0.

#TYPE_CLASS_INSTANCE StrictOrder__Irreflexive.

def StrictOrder__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  StrictOrder0 :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (StrictOrder s0 s1 s2 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
    (Transitive s0 s2 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   StrictOrder0 :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (StrictOrder s0 s1 s2 A R) =>
   match____StrictOrder s0 s1 s2
     (cupicef.sup (cupicef.type s0) (cupicef.type s2)) A R
     (StrictOrder1 :
        cupicef.Term
          (cupicef.sup (cupicef.type s0)
             (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
          (StrictOrder s0 s1 s2 A R) =>
      Transitive s0 s2 A R)
     (StrictOrder__Irreflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Irreflexive s0 s1 s2 A R) =>
      StrictOrder__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
          (Transitive s0 s2 A R) =>
      StrictOrder__Transitive0)
     StrictOrder0.

#TYPE_CLASS_INSTANCE StrictOrder__Transitive.

thm StrictOrder__Asymmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  H :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (StrictOrder s0 s1 s2 A R) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s2) (cupicef.type s3)))
    (Asymmetric s0 s3 s2 s3 cupicef.I A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   H :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (StrictOrder s0 s1 s2 A R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s2) (cupicef.type s3))))
     (cupicef.sup (cupicef.type s0)
        (cupicef.sup (cupicef.type s2) (cupicef.type s3)))
     (cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s2) (cupicef.type s3)))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s2) (cupicef.type s3))))
        cupicef.I A
        (x : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s0)
           (cupicef.rule (cupicef.type s2) (cupicef.type s3))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s2) (cupicef.type s3)))
           cupicef.I A
           (y : cupicef.Term (cupicef.type s0) A =>
            cupicef.prod (cupicef.type s2) (cupicef.type s3)
              (cupicef.rule (cupicef.type s2) (cupicef.type s3)) cupicef.I
              (R x y)
              (X : cupicef.Term (cupicef.type s2) (R x y) =>
               complement s0 s2 s3 A R y x))))
     (Asymmetric s0 s3 s2 s3 cupicef.I A R) cupicef.I
     (x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      X : cupicef.Term (cupicef.type s2) (R x y) =>
      cupicef.cast (cupicef.rule (cupicef.type s2) cupicef.prop)
        (cupicef.type s3)
        (cupicef.prod (cupicef.type s2) cupicef.prop
           (cupicef.rule (cupicef.type s2) cupicef.prop) cupicef.I (R y x)
           (X0 : cupicef.Term (cupicef.type s2) (R y x) =>
            Coq__Init__Logic.False))
        (complement s0 s2 s3 A R y x) cupicef.I
        (X0 : cupicef.Term (cupicef.type s2) (R y x) =>
         match____StrictOrder s0 s1 s2 cupicef.prop A R
           (s :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
                (StrictOrder s0 s1 s2 A R) =>
            Coq__Init__Logic.False)
           (StrictOrder__Irreflexive0 :
              cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
                (Irreflexive s0 s1 s2 A R) =>
            StrictOrder__Transitive0 :
              cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
                (Transitive s0 s2 A R) =>
            (X1 :
               (y0 : cupicef.Term (cupicef.type s0) A ->
                z : cupicef.Term (cupicef.type s0) A ->
                __ : cupicef.Term (cupicef.type s2) (R y y0) ->
                __0 : cupicef.Term (cupicef.type s2) (R y0 z) ->
                cupicef.Term (cupicef.type s2) (R y z)) =>
             (X2 :
                cupicef.Term (cupicef.type s1) (complement s0 s2 s1 A R y y) =>
              (X3 :
                 (z : cupicef.Term (cupicef.type s0) A ->
                  __ : cupicef.Term (cupicef.type s2) (R y x) ->
                  __0 : cupicef.Term (cupicef.type s2) (R x z) ->
                  cupicef.Term (cupicef.type s2) (R y z)) =>
               X2 (X3 y X0 X)) (X1 x)) (StrictOrder__Irreflexive0 y))
              (StrictOrder__Transitive0 y))
           H)).

#TYPE_CLASS_INSTANCE StrictOrder__Asymmetric.

def PER :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1)).

#TYPE_CLASS PER.

def Build__PER :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  PER__Symmetric0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Symmetric s0 s1 A R) ->
  PER__Transitive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Transitive s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (PER s0 s1 A R).

[ ] cupicef.code_guarded? _ (Build__PER _ _ _ _ _ _) --> cupicef.guarded.

def match____PER :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  P :
    (cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (PER s0 s1 A R) ->
     cupicef.Univ s) ->
  case__Build__PER :
    (PER__Symmetric0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
         (Symmetric s0 s1 A R) ->
     PER__Transitive0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
         (Transitive s0 s1 A R) ->
     cupicef.Term s
       (P (Build__PER s0 s1 A R PER__Symmetric0 PER__Transitive0))) ->
  x :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (PER s0 s1 A R) ->
  cupicef.Term s (P x).

[ s0, s1, s, A, R, P, case__Build__PER, PER__Symmetric0, PER__Transitive0]
  match____PER s0 s1 s A R P case__Build__PER
    (Build__PER s0 s1 A R PER__Symmetric0 PER__Transitive0)
  -->
  case__Build__PER PER__Symmetric0 PER__Transitive0.

[ s0, s1, s, A, R, P, s']
  match____PER s0 s1 s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____PER s0 s1 s' A R (x => P x).

def PER__Symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  PER0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (PER s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Symmetric s0 s1 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   PER0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (PER s0 s1 A R) =>
   match____PER s0 s1 (cupicef.sup (cupicef.type s0) (cupicef.type s1)) A R
     (PER1 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (PER s0 s1 A R) =>
      Symmetric s0 s1 A R)
     (PER__Symmetric0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Symmetric s0 s1 A R) =>
      PER__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      PER__Symmetric0)
     PER0.

#TYPE_CLASS_INSTANCE PER__Symmetric.

def PER__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  PER0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (PER s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Transitive s0 s1 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   PER0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (PER s0 s1 A R) =>
   match____PER s0 s1 (cupicef.sup (cupicef.type s0) (cupicef.type s1)) A R
     (PER1 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (PER s0 s1 A R) =>
      Transitive s0 s1 A R)
     (PER__Symmetric0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Symmetric s0 s1 A R) =>
      PER__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      PER__Transitive0)
     PER0.

#TYPE_CLASS_INSTANCE PER__Transitive.

def Equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Univ (cupicef.sup (cupicef.type s0) (cupicef.type s1)).

#TYPE_CLASS Equivalence.

def Build__Equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  Equivalence__Reflexive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Reflexive s0 s1 A R) ->
  Equivalence__Symmetric0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Symmetric s0 s1 A R) ->
  Equivalence__Transitive0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Transitive s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Equivalence s0 s1 A R).

[ ] cupicef.code_guarded? _ (Build__Equivalence _ _ _ _ _ _ _) --> cupicef.guarded.

def match____Equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  P :
    (cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A R) ->
     cupicef.Univ s) ->
  case__Build__Equivalence :
    (Equivalence__Reflexive0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
         (Reflexive s0 s1 A R) ->
     Equivalence__Symmetric0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
         (Symmetric s0 s1 A R) ->
     Equivalence__Transitive0 :
       cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
         (Transitive s0 s1 A R) ->
     cupicef.Term s
       (P
          (Build__Equivalence s0 s1 A R Equivalence__Reflexive0
             Equivalence__Symmetric0 Equivalence__Transitive0))) ->
  x :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A R) ->
  cupicef.Term s (P x).

[ s0, s1, s, A, R, P, case__Build__Equivalence, Equivalence__Reflexive0, Equivalence__Symmetric0, Equivalence__Transitive0]
  match____Equivalence s0 s1 s A R P case__Build__Equivalence
    (Build__Equivalence s0 s1 A R Equivalence__Reflexive0
       Equivalence__Symmetric0 Equivalence__Transitive0)
  -->
  case__Build__Equivalence Equivalence__Reflexive0 Equivalence__Symmetric0
    Equivalence__Transitive0.

[ s0, s1, s, A, R, P, s']
  match____Equivalence s0 s1 s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____Equivalence s0 s1 s' A R (x => P x).

def Equivalence__Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  Equivalence0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   Equivalence0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A R) =>
   match____Equivalence s0 s1
     (cupicef.sup (cupicef.type s0) (cupicef.type s1)) A R
     (Equivalence1 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Equivalence s0 s1 A R) =>
      Reflexive s0 s1 A R)
     (Equivalence__Reflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Reflexive s0 s1 A R) =>
      Equivalence__Symmetric0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Symmetric s0 s1 A R) =>
      Equivalence__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      Equivalence__Reflexive0)
     Equivalence0.

#TYPE_CLASS_INSTANCE Equivalence__Reflexive.

def Equivalence__Symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  Equivalence0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Symmetric s0 s1 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   Equivalence0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A R) =>
   match____Equivalence s0 s1
     (cupicef.sup (cupicef.type s0) (cupicef.type s1)) A R
     (Equivalence1 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Equivalence s0 s1 A R) =>
      Symmetric s0 s1 A R)
     (Equivalence__Reflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Reflexive s0 s1 A R) =>
      Equivalence__Symmetric0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Symmetric s0 s1 A R) =>
      Equivalence__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      Equivalence__Symmetric0)
     Equivalence0.

#TYPE_CLASS_INSTANCE Equivalence__Symmetric.

def Equivalence__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  Equivalence0 :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Transitive s0 s1 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   Equivalence0 :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A R) =>
   match____Equivalence s0 s1
     (cupicef.sup (cupicef.type s0) (cupicef.type s1)) A R
     (Equivalence1 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Equivalence s0 s1 A R) =>
      Transitive s0 s1 A R)
     (Equivalence__Reflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Reflexive s0 s1 A R) =>
      Equivalence__Symmetric0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Symmetric s0 s1 A R) =>
      Equivalence__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      Equivalence__Transitive0)
     Equivalence0.

#TYPE_CLASS_INSTANCE Equivalence__Transitive.

def Equivalence__PER :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (PER s0 s1 A R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A R) =>
   Build__PER s0 s1 A R (Equivalence__Symmetric s0 s1 A R H)
     (Equivalence__Transitive s0 s1 A R H).

#TYPE_CLASS_INSTANCE Equivalence__PER.

def Antisymmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  cupicef.Univ
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s1) (cupicef.type s2)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   cupicef.prod (cupicef.type s0)
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s2)
           (cupicef.rule (cupicef.type s2) (cupicef.type s1))))
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s2)
              (cupicef.rule (cupicef.type s2) (cupicef.type s1)))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type s0) A =>
      cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s2)
           (cupicef.rule (cupicef.type s2) (cupicef.type s1)))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s2)
              (cupicef.rule (cupicef.type s2) (cupicef.type s1))))
        cupicef.I A
        (y : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s2)
           (cupicef.rule (cupicef.type s2) (cupicef.type s1))
           (cupicef.rule (cupicef.type s2)
              (cupicef.rule (cupicef.type s2) (cupicef.type s1)))
           cupicef.I (R x y)
           (__ : cupicef.Term (cupicef.type s2) (R x y) =>
            cupicef.prod (cupicef.type s2) (cupicef.type s1)
              (cupicef.rule (cupicef.type s2) (cupicef.type s1)) cupicef.I
              (R y x)
              (__0 : cupicef.Term (cupicef.type s2) (R y x) => eqA x y)))).

#TYPE_CLASS Antisymmetric.

def antisymmetry :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  Antisymmetric0 :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (Antisymmetric s0 s1 s2 A eqA equ R) ->
  x : cupicef.Term (cupicef.type s0) A ->
  y : cupicef.Term (cupicef.type s0) A ->
  __ : cupicef.Term (cupicef.type s2) (R x y) ->
  __0 : cupicef.Term (cupicef.type s2) (R y x) ->
  cupicef.Term (cupicef.type s1) (eqA x y)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   Antisymmetric0 :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (Antisymmetric s0 s1 s2 A eqA equ R) =>
   Antisymmetric0.

def subrelation :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  R_27_ :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  cupicef.Univ
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s1) (cupicef.type s2)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   R_27_ :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   cupicef.prod (cupicef.type s0)
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s1) (cupicef.type s2)))
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1) (cupicef.type s2))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type s0) A =>
      cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s1) (cupicef.type s2))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1) (cupicef.type s2)))
        cupicef.I A
        (y : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s1) (cupicef.type s2)
           (cupicef.rule (cupicef.type s1) (cupicef.type s2)) cupicef.I
           (R x y) (__ : cupicef.Term (cupicef.type s1) (R x y) => R_27_ x y))).

#TYPE_CLASS subrelation.

def is__subrelation :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  R_27_ :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  subrelation0 :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (subrelation s0 s1 s2 A R R_27_) ->
  x : cupicef.Term (cupicef.type s0) A ->
  y : cupicef.Term (cupicef.type s0) A ->
  __ : cupicef.Term (cupicef.type s1) (R x y) ->
  cupicef.Term (cupicef.type s2) (R_27_ x y)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   R_27_ :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   subrelation0 :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (subrelation s0 s1 s2 A R R_27_) =>
   subrelation0.

thm subrelation__symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s2)) (cupicef.type s1)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
      (Symmetric s0 s2 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
    (subrelation s0 s2 s2 A
       (flip s0 s0 s1 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
             (cupicef.axiom (cupicef.type s1))
             (cupicef.univ (cupicef.axiom (cupicef.type s2))
                (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I))
          R)
       R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s2)) (cupicef.type s1)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
       (Symmetric s0 s2 A R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
     (cupicef.sup (cupicef.type s0) (cupicef.type s2))
     (cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
        cupicef.I A
        (x : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s0)
           (cupicef.rule (cupicef.type s2) (cupicef.type s2))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
           cupicef.I A
           (y : cupicef.Term (cupicef.type s0) A =>
            cupicef.prod (cupicef.type s2) (cupicef.type s2)
              (cupicef.rule (cupicef.type s2) (cupicef.type s2)) cupicef.I
              (flip s0 s0 s1 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                    (cupicef.axiom (cupicef.type s1))
                    (cupicef.univ (cupicef.axiom (cupicef.type s2))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I)
                    cstr_0
                    (cupicef.univ (cupicef.type s2)
                       (cupicef.axiom (cupicef.type s2)) cupicef.I))
                 R x y)
              (H_27_ :
                 cupicef.Term (cupicef.type s2)
                   (flip s0 s0 s1 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                         (cupicef.axiom (cupicef.type s1))
                         (cupicef.univ (cupicef.axiom (cupicef.type s2))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s1)
                            (cupicef.axiom (cupicef.type s1)) cupicef.I)
                         cstr_0
                         (cupicef.univ (cupicef.type s2)
                            (cupicef.axiom (cupicef.type s2)) cupicef.I))
                      R x y) =>
               R x y))))
     (subrelation s0 s2 s2 A
        (flip s0 s0 s1 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ (cupicef.axiom (cupicef.type s2))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I))
           R)
        R)
     cupicef.I
     (x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      H_27_ :
        cupicef.Term (cupicef.type s2)
          (flip s0 s0 s1 A A
             (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                (cupicef.axiom (cupicef.type s1))
                (cupicef.univ (cupicef.axiom (cupicef.type s2))
                   (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                   cupicef.I)
                (cupicef.univ (cupicef.type s1)
                   (cupicef.axiom (cupicef.type s1)) cupicef.I)
                cstr_0
                (cupicef.univ (cupicef.type s2)
                   (cupicef.axiom (cupicef.type s2)) cupicef.I))
             R x y) =>
      symmetry s0 s2 A R H y x H_27_).

thm flip__Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Reflexive s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1 A
       (flip s0 s0 s2 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
             (cupicef.axiom (cupicef.type s2))
             (cupicef.univ (cupicef.axiom (cupicef.type s1))
                (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Reflexive s0 s1 A R) =>
   H.

def flip__Irreflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s2)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
      (Irreflexive s0 s3 s4 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Irreflexive s0 s1 s4 A
       (flip s0 s0 s2 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
             (cupicef.axiom (cupicef.type s2))
             (cupicef.univ (cupicef.axiom (cupicef.type s4))
                (cupicef.axiom (cupicef.axiom (cupicef.type s4))) cupicef.I)
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s4)
                (cupicef.axiom (cupicef.type s4)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s2)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
       (Irreflexive s0 s3 s4 A R) =>
   irreflexivity s0 s3 s4 A R H.

def flip__Symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s2)) (cupicef.type s1)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
      (Symmetric s0 s2 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
    (Symmetric s0 s2 A
       (flip s0 s0 s1 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
             (cupicef.axiom (cupicef.type s1))
             (cupicef.univ (cupicef.axiom (cupicef.type s2))
                (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s2)) (cupicef.type s1)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
       (Symmetric s0 s2 A R) =>
   x : cupicef.Term (cupicef.type s0) A =>
   y : cupicef.Term (cupicef.type s0) A =>
   H0 :
     cupicef.Term (cupicef.type s2)
       (flip s0 s0 s1 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
             (cupicef.axiom (cupicef.type s1))
             (cupicef.univ (cupicef.axiom (cupicef.type s2))
                (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I))
          R x y) =>
   symmetry s0 s2 A R H y x H0.

def flip__Asymmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s2)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  H :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s3) (cupicef.type s4)))
      (Asymmetric s0 s4 s3 s4 cupicef.I A R) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s1) (cupicef.type s3)))
    (Asymmetric s0 s1 s3 s1 cupicef.I A
       (flip s0 s0 s2 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s3)))
             (cupicef.axiom (cupicef.type s2))
             (cupicef.univ (cupicef.axiom (cupicef.type s3))
                (cupicef.axiom (cupicef.axiom (cupicef.type s3))) cupicef.I)
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s3)
                (cupicef.axiom (cupicef.type s3)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s2)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   H :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s3) (cupicef.type s4)))
       (Asymmetric s0 s4 s3 s4 cupicef.I A R) =>
   x : cupicef.Term (cupicef.type s0) A =>
   y : cupicef.Term (cupicef.type s0) A =>
   H0 :
     cupicef.Term (cupicef.type s3)
       (flip s0 s0 s2 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s3)))
             (cupicef.axiom (cupicef.type s2))
             (cupicef.univ (cupicef.axiom (cupicef.type s3))
                (cupicef.axiom (cupicef.axiom (cupicef.type s3))) cupicef.I)
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s3)
                (cupicef.axiom (cupicef.type s3)) cupicef.I))
          R x y) =>
   H_27_ :
     cupicef.Term (cupicef.type s3)
       (flip s0 s0 s2 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s3)))
             (cupicef.axiom (cupicef.type s2))
             (cupicef.univ (cupicef.axiom (cupicef.type s3))
                (cupicef.axiom (cupicef.axiom (cupicef.type s3))) cupicef.I)
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s3)
                (cupicef.axiom (cupicef.type s3)) cupicef.I))
          R y x) =>
   asymmetry s0 s4 s3 s4 cupicef.I A R H y x H0 H_27_.

def flip__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s2)) (cupicef.type s1)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
      (Transitive s0 s2 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
    (Transitive s0 s2 A
       (flip s0 s0 s1 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
             (cupicef.axiom (cupicef.type s1))
             (cupicef.univ (cupicef.axiom (cupicef.type s2))
                (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s2)) (cupicef.type s1)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
       (Transitive s0 s2 A R) =>
   x : cupicef.Term (cupicef.type s0) A =>
   y : cupicef.Term (cupicef.type s0) A =>
   z : cupicef.Term (cupicef.type s0) A =>
   H0 :
     cupicef.Term (cupicef.type s2)
       (flip s0 s0 s1 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
             (cupicef.axiom (cupicef.type s1))
             (cupicef.univ (cupicef.axiom (cupicef.type s2))
                (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I))
          R x y) =>
   H_27_ :
     cupicef.Term (cupicef.type s2)
       (flip s0 s0 s1 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
             (cupicef.axiom (cupicef.type s1))
             (cupicef.univ (cupicef.axiom (cupicef.type s2))
                (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I))
          R y z) =>
   transitivity s0 s2 A R H z y x H_27_ H0.

thm flip__Antisymmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s3)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
      (Equivalence s0 s2 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  H :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (Antisymmetric s0 s2 s1 A eqA equ R) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
    (Antisymmetric s0 s2 s1 A eqA equ
       (flip s0 s0 s3 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
             (cupicef.axiom (cupicef.type s3))
             (cupicef.univ (cupicef.axiom (cupicef.type s1))
                (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
             (cupicef.univ (cupicef.type s3)
                (cupicef.axiom (cupicef.type s3)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s3)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
       (Equivalence s0 s2 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   H :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (Antisymmetric s0 s2 s1 A eqA equ R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s2)))))
     (cupicef.sup (cupicef.type s0)
        (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
     (cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s2))))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s2)))))
        cupicef.I A
        (x : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s0)
           (cupicef.rule (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s2)))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s2))))
           cupicef.I A
           (y : cupicef.Term (cupicef.type s0) A =>
            cupicef.prod (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s2))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s2)))
              cupicef.I
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s1))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_0
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I))
                 R x y)
              (X :
                 cupicef.Term (cupicef.type s1)
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s1))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_0
                         (cupicef.univ (cupicef.type s1)
                            (cupicef.axiom (cupicef.type s1)) cupicef.I))
                      R x y) =>
               cupicef.prod (cupicef.type s1) (cupicef.type s2)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s2)) cupicef.I
                 (flip s0 s0 s3 A A
                    (cupicef.cast
                       (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                       (cupicef.axiom (cupicef.type s3))
                       (cupicef.univ (cupicef.axiom (cupicef.type s1))
                          (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I)
                       cstr_0
                       (cupicef.univ (cupicef.type s1)
                          (cupicef.axiom (cupicef.type s1)) cupicef.I))
                    R y x)
                 (X0 :
                    cupicef.Term (cupicef.type s1)
                      (flip s0 s0 s3 A A
                         (cupicef.cast
                            (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                            (cupicef.axiom (cupicef.type s3))
                            (cupicef.univ (cupicef.axiom (cupicef.type s1))
                               (cupicef.axiom
                                  (cupicef.axiom (cupicef.type s1)))
                               cupicef.I)
                            (cupicef.univ (cupicef.type s3)
                               (cupicef.axiom (cupicef.type s3)) cupicef.I)
                            cstr_0
                            (cupicef.univ (cupicef.type s1)
                               (cupicef.axiom (cupicef.type s1)) cupicef.I))
                         R y x) =>
                  eqA x y)))))
     (Antisymmetric s0 s2 s1 A eqA equ
        (flip s0 s0 s3 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
              (cupicef.axiom (cupicef.type s3))
              (cupicef.univ (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
              (cupicef.univ (cupicef.type s3)
                 (cupicef.axiom (cupicef.type s3)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           R))
     cupicef.I
     (x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      X :
        cupicef.Term (cupicef.type s1)
          (flip s0 s0 s3 A A
             (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                (cupicef.axiom (cupicef.type s3))
                (cupicef.univ (cupicef.axiom (cupicef.type s1))
                   (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                   cupicef.I)
                (cupicef.univ (cupicef.type s3)
                   (cupicef.axiom (cupicef.type s3)) cupicef.I)
                cstr_0
                (cupicef.univ (cupicef.type s1)
                   (cupicef.axiom (cupicef.type s1)) cupicef.I))
             R x y) =>
      X0 :
        cupicef.Term (cupicef.type s1)
          (flip s0 s0 s3 A A
             (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                (cupicef.axiom (cupicef.type s3))
                (cupicef.univ (cupicef.axiom (cupicef.type s1))
                   (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                   cupicef.I)
                (cupicef.univ (cupicef.type s3)
                   (cupicef.axiom (cupicef.type s3)) cupicef.I)
                cstr_0
                (cupicef.univ (cupicef.type s1)
                   (cupicef.axiom (cupicef.type s1)) cupicef.I))
             R y x) =>
      (X1 :
         (y0 : cupicef.Term (cupicef.type s0) A ->
          __ : cupicef.Term (cupicef.type s1) (R y y0) ->
          __0 : cupicef.Term (cupicef.type s1) (R y0 y) ->
          cupicef.Term (cupicef.type s2) (eqA y y0)) =>
       (X2 :
          (__ : cupicef.Term (cupicef.type s1) (R y x) ->
           __0 : cupicef.Term (cupicef.type s1) (R x y) ->
           cupicef.Term (cupicef.type s2) (eqA y x)) =>
        (X3 :
           (__ : cupicef.Term (cupicef.type s1) (R x y) ->
            cupicef.Term (cupicef.type s2) (eqA y x)) =>
         (X4 : cupicef.Term (cupicef.type s2) (eqA y x) =>
          (X5 :
             (y0 : cupicef.Term (cupicef.type s0) A ->
              __ : cupicef.Term (cupicef.type s1) (R x y0) ->
              __0 : cupicef.Term (cupicef.type s1) (R y0 x) ->
              cupicef.Term (cupicef.type s2) (eqA x y0)) =>
           H x y X0 X) (H x)) (X3 X0))
          (X2 X))
         (X1 x))
        (H y)).

thm flip__PreOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (PreOrder s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (PreOrder s0 s1 A
       (flip s0 s0 s2 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
             (cupicef.axiom (cupicef.type s2))
             (cupicef.univ (cupicef.axiom (cupicef.type s1))
                (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (PreOrder s0 s1 A R) =>
   match____PreOrder s0 s1 (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     A R
     (p :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (PreOrder s0 s1 A R) =>
      PreOrder s0 s1 A
        (flip s0 s0 s2 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
              (cupicef.axiom (cupicef.type s2))
              (cupicef.univ (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           R))
     (PreOrder__Reflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Reflexive s0 s1 A R) =>
      PreOrder__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      Build__PreOrder s0 s1 A
        (flip s0 s0 s2 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
              (cupicef.axiom (cupicef.type s2))
              (cupicef.univ (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           R)
        PreOrder__Reflexive0
        (cupicef.cast
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
           (cupicef.sup (cupicef.type s0) (cupicef.type s1))
           (cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
                    cupicef.I A
                    (z : cupicef.Term (cupicef.type s0) A =>
                     cupicef.prod (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                       cupicef.I
                       (flip s0 s0 s2 A A
                          (cupicef.cast
                             (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                             (cupicef.axiom (cupicef.type s2))
                             (cupicef.univ (cupicef.axiom (cupicef.type s1))
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s1)))
                                cupicef.I)
                             (cupicef.univ (cupicef.type s2)
                                (cupicef.axiom (cupicef.type s2)) cupicef.I)
                             cstr_0
                             (cupicef.univ (cupicef.type s1)
                                (cupicef.axiom (cupicef.type s1)) cupicef.I))
                          R x y)
                       (X :
                          cupicef.Term (cupicef.type s1)
                            (flip s0 s0 s2 A A
                               (cupicef.cast
                                  (cupicef.axiom
                                     (cupicef.axiom (cupicef.type s1)))
                                  (cupicef.axiom (cupicef.type s2))
                                  (cupicef.univ
                                     (cupicef.axiom (cupicef.type s1))
                                     (cupicef.axiom
                                        (cupicef.axiom (cupicef.type s1)))
                                     cupicef.I)
                                  (cupicef.univ (cupicef.type s2)
                                     (cupicef.axiom (cupicef.type s2))
                                     cupicef.I)
                                  cstr_0
                                  (cupicef.univ (cupicef.type s1)
                                     (cupicef.axiom (cupicef.type s1))
                                     cupicef.I))
                               R x y) =>
                        cupicef.prod (cupicef.type s1) (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                          cupicef.I
                          (flip s0 s0 s2 A A
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s1)))
                                (cupicef.axiom (cupicef.type s2))
                                (cupicef.univ
                                   (cupicef.axiom (cupicef.type s1))
                                   (cupicef.axiom
                                      (cupicef.axiom (cupicef.type s1)))
                                   cupicef.I)
                                (cupicef.univ (cupicef.type s2)
                                   (cupicef.axiom (cupicef.type s2))
                                   cupicef.I)
                                cstr_0
                                (cupicef.univ (cupicef.type s1)
                                   (cupicef.axiom (cupicef.type s1))
                                   cupicef.I))
                             R y z)
                          (X0 :
                             cupicef.Term (cupicef.type s1)
                               (flip s0 s0 s2 A A
                                  (cupicef.cast
                                     (cupicef.axiom
                                        (cupicef.axiom (cupicef.type s1)))
                                     (cupicef.axiom (cupicef.type s2))
                                     (cupicef.univ
                                        (cupicef.axiom (cupicef.type s1))
                                        (cupicef.axiom
                                           (cupicef.axiom (cupicef.type s1)))
                                        cupicef.I)
                                     (cupicef.univ (cupicef.type s2)
                                        (cupicef.axiom (cupicef.type s2))
                                        cupicef.I)
                                     cstr_0
                                     (cupicef.univ (cupicef.type s1)
                                        (cupicef.axiom (cupicef.type s1))
                                        cupicef.I))
                                  R y z) =>
                           R z x))))))
           (Transitive s0 s1 A
              (flip s0 s0 s2 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                    (cupicef.axiom (cupicef.type s2))
                    (cupicef.univ (cupicef.axiom (cupicef.type s1))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s2)
                       (cupicef.axiom (cupicef.type s2)) cupicef.I)
                    cstr_0
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type s0) A =>
            y : cupicef.Term (cupicef.type s0) A =>
            z : cupicef.Term (cupicef.type s0) A =>
            X :
              cupicef.Term (cupicef.type s1)
                (flip s0 s0 s2 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                      (cupicef.axiom (cupicef.type s2))
                      (cupicef.univ (cupicef.axiom (cupicef.type s1))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s1)
                         (cupicef.axiom (cupicef.type s1)) cupicef.I))
                   R x y) =>
            X0 :
              cupicef.Term (cupicef.type s1)
                (flip s0 s0 s2 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                      (cupicef.axiom (cupicef.type s2))
                      (cupicef.univ (cupicef.axiom (cupicef.type s1))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s1)
                         (cupicef.axiom (cupicef.type s1)) cupicef.I))
                   R y z) =>
            (X1 :
               (y0 : cupicef.Term (cupicef.type s0) A ->
                z0 : cupicef.Term (cupicef.type s0) A ->
                __ : cupicef.Term (cupicef.type s1) (R z y0) ->
                __0 : cupicef.Term (cupicef.type s1) (R y0 z0) ->
                cupicef.Term (cupicef.type s1) (R z z0)) =>
             (X2 :
                (z0 : cupicef.Term (cupicef.type s0) A ->
                 __ : cupicef.Term (cupicef.type s1) (R z y) ->
                 __0 : cupicef.Term (cupicef.type s1) (R y z0) ->
                 cupicef.Term (cupicef.type s1) (R z z0)) =>
              (X3 :
                 (__ : cupicef.Term (cupicef.type s1) (R z y) ->
                  __0 : cupicef.Term (cupicef.type s1) (R y x) ->
                  cupicef.Term (cupicef.type s1) (R z x)) =>
               (X4 :
                  (__ : cupicef.Term (cupicef.type s1) (R y x) ->
                   cupicef.Term (cupicef.type s1) (R z x)) =>
                (X5 : cupicef.Term (cupicef.type s1) (R z x) => X5) (X4 X))
                 (X3 X0))
                (X2 x))
               (X1 y))
              (PreOrder__Transitive0 z))))
     H.

thm flip__StrictOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s2)) (cupicef.type s4)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  H :
    cupicef.Term
      (cupicef.sup (cupicef.type s0)
         (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
      (StrictOrder s0 s1 s2 A R) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s0)
       (cupicef.sup (cupicef.type s2) (cupicef.type s3)))
    (StrictOrder s0 s3 s2 A
       (flip s0 s0 s4 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
             (cupicef.axiom (cupicef.type s4))
             (cupicef.univ (cupicef.axiom (cupicef.type s2))
                (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
             (cupicef.univ (cupicef.type s4)
                (cupicef.axiom (cupicef.type s4)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s2)) (cupicef.type s4)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   H :
     cupicef.Term
       (cupicef.sup (cupicef.type s0)
          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
       (StrictOrder s0 s1 s2 A R) =>
   match____StrictOrder s0 s1 s2
     (cupicef.sup (cupicef.type s0)
        (cupicef.sup (cupicef.type s2) (cupicef.type s3)))
     A R
     (s :
        cupicef.Term
          (cupicef.sup (cupicef.type s0)
             (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
          (StrictOrder s0 s1 s2 A R) =>
      StrictOrder s0 s3 s2 A
        (flip s0 s0 s4 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
              (cupicef.axiom (cupicef.type s4))
              (cupicef.univ (cupicef.axiom (cupicef.type s2))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
              (cupicef.univ (cupicef.type s4)
                 (cupicef.axiom (cupicef.type s4)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I))
           R))
     (StrictOrder__Irreflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Irreflexive s0 s1 s2 A R) =>
      StrictOrder__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
          (Transitive s0 s2 A R) =>
      Build__StrictOrder s0 s3 s2 A
        (flip s0 s0 s4 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
              (cupicef.axiom (cupicef.type s4))
              (cupicef.univ (cupicef.axiom (cupicef.type s2))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s2))) cupicef.I)
              (cupicef.univ (cupicef.type s4)
                 (cupicef.axiom (cupicef.type s4)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I))
           R)
        StrictOrder__Irreflexive0
        (cupicef.cast
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))))))
           (cupicef.sup (cupicef.type s0) (cupicef.type s2))
           (cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2)))))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2))))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2)))))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s0)
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
                    cupicef.I A
                    (z : cupicef.Term (cupicef.type s0) A =>
                     cupicef.prod (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))
                       (cupicef.rule (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
                       cupicef.I
                       (flip s0 s0 s4 A A
                          (cupicef.cast
                             (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                             (cupicef.axiom (cupicef.type s4))
                             (cupicef.univ (cupicef.axiom (cupicef.type s2))
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s2)))
                                cupicef.I)
                             (cupicef.univ (cupicef.type s4)
                                (cupicef.axiom (cupicef.type s4)) cupicef.I)
                             cstr_0
                             (cupicef.univ (cupicef.type s2)
                                (cupicef.axiom (cupicef.type s2)) cupicef.I))
                          R x y)
                       (X :
                          cupicef.Term (cupicef.type s2)
                            (flip s0 s0 s4 A A
                               (cupicef.cast
                                  (cupicef.axiom
                                     (cupicef.axiom (cupicef.type s2)))
                                  (cupicef.axiom (cupicef.type s4))
                                  (cupicef.univ
                                     (cupicef.axiom (cupicef.type s2))
                                     (cupicef.axiom
                                        (cupicef.axiom (cupicef.type s2)))
                                     cupicef.I)
                                  (cupicef.univ (cupicef.type s4)
                                     (cupicef.axiom (cupicef.type s4))
                                     cupicef.I)
                                  cstr_0
                                  (cupicef.univ (cupicef.type s2)
                                     (cupicef.axiom (cupicef.type s2))
                                     cupicef.I))
                               R x y) =>
                        cupicef.prod (cupicef.type s2) (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2))
                          cupicef.I
                          (flip s0 s0 s4 A A
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s2)))
                                (cupicef.axiom (cupicef.type s4))
                                (cupicef.univ
                                   (cupicef.axiom (cupicef.type s2))
                                   (cupicef.axiom
                                      (cupicef.axiom (cupicef.type s2)))
                                   cupicef.I)
                                (cupicef.univ (cupicef.type s4)
                                   (cupicef.axiom (cupicef.type s4))
                                   cupicef.I)
                                cstr_0
                                (cupicef.univ (cupicef.type s2)
                                   (cupicef.axiom (cupicef.type s2))
                                   cupicef.I))
                             R y z)
                          (X0 :
                             cupicef.Term (cupicef.type s2)
                               (flip s0 s0 s4 A A
                                  (cupicef.cast
                                     (cupicef.axiom
                                        (cupicef.axiom (cupicef.type s2)))
                                     (cupicef.axiom (cupicef.type s4))
                                     (cupicef.univ
                                        (cupicef.axiom (cupicef.type s2))
                                        (cupicef.axiom
                                           (cupicef.axiom (cupicef.type s2)))
                                        cupicef.I)
                                     (cupicef.univ (cupicef.type s4)
                                        (cupicef.axiom (cupicef.type s4))
                                        cupicef.I)
                                     cstr_0
                                     (cupicef.univ (cupicef.type s2)
                                        (cupicef.axiom (cupicef.type s2))
                                        cupicef.I))
                                  R y z) =>
                           R z x))))))
           (Transitive s0 s2 A
              (flip s0 s0 s4 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                    (cupicef.axiom (cupicef.type s4))
                    (cupicef.univ (cupicef.axiom (cupicef.type s2))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I)
                    cstr_0
                    (cupicef.univ (cupicef.type s2)
                       (cupicef.axiom (cupicef.type s2)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type s0) A =>
            y : cupicef.Term (cupicef.type s0) A =>
            z : cupicef.Term (cupicef.type s0) A =>
            X :
              cupicef.Term (cupicef.type s2)
                (flip s0 s0 s4 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                      (cupicef.axiom (cupicef.type s4))
                      (cupicef.univ (cupicef.axiom (cupicef.type s2))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s4)
                         (cupicef.axiom (cupicef.type s4)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I))
                   R x y) =>
            X0 :
              cupicef.Term (cupicef.type s2)
                (flip s0 s0 s4 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                      (cupicef.axiom (cupicef.type s4))
                      (cupicef.univ (cupicef.axiom (cupicef.type s2))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s2)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s4)
                         (cupicef.axiom (cupicef.type s4)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I))
                   R y z) =>
            (X1 :
               (y0 : cupicef.Term (cupicef.type s0) A ->
                z0 : cupicef.Term (cupicef.type s0) A ->
                __ : cupicef.Term (cupicef.type s2) (R z y0) ->
                __0 : cupicef.Term (cupicef.type s2) (R y0 z0) ->
                cupicef.Term (cupicef.type s2) (R z z0)) =>
             (X2 :
                (z0 : cupicef.Term (cupicef.type s0) A ->
                 __ : cupicef.Term (cupicef.type s2) (R z y) ->
                 __0 : cupicef.Term (cupicef.type s2) (R y z0) ->
                 cupicef.Term (cupicef.type s2) (R z z0)) =>
              (X3 :
                 (__ : cupicef.Term (cupicef.type s2) (R z y) ->
                  __0 : cupicef.Term (cupicef.type s2) (R y x) ->
                  cupicef.Term (cupicef.type s2) (R z x)) =>
               (X4 :
                  (__ : cupicef.Term (cupicef.type s2) (R y x) ->
                   cupicef.Term (cupicef.type s2) (R z x)) =>
                (X5 : cupicef.Term (cupicef.type s2) (R z x) => X5) (X4 X))
                 (X3 X0))
                (X2 x))
               (X1 y))
              (StrictOrder__Transitive0 z))))
     H.

thm flip__PER :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (PER s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (PER s0 s1 A
       (flip s0 s0 s2 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
             (cupicef.axiom (cupicef.type s2))
             (cupicef.univ (cupicef.axiom (cupicef.type s1))
                (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (PER s0 s1 A R) =>
   match____PER s0 s1 (cupicef.sup (cupicef.type s0) (cupicef.type s1)) A R
     (p :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (PER s0 s1 A R) =>
      PER s0 s1 A
        (flip s0 s0 s2 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
              (cupicef.axiom (cupicef.type s2))
              (cupicef.univ (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           R))
     (PER__Symmetric0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Symmetric s0 s1 A R) =>
      PER__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      Build__PER s0 s1 A
        (flip s0 s0 s2 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
              (cupicef.axiom (cupicef.type s2))
              (cupicef.univ (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           R)
        (cupicef.cast
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
           (cupicef.sup (cupicef.type s0) (cupicef.type s1))
           (cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I
                    (flip s0 s0 s2 A A
                       (cupicef.cast
                          (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                          (cupicef.axiom (cupicef.type s2))
                          (cupicef.univ (cupicef.axiom (cupicef.type s1))
                             (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type s2)
                             (cupicef.axiom (cupicef.type s2)) cupicef.I)
                          cstr_0
                          (cupicef.univ (cupicef.type s1)
                             (cupicef.axiom (cupicef.type s1)) cupicef.I))
                       R x y)
                    (X :
                       cupicef.Term (cupicef.type s1)
                         (flip s0 s0 s2 A A
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.axiom (cupicef.type s1)))
                               (cupicef.axiom (cupicef.type s2))
                               (cupicef.univ
                                  (cupicef.axiom (cupicef.type s1))
                                  (cupicef.axiom
                                     (cupicef.axiom (cupicef.type s1)))
                                  cupicef.I)
                               (cupicef.univ (cupicef.type s2)
                                  (cupicef.axiom (cupicef.type s2)) cupicef.I)
                               cstr_0
                               (cupicef.univ (cupicef.type s1)
                                  (cupicef.axiom (cupicef.type s1)) cupicef.I))
                            R x y) =>
                     R x y))))
           (Symmetric s0 s1 A
              (flip s0 s0 s2 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                    (cupicef.axiom (cupicef.type s2))
                    (cupicef.univ (cupicef.axiom (cupicef.type s1))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s2)
                       (cupicef.axiom (cupicef.type s2)) cupicef.I)
                    cstr_0
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type s0) A =>
            y : cupicef.Term (cupicef.type s0) A =>
            X :
              cupicef.Term (cupicef.type s1)
                (flip s0 s0 s2 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                      (cupicef.axiom (cupicef.type s2))
                      (cupicef.univ (cupicef.axiom (cupicef.type s1))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s1)
                         (cupicef.axiom (cupicef.type s1)) cupicef.I))
                   R x y) =>
            (X0 :
               (y0 : cupicef.Term (cupicef.type s0) A ->
                z : cupicef.Term (cupicef.type s0) A ->
                __ : cupicef.Term (cupicef.type s1) (R y y0) ->
                __0 : cupicef.Term (cupicef.type s1) (R y0 z) ->
                cupicef.Term (cupicef.type s1) (R y z)) =>
             (X1 :
                (y0 : cupicef.Term (cupicef.type s0) A ->
                 __ : cupicef.Term (cupicef.type s1) (R y y0) ->
                 cupicef.Term (cupicef.type s1) (R y0 y)) =>
              (X2 :
                 (__ : cupicef.Term (cupicef.type s1) (R y x) ->
                  cupicef.Term (cupicef.type s1) (R x y)) =>
               (X3 : cupicef.Term (cupicef.type s1) (R x y) => X3) (X2 X))
                (X1 x))
               (PER__Symmetric0 y))
              (PER__Transitive0 y)))
        (cupicef.cast
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
           (cupicef.sup (cupicef.type s0) (cupicef.type s1))
           (cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
                    cupicef.I A
                    (z : cupicef.Term (cupicef.type s0) A =>
                     cupicef.prod (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                       cupicef.I
                       (flip s0 s0 s2 A A
                          (cupicef.cast
                             (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                             (cupicef.axiom (cupicef.type s2))
                             (cupicef.univ (cupicef.axiom (cupicef.type s1))
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s1)))
                                cupicef.I)
                             (cupicef.univ (cupicef.type s2)
                                (cupicef.axiom (cupicef.type s2)) cupicef.I)
                             cstr_0
                             (cupicef.univ (cupicef.type s1)
                                (cupicef.axiom (cupicef.type s1)) cupicef.I))
                          R x y)
                       (X :
                          cupicef.Term (cupicef.type s1)
                            (flip s0 s0 s2 A A
                               (cupicef.cast
                                  (cupicef.axiom
                                     (cupicef.axiom (cupicef.type s1)))
                                  (cupicef.axiom (cupicef.type s2))
                                  (cupicef.univ
                                     (cupicef.axiom (cupicef.type s1))
                                     (cupicef.axiom
                                        (cupicef.axiom (cupicef.type s1)))
                                     cupicef.I)
                                  (cupicef.univ (cupicef.type s2)
                                     (cupicef.axiom (cupicef.type s2))
                                     cupicef.I)
                                  cstr_0
                                  (cupicef.univ (cupicef.type s1)
                                     (cupicef.axiom (cupicef.type s1))
                                     cupicef.I))
                               R x y) =>
                        cupicef.prod (cupicef.type s1) (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                          cupicef.I
                          (flip s0 s0 s2 A A
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s1)))
                                (cupicef.axiom (cupicef.type s2))
                                (cupicef.univ
                                   (cupicef.axiom (cupicef.type s1))
                                   (cupicef.axiom
                                      (cupicef.axiom (cupicef.type s1)))
                                   cupicef.I)
                                (cupicef.univ (cupicef.type s2)
                                   (cupicef.axiom (cupicef.type s2))
                                   cupicef.I)
                                cstr_0
                                (cupicef.univ (cupicef.type s1)
                                   (cupicef.axiom (cupicef.type s1))
                                   cupicef.I))
                             R y z)
                          (X0 :
                             cupicef.Term (cupicef.type s1)
                               (flip s0 s0 s2 A A
                                  (cupicef.cast
                                     (cupicef.axiom
                                        (cupicef.axiom (cupicef.type s1)))
                                     (cupicef.axiom (cupicef.type s2))
                                     (cupicef.univ
                                        (cupicef.axiom (cupicef.type s1))
                                        (cupicef.axiom
                                           (cupicef.axiom (cupicef.type s1)))
                                        cupicef.I)
                                     (cupicef.univ (cupicef.type s2)
                                        (cupicef.axiom (cupicef.type s2))
                                        cupicef.I)
                                     cstr_0
                                     (cupicef.univ (cupicef.type s1)
                                        (cupicef.axiom (cupicef.type s1))
                                        cupicef.I))
                                  R y z) =>
                           R z x))))))
           (Transitive s0 s1 A
              (flip s0 s0 s2 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                    (cupicef.axiom (cupicef.type s2))
                    (cupicef.univ (cupicef.axiom (cupicef.type s1))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s2)
                       (cupicef.axiom (cupicef.type s2)) cupicef.I)
                    cstr_0
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type s0) A =>
            y : cupicef.Term (cupicef.type s0) A =>
            z : cupicef.Term (cupicef.type s0) A =>
            X :
              cupicef.Term (cupicef.type s1)
                (flip s0 s0 s2 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                      (cupicef.axiom (cupicef.type s2))
                      (cupicef.univ (cupicef.axiom (cupicef.type s1))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s1)
                         (cupicef.axiom (cupicef.type s1)) cupicef.I))
                   R x y) =>
            X0 :
              cupicef.Term (cupicef.type s1)
                (flip s0 s0 s2 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                      (cupicef.axiom (cupicef.type s2))
                      (cupicef.univ (cupicef.axiom (cupicef.type s1))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s1)
                         (cupicef.axiom (cupicef.type s1)) cupicef.I))
                   R y z) =>
            (X1 :
               (y0 : cupicef.Term (cupicef.type s0) A ->
                z0 : cupicef.Term (cupicef.type s0) A ->
                __ : cupicef.Term (cupicef.type s1) (R z y0) ->
                __0 : cupicef.Term (cupicef.type s1) (R y0 z0) ->
                cupicef.Term (cupicef.type s1) (R z z0)) =>
             (X2 :
                (z0 : cupicef.Term (cupicef.type s0) A ->
                 __ : cupicef.Term (cupicef.type s1) (R z y) ->
                 __0 : cupicef.Term (cupicef.type s1) (R y z0) ->
                 cupicef.Term (cupicef.type s1) (R z z0)) =>
              (X3 :
                 (__ : cupicef.Term (cupicef.type s1) (R z y) ->
                  __0 : cupicef.Term (cupicef.type s1) (R y x) ->
                  cupicef.Term (cupicef.type s1) (R z x)) =>
               (X4 :
                  (__ : cupicef.Term (cupicef.type s1) (R y x) ->
                   cupicef.Term (cupicef.type s1) (R z x)) =>
                (X5 : cupicef.Term (cupicef.type s1) (R z x) => X5) (X4 X))
                 (X3 X0))
                (X2 x))
               (X1 y))
              (PER__Transitive0 z))))
     H.

thm flip__Equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Equivalence s0 s1 A
       (flip s0 s0 s2 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
             (cupicef.axiom (cupicef.type s2))
             (cupicef.univ (cupicef.axiom (cupicef.type s1))
                (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
             (cupicef.univ (cupicef.type s2)
                (cupicef.axiom (cupicef.type s2)) cupicef.I)
             cstr_0
             (cupicef.univ (cupicef.type s1)
                (cupicef.axiom (cupicef.type s1)) cupicef.I))
          R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s2)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A R) =>
   match____Equivalence s0 s1
     (cupicef.sup (cupicef.type s0) (cupicef.type s1)) A R
     (e :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Equivalence s0 s1 A R) =>
      Equivalence s0 s1 A
        (flip s0 s0 s2 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
              (cupicef.axiom (cupicef.type s2))
              (cupicef.univ (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           R))
     (Equivalence__Reflexive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Reflexive s0 s1 A R) =>
      Equivalence__Symmetric0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Symmetric s0 s1 A R) =>
      Equivalence__Transitive0 :
        cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
          (Transitive s0 s1 A R) =>
      Build__Equivalence s0 s1 A
        (flip s0 s0 s2 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
              (cupicef.axiom (cupicef.type s2))
              (cupicef.univ (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
              (cupicef.univ (cupicef.type s2)
                 (cupicef.axiom (cupicef.type s2)) cupicef.I)
              cstr_0
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           R)
        Equivalence__Reflexive0
        (cupicef.cast
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
           (cupicef.sup (cupicef.type s0) (cupicef.type s1))
           (cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I
                    (flip s0 s0 s2 A A
                       (cupicef.cast
                          (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                          (cupicef.axiom (cupicef.type s2))
                          (cupicef.univ (cupicef.axiom (cupicef.type s1))
                             (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type s2)
                             (cupicef.axiom (cupicef.type s2)) cupicef.I)
                          cstr_0
                          (cupicef.univ (cupicef.type s1)
                             (cupicef.axiom (cupicef.type s1)) cupicef.I))
                       R x y)
                    (X :
                       cupicef.Term (cupicef.type s1)
                         (flip s0 s0 s2 A A
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.axiom (cupicef.type s1)))
                               (cupicef.axiom (cupicef.type s2))
                               (cupicef.univ
                                  (cupicef.axiom (cupicef.type s1))
                                  (cupicef.axiom
                                     (cupicef.axiom (cupicef.type s1)))
                                  cupicef.I)
                               (cupicef.univ (cupicef.type s2)
                                  (cupicef.axiom (cupicef.type s2)) cupicef.I)
                               cstr_0
                               (cupicef.univ (cupicef.type s1)
                                  (cupicef.axiom (cupicef.type s1)) cupicef.I))
                            R x y) =>
                     R x y))))
           (Symmetric s0 s1 A
              (flip s0 s0 s2 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                    (cupicef.axiom (cupicef.type s2))
                    (cupicef.univ (cupicef.axiom (cupicef.type s1))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s2)
                       (cupicef.axiom (cupicef.type s2)) cupicef.I)
                    cstr_0
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type s0) A =>
            y : cupicef.Term (cupicef.type s0) A =>
            X :
              cupicef.Term (cupicef.type s1)
                (flip s0 s0 s2 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                      (cupicef.axiom (cupicef.type s2))
                      (cupicef.univ (cupicef.axiom (cupicef.type s1))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s1)
                         (cupicef.axiom (cupicef.type s1)) cupicef.I))
                   R x y) =>
            (X0 :
               (y0 : cupicef.Term (cupicef.type s0) A ->
                z : cupicef.Term (cupicef.type s0) A ->
                __ : cupicef.Term (cupicef.type s1) (R y y0) ->
                __0 : cupicef.Term (cupicef.type s1) (R y0 z) ->
                cupicef.Term (cupicef.type s1) (R y z)) =>
             (X1 :
                (y0 : cupicef.Term (cupicef.type s0) A ->
                 __ : cupicef.Term (cupicef.type s1) (R y y0) ->
                 cupicef.Term (cupicef.type s1) (R y0 y)) =>
              (X2 :
                 (__ : cupicef.Term (cupicef.type s1) (R y x) ->
                  cupicef.Term (cupicef.type s1) (R x y)) =>
               (X3 : cupicef.Term (cupicef.type s1) (R x y) => X3) (X2 X))
                (X1 x))
               (Equivalence__Symmetric0 y))
              (Equivalence__Transitive0 y)))
        (cupicef.cast
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
           (cupicef.sup (cupicef.type s0) (cupicef.type s1))
           (cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s0)
                    (cupicef.rule (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
                    cupicef.I A
                    (z : cupicef.Term (cupicef.type s0) A =>
                     cupicef.prod (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                       (cupicef.rule (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                       cupicef.I
                       (flip s0 s0 s2 A A
                          (cupicef.cast
                             (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                             (cupicef.axiom (cupicef.type s2))
                             (cupicef.univ (cupicef.axiom (cupicef.type s1))
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s1)))
                                cupicef.I)
                             (cupicef.univ (cupicef.type s2)
                                (cupicef.axiom (cupicef.type s2)) cupicef.I)
                             cstr_0
                             (cupicef.univ (cupicef.type s1)
                                (cupicef.axiom (cupicef.type s1)) cupicef.I))
                          R x y)
                       (X :
                          cupicef.Term (cupicef.type s1)
                            (flip s0 s0 s2 A A
                               (cupicef.cast
                                  (cupicef.axiom
                                     (cupicef.axiom (cupicef.type s1)))
                                  (cupicef.axiom (cupicef.type s2))
                                  (cupicef.univ
                                     (cupicef.axiom (cupicef.type s1))
                                     (cupicef.axiom
                                        (cupicef.axiom (cupicef.type s1)))
                                     cupicef.I)
                                  (cupicef.univ (cupicef.type s2)
                                     (cupicef.axiom (cupicef.type s2))
                                     cupicef.I)
                                  cstr_0
                                  (cupicef.univ (cupicef.type s1)
                                     (cupicef.axiom (cupicef.type s1))
                                     cupicef.I))
                               R x y) =>
                        cupicef.prod (cupicef.type s1) (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                          cupicef.I
                          (flip s0 s0 s2 A A
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s1)))
                                (cupicef.axiom (cupicef.type s2))
                                (cupicef.univ
                                   (cupicef.axiom (cupicef.type s1))
                                   (cupicef.axiom
                                      (cupicef.axiom (cupicef.type s1)))
                                   cupicef.I)
                                (cupicef.univ (cupicef.type s2)
                                   (cupicef.axiom (cupicef.type s2))
                                   cupicef.I)
                                cstr_0
                                (cupicef.univ (cupicef.type s1)
                                   (cupicef.axiom (cupicef.type s1))
                                   cupicef.I))
                             R y z)
                          (X0 :
                             cupicef.Term (cupicef.type s1)
                               (flip s0 s0 s2 A A
                                  (cupicef.cast
                                     (cupicef.axiom
                                        (cupicef.axiom (cupicef.type s1)))
                                     (cupicef.axiom (cupicef.type s2))
                                     (cupicef.univ
                                        (cupicef.axiom (cupicef.type s1))
                                        (cupicef.axiom
                                           (cupicef.axiom (cupicef.type s1)))
                                        cupicef.I)
                                     (cupicef.univ (cupicef.type s2)
                                        (cupicef.axiom (cupicef.type s2))
                                        cupicef.I)
                                     cstr_0
                                     (cupicef.univ (cupicef.type s1)
                                        (cupicef.axiom (cupicef.type s1))
                                        cupicef.I))
                                  R y z) =>
                           R z x))))))
           (Transitive s0 s1 A
              (flip s0 s0 s2 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                    (cupicef.axiom (cupicef.type s2))
                    (cupicef.univ (cupicef.axiom (cupicef.type s1))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s2)
                       (cupicef.axiom (cupicef.type s2)) cupicef.I)
                    cstr_0
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type s0) A =>
            y : cupicef.Term (cupicef.type s0) A =>
            z : cupicef.Term (cupicef.type s0) A =>
            X :
              cupicef.Term (cupicef.type s1)
                (flip s0 s0 s2 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                      (cupicef.axiom (cupicef.type s2))
                      (cupicef.univ (cupicef.axiom (cupicef.type s1))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s1)
                         (cupicef.axiom (cupicef.type s1)) cupicef.I))
                   R x y) =>
            X0 :
              cupicef.Term (cupicef.type s1)
                (flip s0 s0 s2 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                      (cupicef.axiom (cupicef.type s2))
                      (cupicef.univ (cupicef.axiom (cupicef.type s1))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s2)
                         (cupicef.axiom (cupicef.type s2)) cupicef.I)
                      cstr_0
                      (cupicef.univ (cupicef.type s1)
                         (cupicef.axiom (cupicef.type s1)) cupicef.I))
                   R y z) =>
            (X1 :
               (y0 : cupicef.Term (cupicef.type s0) A ->
                z0 : cupicef.Term (cupicef.type s0) A ->
                __ : cupicef.Term (cupicef.type s1) (R z y0) ->
                __0 : cupicef.Term (cupicef.type s1) (R y0 z0) ->
                cupicef.Term (cupicef.type s1) (R z z0)) =>
             (X2 :
                (z0 : cupicef.Term (cupicef.type s0) A ->
                 __ : cupicef.Term (cupicef.type s1) (R z y) ->
                 __0 : cupicef.Term (cupicef.type s1) (R y z0) ->
                 cupicef.Term (cupicef.type s1) (R z z0)) =>
              (X3 :
                 (__ : cupicef.Term (cupicef.type s1) (R z y) ->
                  __0 : cupicef.Term (cupicef.type s1) (R y x) ->
                  cupicef.Term (cupicef.type s1) (R z x)) =>
               (X4 :
                  (__ : cupicef.Term (cupicef.type s1) (R y x) ->
                   cupicef.Term (cupicef.type s1) (R z x)) =>
                (X5 : cupicef.Term (cupicef.type s1) (R z x) => X5) (X4 X))
                 (X3 X0))
                (X2 x))
               (X1 y))
              (Equivalence__Transitive0 z))))
     H.

thm complement__Irreflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
      (Reflexive s0 s3 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Irreflexive s0 s1 s2 A (complement s0 s3 s2 A R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
       (Reflexive s0 s3 A R) =>
   cupicef.cast (cupicef.rule (cupicef.type s0) (cupicef.type s1))
     (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     (cupicef.prod (cupicef.type s0) (cupicef.type s1)
        (cupicef.rule (cupicef.type s0) (cupicef.type s1)) cupicef.I A
        (x : cupicef.Term (cupicef.type s0) A =>
         complement s0 s2 s1 A (complement s0 s3 s2 A R) x x))
     (Irreflexive s0 s1 s2 A (complement s0 s3 s2 A R)) cupicef.I
     (x : cupicef.Term (cupicef.type s0) A =>
      cupicef.cast (cupicef.rule (cupicef.type s2) cupicef.prop)
        (cupicef.type s1)
        (cupicef.prod (cupicef.type s2) cupicef.prop
           (cupicef.rule (cupicef.type s2) cupicef.prop) cupicef.I
           (complement s0 s3 s2 A R x x)
           (X : cupicef.Term (cupicef.type s2) (complement s0 s3 s2 A R x x) =>
            Coq__Init__Logic.False))
        (complement s0 s2 s1 A (complement s0 s3 s2 A R) x x) cupicef.I
        (X : cupicef.Term (cupicef.type s2) (complement s0 s3 s2 A R x x) =>
         (X0 : cupicef.Term (cupicef.type s3) (R x x) =>
          (H0 : cupicef.Term cupicef.prop Coq__Init__Logic.False => H0)
            (X X0))
           (H x))).

thm complement__Symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
      (Symmetric s0 s2 A R) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Symmetric s0 s1 A (complement s0 s2 s1 A R))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
       (crelation s0 s2 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s2))
       (Symmetric s0 s2 A R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
     (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     (cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
        cupicef.I A
        (x : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s0)
           (cupicef.rule (cupicef.type s1) (cupicef.type s1))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
           cupicef.I A
           (y : cupicef.Term (cupicef.type s0) A =>
            cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I
              (complement s0 s2 s1 A R x y)
              (X :
                 cupicef.Term (cupicef.type s1) (complement s0 s2 s1 A R x y) =>
               complement s0 s2 s1 A R y x))))
     (Symmetric s0 s1 A (complement s0 s2 s1 A R)) cupicef.I
     (x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      X : cupicef.Term (cupicef.type s1) (complement s0 s2 s1 A R x y) =>
      cupicef.cast (cupicef.rule (cupicef.type s2) cupicef.prop)
        (cupicef.type s1)
        (cupicef.prod (cupicef.type s2) cupicef.prop
           (cupicef.rule (cupicef.type s2) cupicef.prop) cupicef.I (R y x)
           (X0 : cupicef.Term (cupicef.type s2) (R y x) =>
            Coq__Init__Logic.False))
        (complement s0 s2 s1 A R y x) cupicef.I
        (X0 : cupicef.Term (cupicef.type s2) (R y x) =>
         (X1 :
            (y0 : cupicef.Term (cupicef.type s0) A ->
             __ : cupicef.Term (cupicef.type s2) (R y y0) ->
             cupicef.Term (cupicef.type s2) (R y0 y)) =>
          (X2 :
             (__ : cupicef.Term (cupicef.type s2) (R y y) ->
              cupicef.Term (cupicef.type s2) (R y y)) =>
           (X3 :
              (__ : cupicef.Term (cupicef.type s2) (R y x) ->
               cupicef.Term (cupicef.type s2) (R x y)) =>
            (X4 : cupicef.Term (cupicef.type s2) (R x y) =>
             (H0 : cupicef.Term cupicef.prop Coq__Init__Logic.False => H0)
               (X X4))
              (X3 X0))
             (X1 x))
            (X1 y))
           (H y))).

def RewriteRelation :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  RA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Univ cupicef.prop.

#TYPE_CLASS RewriteRelation.

def Build__RewriteRelation :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  RA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  cupicef.Term cupicef.prop (RewriteRelation s0 s1 A RA).

[ ] cupicef.code_guarded? _ (Build__RewriteRelation _ _ _ _) --> cupicef.guarded.

def match____RewriteRelation :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type s0) ->
  RA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  P :
    (cupicef.Term cupicef.prop (RewriteRelation s0 s1 A RA) -> cupicef.Univ s) ->
  case__Build__RewriteRelation :
    cupicef.Term s (P (Build__RewriteRelation s0 s1 A RA)) ->
  x : cupicef.Term cupicef.prop (RewriteRelation s0 s1 A RA) ->
  cupicef.Term s (P x).

[ s0, s1, s, A, RA, P, case__Build__RewriteRelation]
  match____RewriteRelation s0 s1 s A RA P case__Build__RewriteRelation
    (Build__RewriteRelation s0 s1 A RA)
  -->
  case__Build__RewriteRelation.

[ s0, s1, s, A, RA, P, s']
  match____RewriteRelation s0 s1 s A RA
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____RewriteRelation s0 s1 s' A RA (x => P x).

def equivalence__rewrite__crelation :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  H :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
      (Equivalence s0 s1 A eqA) ->
  cupicef.Term cupicef.prop (RewriteRelation s0 s1 A eqA)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
       (crelation s0 s1 A) =>
   H :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
       (Equivalence s0 s1 A eqA) =>
   Build__RewriteRelation s0 s1 A eqA.

#TYPE_CLASS_INSTANCE equivalence__rewrite__crelation.

def eq__Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0)
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1 A
       (cupicef.cast
          (cupicef.rule (cupicef.type s0)
             (cupicef.rule (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type s0)
             (cupicef.rule (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type s0)
                (cupicef.rule (cupicef.type s0)
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I A
             (x : cupicef.Term (cupicef.type s0) A =>
              cupicef.prod (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type s0)
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I A
                (__ : cupicef.Term (cupicef.type s0) A =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1 A) cupicef.I
          (Coq__Init__Logic.eq
             (cupicef.cast (cupicef.axiom (cupicef.type s0))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cstr_0 A))))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0)
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   Coq__Init__Logic.eq__refl
     (cupicef.cast (cupicef.axiom (cupicef.type s0))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cstr_0 A).

#TYPE_CLASS_INSTANCE eq__Reflexive.

def eq__Symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0)
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0)
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Symmetric s0 s1 A
       (cupicef.cast
          (cupicef.rule (cupicef.type s0)
             (cupicef.rule (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type s0)
             (cupicef.rule (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type s0)
                (cupicef.rule (cupicef.type s0)
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I A
             (x : cupicef.Term (cupicef.type s0) A =>
              cupicef.prod (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type s0)
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I A
                (__ : cupicef.Term (cupicef.type s0) A =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1 A) cupicef.I
          (Coq__Init__Logic.eq
             (cupicef.cast (cupicef.axiom (cupicef.type s0))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cstr_0 A))))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0)
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0)
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   Coq__Init__Logic.eq__sym
     (cupicef.cast (cupicef.axiom (cupicef.type s0))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cstr_1 A).

#TYPE_CLASS_INSTANCE eq__Symmetric.

def eq__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0)
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0)
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Transitive s0 s1 A
       (cupicef.cast
          (cupicef.rule (cupicef.type s0)
             (cupicef.rule (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type s0)
             (cupicef.rule (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type s0)
                (cupicef.rule (cupicef.type s0)
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I A
             (x : cupicef.Term (cupicef.type s0) A =>
              cupicef.prod (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type s0)
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I A
                (__ : cupicef.Term (cupicef.type s0) A =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1 A) cupicef.I
          (Coq__Init__Logic.eq
             (cupicef.cast (cupicef.axiom (cupicef.type s0))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cstr_0 A))))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0)
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0)
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   Coq__Init__Logic.eq__trans
     (cupicef.cast (cupicef.axiom (cupicef.type s0))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cstr_1 A).

#TYPE_CLASS_INSTANCE eq__Transitive.

def eq__equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0)
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s0)
         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Equivalence s0 s1 A
       (cupicef.cast
          (cupicef.rule (cupicef.type s0)
             (cupicef.rule (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type s0)
             (cupicef.rule (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type s0)
                (cupicef.rule (cupicef.type s0)
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I A
             (x : cupicef.Term (cupicef.type s0) A =>
              cupicef.prod (cupicef.type s0)
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type s0)
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I A
                (__ : cupicef.Term (cupicef.type s0) A =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1 A) cupicef.I
          (Coq__Init__Logic.eq
             (cupicef.cast (cupicef.axiom (cupicef.type s0))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cstr_0 A))))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0)
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s0)
          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   Build__Equivalence s0 s1 A
     (cupicef.cast
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.type (cupicef.s cupicef.z))))
        (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
        (cupicef.prod (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.type (cupicef.s cupicef.z))))
           cupicef.I A
           (x : cupicef.Term (cupicef.type s0) A =>
            cupicef.prod (cupicef.type s0)
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I A
              (__ : cupicef.Term (cupicef.type s0) A =>
               cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (crelation s0 s1 A) cupicef.I
        (Coq__Init__Logic.eq
           (cupicef.cast (cupicef.axiom (cupicef.type s0))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s0)) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cstr_0 A)))
     (eq__Reflexive s0 s1 cstr_0 A) (eq__Symmetric s0 s1 cstr_0 cstr_1 A)
     (eq__Transitive s0 s1 cstr_0 cstr_1 A).

#TYPE_CLASS_INSTANCE eq__equivalence.

def RewriteRelation__instance__0 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  cupicef.Term cupicef.prop
    (RewriteRelation s0 s1
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       (cupicef.cast
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (A : cupicef.Univ cupicef.prop =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (B : cupicef.Univ cupicef.prop =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type s0))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                cstr_0
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          cupicef.I Coq__Program__Basics.impl))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   Build__RewriteRelation s0 s1
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type s0))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        cstr_0
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I))
     (cupicef.cast
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))))
        (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))))
           cupicef.I
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (A : cupicef.Univ cupicef.prop =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (B : cupicef.Univ cupicef.prop =>
               cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (crelation s0 s1
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type s0))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s0)) cupicef.I)
              cstr_0
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        cupicef.I Coq__Program__Basics.impl).

#TYPE_CLASS_INSTANCE RewriteRelation__instance__0.

def RewriteRelation__instance__1 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  cupicef.Term cupicef.prop
    (RewriteRelation s0 s1
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       (cupicef.cast
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (A : cupicef.Univ cupicef.prop =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (B : cupicef.Univ cupicef.prop =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type s0))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                cstr_0
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          cupicef.I Coq__Init__Logic.iff))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   Build__RewriteRelation s0 s1
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type s0))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        cstr_0
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I))
     (cupicef.cast
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))))
        (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))))
           cupicef.I
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (A : cupicef.Univ cupicef.prop =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (B : cupicef.Univ cupicef.prop =>
               cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (crelation s0 s1
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type s0))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s0)) cupicef.I)
              cstr_0
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        cupicef.I Coq__Init__Logic.iff).

#TYPE_CLASS_INSTANCE RewriteRelation__instance__1.

def impl__Reflexive__obligation__1 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  x : cupicef.Univ cupicef.prop ->
  cupicef.Term cupicef.prop (Coq__Program__Basics.impl x x)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   x : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop x =>
   H.

def impl__Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       (cupicef.cast
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (A : cupicef.Univ cupicef.prop =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (B : cupicef.Univ cupicef.prop =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type s0))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                cstr_0
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          cupicef.I Coq__Program__Basics.impl))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   impl__Reflexive__obligation__1 s0 s1 cstr_0.

#TYPE_CLASS_INSTANCE impl__Reflexive.

def impl__Transitive__obligation__1 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  x : cupicef.Univ cupicef.prop ->
  y : cupicef.Univ cupicef.prop ->
  z : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (Coq__Program__Basics.impl x y) ->
  __0 : cupicef.Term cupicef.prop (Coq__Program__Basics.impl y z) ->
  cupicef.Term cupicef.prop (Coq__Program__Basics.impl x z)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   x : cupicef.Univ cupicef.prop =>
   y : cupicef.Univ cupicef.prop =>
   z : cupicef.Univ cupicef.prop =>
   H : (__ : cupicef.Term cupicef.prop x -> cupicef.Term cupicef.prop y) =>
   H0 : (__ : cupicef.Term cupicef.prop y -> cupicef.Term cupicef.prop z) =>
   H1 : cupicef.Term cupicef.prop x =>
   H0 (H H1).

def impl__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Transitive s0 s1
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       (cupicef.cast
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (A : cupicef.Univ cupicef.prop =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (B : cupicef.Univ cupicef.prop =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type s0))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                cstr_0
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          cupicef.I Coq__Program__Basics.impl))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   impl__Transitive__obligation__1 s0 s1 cstr_0.

#TYPE_CLASS_INSTANCE impl__Transitive.

def iff__Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       (cupicef.cast
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (A : cupicef.Univ cupicef.prop =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (B : cupicef.Univ cupicef.prop =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type s0))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                cstr_0
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          cupicef.I Coq__Init__Logic.iff))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   Coq__Init__Logic.iff__refl.

#TYPE_CLASS_INSTANCE iff__Reflexive.

def iff__Symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Symmetric s0 s1
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       (cupicef.cast
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (A : cupicef.Univ cupicef.prop =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (B : cupicef.Univ cupicef.prop =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type s0))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                cstr_0
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          cupicef.I Coq__Init__Logic.iff))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   Coq__Init__Logic.iff__sym.

#TYPE_CLASS_INSTANCE iff__Symmetric.

def iff__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Transitive s0 s1
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       (cupicef.cast
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (A : cupicef.Univ cupicef.prop =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (B : cupicef.Univ cupicef.prop =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type s0))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                cstr_0
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          cupicef.I Coq__Init__Logic.iff))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   Coq__Init__Logic.iff__trans.

#TYPE_CLASS_INSTANCE iff__Transitive.

def iff__equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Equivalence s0 s1
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       (cupicef.cast
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (A : cupicef.Univ cupicef.prop =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (B : cupicef.Univ cupicef.prop =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          (crelation s0 s1
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type s0))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s0)) cupicef.I)
                cstr_0
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
          cupicef.I Coq__Init__Logic.iff))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom cupicef.set) (cupicef.type s0)) =>
   Build__Equivalence s0 s1
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type s0))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        cstr_0
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I))
     (cupicef.cast
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))))
        (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))))
           cupicef.I
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (A : cupicef.Univ cupicef.prop =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (B : cupicef.Univ cupicef.prop =>
               cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (crelation s0 s1
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type s0))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s0)) cupicef.I)
              cstr_0
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        cupicef.I Coq__Init__Logic.iff)
     (iff__Reflexive s0 s1 cstr_0) (iff__Symmetric s0 s1 cstr_0)
     (iff__Transitive s0 s1 cstr_0).

#TYPE_CLASS_INSTANCE iff__equivalence.

def arrow__Reflexive__obligation__1 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) ->
  x : cupicef.Univ (cupicef.type s1) ->
  cupicef.Term (cupicef.type s1) (arrow s1 s1 x x)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) =>
   x : cupicef.Univ (cupicef.type s1) =>
   X : cupicef.Term (cupicef.type s1) x =>
   X.

def arrow__Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1
       (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.axiom (cupicef.type s1))
             (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I))
       (arrow s1 s1))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) =>
   arrow__Reflexive__obligation__1 s0 s1 cstr_0.

#TYPE_CLASS_INSTANCE arrow__Reflexive.

def arrow__Transitive__obligation__1 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) ->
  x : cupicef.Univ (cupicef.type s1) ->
  y : cupicef.Univ (cupicef.type s1) ->
  z : cupicef.Univ (cupicef.type s1) ->
  __ : cupicef.Term (cupicef.type s1) (arrow s1 s1 x y) ->
  __0 : cupicef.Term (cupicef.type s1) (arrow s1 s1 y z) ->
  cupicef.Term (cupicef.type s1) (arrow s1 s1 x z)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) =>
   x : cupicef.Univ (cupicef.type s1) =>
   y : cupicef.Univ (cupicef.type s1) =>
   z : cupicef.Univ (cupicef.type s1) =>
   X :
     (__ : cupicef.Term (cupicef.type s1) x ->
      cupicef.Term (cupicef.type s1) y) =>
   X0 :
     (__ : cupicef.Term (cupicef.type s1) y ->
      cupicef.Term (cupicef.type s1) z) =>
   X1 : cupicef.Term (cupicef.type s1) x =>
   X0 (X X1).

def arrow__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Transitive s0 s1
       (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.axiom (cupicef.type s1))
             (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I))
       (arrow s1 s1))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) =>
   arrow__Transitive__obligation__1 s0 s1 cstr_0.

#TYPE_CLASS_INSTANCE arrow__Transitive.

def iffT__Reflexive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_2 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Reflexive s0 s1
       (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.axiom (cupicef.type s1))
             (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I))
       (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_2 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cupicef.cast
     (cupicef.rule (cupicef.axiom (cupicef.type s1)) (cupicef.type s1))
     (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     (cupicef.prod (cupicef.axiom (cupicef.type s1)) (cupicef.type s1)
        (cupicef.rule (cupicef.axiom (cupicef.type s1)) (cupicef.type s1))
        cupicef.I
        (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
           cupicef.I)
        (x : cupicef.Univ (cupicef.type s1) =>
         Coq__Init__Datatypes.prod (cupicef.type s1) (cupicef.type s1)
           (cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I x
              (__ : cupicef.Term (cupicef.type s1) x => x))
           (cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I x
              (__ : cupicef.Term (cupicef.type s1) x => x))))
     (Reflexive s0 s1
        (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
           (cupicef.axiom (cupicef.type s0))
           (cupicef.univ (cupicef.axiom (cupicef.type s1))
              (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
           (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
              cupicef.I)
           cstr_0
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I))
        (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2))
     cupicef.I
     (x : cupicef.Univ (cupicef.type s1) =>
      Coq__Init__Datatypes.pair
        (cupicef.cast (cupicef.axiom (cupicef.type s1))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cstr_1
           (cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I x
              (__ : cupicef.Term (cupicef.type s1) x => x)))
        (cupicef.cast (cupicef.axiom (cupicef.type s1))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cstr_2
           (cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I x
              (__ : cupicef.Term (cupicef.type s1) x => x)))
        (X : cupicef.Term (cupicef.type s1) x => X)
        (X : cupicef.Term (cupicef.type s1) x => X)).

#TYPE_CLASS_INSTANCE iffT__Reflexive.

def iffT__Symmetric :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_2 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_3 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Symmetric s0 s1
       (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.axiom (cupicef.type s1))
             (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I))
       (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_2 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_3 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cupicef.cast
     (cupicef.rule (cupicef.axiom (cupicef.type s1))
        (cupicef.rule (cupicef.axiom (cupicef.type s1))
           (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
     (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     (cupicef.prod (cupicef.axiom (cupicef.type s1))
        (cupicef.rule (cupicef.axiom (cupicef.type s1))
           (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
        (cupicef.rule (cupicef.axiom (cupicef.type s1))
           (cupicef.rule (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
        cupicef.I
        (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
           cupicef.I)
        (x : cupicef.Univ (cupicef.type s1) =>
         cupicef.prod (cupicef.axiom (cupicef.type s1))
           (cupicef.rule (cupicef.type s1) (cupicef.type s1))
           (cupicef.rule (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
           cupicef.I
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I)
           (y : cupicef.Univ (cupicef.type s1) =>
            cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I
              (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x y)
              (X :
                 cupicef.Term (cupicef.type s1)
                   (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x y) =>
               (X0 :
                  cupicef.Term (cupicef.type s1)
                    (Coq__Init__Datatypes.prod (cupicef.type s1)
                       (cupicef.type s1)
                       (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                          cupicef.I x
                          (__ : cupicef.Term (cupicef.type s1) x => y))
                       (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                          (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                          cupicef.I y
                          (__ : cupicef.Term (cupicef.type s1) y => x))) =>
                iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 y x) X))))
     (Symmetric s0 s1
        (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
           (cupicef.axiom (cupicef.type s0))
           (cupicef.univ (cupicef.axiom (cupicef.type s1))
              (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
           (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
              cupicef.I)
           cstr_0
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I))
        (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2))
     cupicef.I
     (x : cupicef.Univ (cupicef.type s1) =>
      y : cupicef.Univ (cupicef.type s1) =>
      X :
        cupicef.Term (cupicef.type s1)
          (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x y) =>
      Coq__Init__Datatypes.prod__rect
        (cupicef.cast (cupicef.axiom (cupicef.type s1))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cstr_1
           (cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I x
              (__ : cupicef.Term (cupicef.type s1) x => y)))
        (cupicef.cast (cupicef.axiom (cupicef.type s1))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cstr_2
           (cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I y
              (__ : cupicef.Term (cupicef.type s1) y => x)))
        (cupicef.cast
           (cupicef.rule (cupicef.type s1) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule (cupicef.type s1)
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
           (cupicef.prod (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)))
              cupicef.I
              (Coq__Init__Datatypes.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I x (__ : cupicef.Term (cupicef.type s1) x => y))
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I y (__ : cupicef.Term (cupicef.type s1) y => x)))
              (X0 :
                 cupicef.Term (cupicef.type s1)
                   (Coq__Init__Datatypes.prod (cupicef.type s1)
                      (cupicef.type s1)
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I x
                         (__ : cupicef.Term (cupicef.type s1) x => y))
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I y
                         (__ : cupicef.Term (cupicef.type s1) y => x))) =>
               cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           (cupicef.prod (cupicef.type s1)
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              cupicef.I
              (Coq__Init__Datatypes.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I x (__ : cupicef.Term (cupicef.type s1) x => y))
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I y (__ : cupicef.Term (cupicef.type s1) y => x)))
              (p :
                 cupicef.Term (cupicef.type s1)
                   (Coq__Init__Datatypes.prod (cupicef.type s1)
                      (cupicef.type s1)
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I x
                         (__ : cupicef.Term (cupicef.type s1) x => y))
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I y
                         (__ : cupicef.Term (cupicef.type s1) y => x))) =>
               cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I))
           cstr_3
           (X0 :
              cupicef.Term (cupicef.type s1)
                (Coq__Init__Datatypes.prod (cupicef.type s1)
                   (cupicef.type s1)
                   (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                      (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                      cupicef.I x
                      (__ : cupicef.Term (cupicef.type s1) x => y))
                   (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                      (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                      cupicef.I y
                      (__ : cupicef.Term (cupicef.type s1) y => x))) =>
            iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 y x))
        (a :
           (__ : cupicef.Term (cupicef.type s1) x ->
            cupicef.Term (cupicef.type s1) y) =>
         b :
           (__ : cupicef.Term (cupicef.type s1) y ->
            cupicef.Term (cupicef.type s1) x) =>
         Coq__Init__Datatypes.pair
           (cupicef.cast (cupicef.axiom (cupicef.type s1))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cstr_1
              (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I
                 y (__ : cupicef.Term (cupicef.type s1) y => x)))
           (cupicef.cast (cupicef.axiom (cupicef.type s1))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cstr_2
              (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I
                 x (__ : cupicef.Term (cupicef.type s1) x => y)))
           b a)
        X).

#TYPE_CLASS_INSTANCE iffT__Symmetric.

def iffT__Transitive :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_2 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_3 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s1))
    (Transitive s0 s1
       (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
          (cupicef.axiom (cupicef.type s0))
          (cupicef.univ (cupicef.axiom (cupicef.type s1))
             (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
          (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
             cupicef.I)
          cstr_0
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I))
       (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s1)) (cupicef.type s0)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_2 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_3 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cupicef.cast
     (cupicef.rule (cupicef.axiom (cupicef.type s1))
        (cupicef.rule (cupicef.axiom (cupicef.type s1))
           (cupicef.rule (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
     (cupicef.sup (cupicef.type s0) (cupicef.type s1))
     (cupicef.prod (cupicef.axiom (cupicef.type s1))
        (cupicef.rule (cupicef.axiom (cupicef.type s1))
           (cupicef.rule (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
        (cupicef.rule (cupicef.axiom (cupicef.type s1))
           (cupicef.rule (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.axiom (cupicef.type s1))
                 (cupicef.rule (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))))))
        cupicef.I
        (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
           cupicef.I)
        (x : cupicef.Univ (cupicef.type s1) =>
         cupicef.prod (cupicef.axiom (cupicef.type s1))
           (cupicef.rule (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
           (cupicef.rule (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.axiom (cupicef.type s1))
                 (cupicef.rule (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1)))))
           cupicef.I
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I)
           (y : cupicef.Univ (cupicef.type s1) =>
            cupicef.prod (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
              (cupicef.rule (cupicef.axiom (cupicef.type s1))
                 (cupicef.rule (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))))
              cupicef.I
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (z : cupicef.Univ (cupicef.type s1) =>
               cupicef.prod (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                 (cupicef.rule (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1)))
                 cupicef.I (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x y)
                 (X :
                    cupicef.Term (cupicef.type s1)
                      (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x y) =>
                  cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 y z)
                    (X0 :
                       cupicef.Term (cupicef.type s1)
                         (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 y z) =>
                     (X1 :
                        cupicef.Term (cupicef.type s1)
                          (Coq__Init__Datatypes.prod (cupicef.type s1)
                             (cupicef.type s1)
                             (cupicef.prod (cupicef.type s1)
                                (cupicef.type s1)
                                (cupicef.rule (cupicef.type s1)
                                   (cupicef.type s1))
                                cupicef.I y
                                (__ : cupicef.Term (cupicef.type s1) y => z))
                             (cupicef.prod (cupicef.type s1)
                                (cupicef.type s1)
                                (cupicef.rule (cupicef.type s1)
                                   (cupicef.type s1))
                                cupicef.I z
                                (__ : cupicef.Term (cupicef.type s1) z => y))) =>
                      iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x z) X0))))))
     (Transitive s0 s1
        (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s1)))
           (cupicef.axiom (cupicef.type s0))
           (cupicef.univ (cupicef.axiom (cupicef.type s1))
              (cupicef.axiom (cupicef.axiom (cupicef.type s1))) cupicef.I)
           (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
              cupicef.I)
           cstr_0
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I))
        (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2))
     cupicef.I
     (x : cupicef.Univ (cupicef.type s1) =>
      y : cupicef.Univ (cupicef.type s1) =>
      z : cupicef.Univ (cupicef.type s1) =>
      X :
        cupicef.Term (cupicef.type s1)
          (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x y) =>
      X0 :
        cupicef.Term (cupicef.type s1)
          (iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 y z) =>
      Coq__Init__Datatypes.prod__rect
        (cupicef.cast (cupicef.axiom (cupicef.type s1))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cstr_1
           (cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I y
              (__ : cupicef.Term (cupicef.type s1) y => z)))
        (cupicef.cast (cupicef.axiom (cupicef.type s1))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cstr_2
           (cupicef.prod (cupicef.type s1) (cupicef.type s1)
              (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I z
              (__ : cupicef.Term (cupicef.type s1) z => y)))
        (cupicef.cast
           (cupicef.rule (cupicef.type s1) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule (cupicef.type s1)
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
           (cupicef.prod (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)))
              cupicef.I
              (Coq__Init__Datatypes.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I y (__ : cupicef.Term (cupicef.type s1) y => z))
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I z (__ : cupicef.Term (cupicef.type s1) z => y)))
              (X1 :
                 cupicef.Term (cupicef.type s1)
                   (Coq__Init__Datatypes.prod (cupicef.type s1)
                      (cupicef.type s1)
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I y
                         (__ : cupicef.Term (cupicef.type s1) y => z))
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I z
                         (__ : cupicef.Term (cupicef.type s1) z => y))) =>
               cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I))
           (cupicef.prod (cupicef.type s1)
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              cupicef.I
              (Coq__Init__Datatypes.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I y (__ : cupicef.Term (cupicef.type s1) y => z))
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I z (__ : cupicef.Term (cupicef.type s1) z => y)))
              (p :
                 cupicef.Term (cupicef.type s1)
                   (Coq__Init__Datatypes.prod (cupicef.type s1)
                      (cupicef.type s1)
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I y
                         (__ : cupicef.Term (cupicef.type s1) y => z))
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I z
                         (__ : cupicef.Term (cupicef.type s1) z => y))) =>
               cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I))
           cstr_3
           (X1 :
              cupicef.Term (cupicef.type s1)
                (Coq__Init__Datatypes.prod (cupicef.type s1)
                   (cupicef.type s1)
                   (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                      (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                      cupicef.I y
                      (__ : cupicef.Term (cupicef.type s1) y => z))
                   (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                      (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                      cupicef.I z
                      (__ : cupicef.Term (cupicef.type s1) z => y))) =>
            iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x z))
        (a :
           (__ : cupicef.Term (cupicef.type s1) y ->
            cupicef.Term (cupicef.type s1) z) =>
         b :
           (__ : cupicef.Term (cupicef.type s1) z ->
            cupicef.Term (cupicef.type s1) y) =>
         Coq__Init__Datatypes.prod__rect
           (cupicef.cast (cupicef.axiom (cupicef.type s1))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cstr_1
              (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I
                 x (__ : cupicef.Term (cupicef.type s1) x => y)))
           (cupicef.cast (cupicef.axiom (cupicef.type s1))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cstr_2
              (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                 (cupicef.rule (cupicef.type s1) (cupicef.type s1)) cupicef.I
                 y (__ : cupicef.Term (cupicef.type s1) y => x)))
           (cupicef.cast
              (cupicef.rule (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule (cupicef.type s1)
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1))
                 (cupicef.rule (cupicef.type s1)
                    (cupicef.axiom (cupicef.type s1)))
                 cupicef.I
                 (Coq__Init__Datatypes.prod (cupicef.type s1)
                    (cupicef.type s1)
                    (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                       cupicef.I x
                       (__ : cupicef.Term (cupicef.type s1) x => y))
                    (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                       cupicef.I y
                       (__ : cupicef.Term (cupicef.type s1) y => x)))
                 (X1 :
                    cupicef.Term (cupicef.type s1)
                      (Coq__Init__Datatypes.prod (cupicef.type s1)
                         (cupicef.type s1)
                         (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                            (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                            cupicef.I x
                            (__ : cupicef.Term (cupicef.type s1) x => y))
                         (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                            (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                            cupicef.I y
                            (__ : cupicef.Term (cupicef.type s1) y => x))) =>
                  cupicef.univ (cupicef.type s1)
                    (cupicef.axiom (cupicef.type s1)) cupicef.I))
              (cupicef.prod (cupicef.type s1)
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type s1)
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I
                 (Coq__Init__Datatypes.prod (cupicef.type s1)
                    (cupicef.type s1)
                    (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                       cupicef.I x
                       (__ : cupicef.Term (cupicef.type s1) x => y))
                    (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                       (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                       cupicef.I y
                       (__ : cupicef.Term (cupicef.type s1) y => x)))
                 (p :
                    cupicef.Term (cupicef.type s1)
                      (Coq__Init__Datatypes.prod (cupicef.type s1)
                         (cupicef.type s1)
                         (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                            (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                            cupicef.I x
                            (__ : cupicef.Term (cupicef.type s1) x => y))
                         (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                            (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                            cupicef.I y
                            (__ : cupicef.Term (cupicef.type s1) y => x))) =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cstr_3
              (X1 :
                 cupicef.Term (cupicef.type s1)
                   (Coq__Init__Datatypes.prod (cupicef.type s1)
                      (cupicef.type s1)
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I x
                         (__ : cupicef.Term (cupicef.type s1) x => y))
                      (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                         (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                         cupicef.I y
                         (__ : cupicef.Term (cupicef.type s1) y => x))) =>
               iffT s1 s1 cstr_1 cstr_2 cstr_1 cstr_2 x z))
           (a0 :
              (__ : cupicef.Term (cupicef.type s1) x ->
               cupicef.Term (cupicef.type s1) y) =>
            b0 :
              (__ : cupicef.Term (cupicef.type s1) y ->
               cupicef.Term (cupicef.type s1) x) =>
            Coq__Init__Datatypes.pair
              (cupicef.cast (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type s1)
                    (cupicef.axiom (cupicef.type s1)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cstr_1
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I x (__ : cupicef.Term (cupicef.type s1) x => z)))
              (cupicef.cast (cupicef.axiom (cupicef.type s1))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type s1)
                    (cupicef.axiom (cupicef.type s1)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cstr_2
                 (cupicef.prod (cupicef.type s1) (cupicef.type s1)
                    (cupicef.rule (cupicef.type s1) (cupicef.type s1))
                    cupicef.I z (__ : cupicef.Term (cupicef.type s1) z => x)))
              (X1 : cupicef.Term (cupicef.type s1) x =>
               (X2 : cupicef.Term (cupicef.type s1) y =>
                (X3 : cupicef.Term (cupicef.type s1) x =>
                 (X4 : cupicef.Term (cupicef.type s1) z => X4) (a X2))
                  (b0 X2))
                 (a0 X1))
              (X1 : cupicef.Term (cupicef.type s1) z =>
               (X2 : cupicef.Term (cupicef.type s1) y =>
                (X3 : cupicef.Term (cupicef.type s1) z =>
                 (X4 : cupicef.Term (cupicef.type s1) x => X4) (b0 X2))
                  (a X2))
                 (b X1)))
           X)
        X0).

#TYPE_CLASS_INSTANCE iffT__Transitive.

def relation__equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) ->
  cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) ->
  cstr_4 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s1) (cupicef.axiom (cupicef.type s2)))
    (crelation s1 s2
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3))))
          (cupicef.axiom (cupicef.type s1))
          (cupicef.univ
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3))))
             cupicef.I)
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I)
          (cupicef.pair
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
             cstr_1
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                   (cupicef.type s1)))
             cstr_0 cupicef.BoolNone)
          (crelation s0 s3 A)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) =>
   cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) =>
   cstr_4 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cupicef.cast
     (cupicef.rule (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0) (cupicef.type s3))))))
     (cupicef.rule (cupicef.axiom (cupicef.type s0))
        (cupicef.sup (cupicef.type s1) (cupicef.axiom (cupicef.type s2))))
     (cupicef.prod (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
        (cupicef.rule (cupicef.axiom (cupicef.type s0))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3))))))
        cupicef.I
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (A : cupicef.Univ (cupicef.type s0) =>
         cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
           cupicef.I (crelation s0 s3 A)
           (R :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
              cupicef.I (crelation s0 s3 A)
              (R_27_ :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.univ (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                 cupicef.I))))
     (cupicef.prod (cupicef.axiom (cupicef.type s0))
        (cupicef.sup (cupicef.type s1) (cupicef.axiom (cupicef.type s2)))
        (cupicef.rule (cupicef.axiom (cupicef.type s0))
           (cupicef.sup (cupicef.type s1) (cupicef.axiom (cupicef.type s2))))
        cupicef.I
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (A : cupicef.Univ (cupicef.type s0) =>
         crelation s1 s2
           (cupicef.cast
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3))))
                 cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                 cstr_1
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                       (cupicef.type s1)))
                 cstr_0 cupicef.BoolNone)
              (crelation s0 s3 A))))
     (cupicef.pair
        (cupicef.BoolSome (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)))
        cstr_3
        (cupicef.BoolSome (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)))
        cstr_2 cupicef.BoolNone)
     (A : cupicef.Univ (cupicef.type s0) =>
      R :
        cupicef.Term
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
          (crelation s0 s3 A) =>
      R_27_ :
        cupicef.Term
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
          (crelation s0 s3 A) =>
      cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s0) (cupicef.type s3))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
        cupicef.I A
        (x : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s0) (cupicef.type s3)
           (cupicef.rule (cupicef.type s0) (cupicef.type s3)) cupicef.I A
           (y : cupicef.Term (cupicef.type s0) A =>
            iffT s3 s3 cstr_4 cstr_5 cstr_4 cstr_5 (R x y) (R_27_ x y)))).

def RewriteRelation__instance__2 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) ->
  cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) ->
  cstr_4 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Term cupicef.prop
    (RewriteRelation s1 s2
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3))))
          (cupicef.axiom (cupicef.type s1))
          (cupicef.univ
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3))))
             cupicef.I)
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I)
          (cupicef.pair
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
             cstr_1
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                   (cupicef.type s1)))
             cstr_0 cupicef.BoolNone)
          (crelation s0 s3 A))
       (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4
          cstr_5 A))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) =>
   cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) =>
   cstr_4 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   Build__RewriteRelation s1 s2
     (cupicef.cast
        (cupicef.axiom
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3))))
        (cupicef.axiom (cupicef.type s1))
        (cupicef.univ
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.axiom
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3))))
           cupicef.I)
        (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
           cupicef.I)
        (cupicef.pair
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
           cstr_1
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                 (cupicef.type s1)))
           cstr_0 cupicef.BoolNone)
        (crelation s0 s3 A))
     (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4
        cstr_5 A).

#TYPE_CLASS_INSTANCE RewriteRelation__instance__2.

def relation__conjunction :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 : cupicef.eps (cupicef.Cumul (cupicef.type s1) (cupicef.type s3)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s2) (cupicef.type s3)) ->
  cstr_3 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s2) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  R_27_ :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
    (crelation s0 s3 A)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 : cupicef.eps (cupicef.Cumul (cupicef.type s1) (cupicef.type s3)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s2) (cupicef.type s3)) =>
   cstr_3 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s2) (cupicef.type (cupicef.s cupicef.z))) =>
   cupicef.cast
     (cupicef.rule (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s1) (cupicef.type s2))))))))
     (cupicef.rule (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3))))))
     (cupicef.prod (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))))
        (cupicef.rule (cupicef.axiom (cupicef.type s0))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2))))))))
        cupicef.I
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (A : cupicef.Univ (cupicef.type s0) =>
         cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s1) (cupicef.type s2))))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))))
           cupicef.I (crelation s0 s1 A)
           (R :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s1)))
                (crelation s0 s1 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2))))))
              cupicef.I (crelation s0 s2 A)
              (R_27_ :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s2)))
                   (crelation s0 s2 A) =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s1) (cupicef.type s2))))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))
                 cupicef.I A
                 (x : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2))))
                    cupicef.I A
                    (y : cupicef.Term (cupicef.type s0) A =>
                     cupicef.univ
                       (cupicef.sup (cupicef.type s1) (cupicef.type s2))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
                       cupicef.I))))))
     (cupicef.prod (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))))
        (cupicef.rule (cupicef.axiom (cupicef.type s0))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))))
        cupicef.I
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (A : cupicef.Univ (cupicef.type s0) =>
         cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))))
           cupicef.I (crelation s0 s1 A)
           (R :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s1)))
                (crelation s0 s1 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              cupicef.I (crelation s0 s2 A)
              (R_27_ :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s2)))
                   (crelation s0 s2 A) =>
               crelation s0 s3 A))))
     (cupicef.pair
        (cupicef.BoolSome (cupicef.Cumul (cupicef.type s2) (cupicef.type s3)))
        cstr_2
        (cupicef.BoolSome (cupicef.Cumul (cupicef.type s1) (cupicef.type s3)))
        cstr_0 cupicef.BoolNone)
     (A : cupicef.Univ (cupicef.type s0) =>
      R :
        cupicef.Term
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (crelation s0 s1 A) =>
      R_27_ :
        cupicef.Term
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
          (crelation s0 s2 A) =>
      x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      Coq__Init__Datatypes.prod (cupicef.type s1) (cupicef.type s2) (
        R x y) (R_27_ x y)).

def relation__disjunction :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 : cupicef.eps (cupicef.Cumul cupicef.set (cupicef.type s3)) ->
  cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s1) (cupicef.type s3)) ->
  cstr_2 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s2) (cupicef.type s3)) ->
  cstr_4 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s2) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
      (crelation s0 s1 A) ->
  R_27_ :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
      (crelation s0 s2 A) ->
  cupicef.Term
    (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
    (crelation s0 s3 A)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 : cupicef.eps (cupicef.Cumul cupicef.set (cupicef.type s3)) =>
   cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s1) (cupicef.type s3)) =>
   cstr_2 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s1) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s2) (cupicef.type s3)) =>
   cstr_4 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s2) (cupicef.type (cupicef.s cupicef.z))) =>
   cupicef.cast
     (cupicef.rule (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup cupicef.set
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))))))
     (cupicef.rule (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3))))))
     (cupicef.prod (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup cupicef.set
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2))))))))
        (cupicef.rule (cupicef.axiom (cupicef.type s0))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup cupicef.set
                             (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))))))
        cupicef.I
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (A : cupicef.Univ (cupicef.type s0) =>
         cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup cupicef.set
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup cupicef.set
                             (cupicef.sup (cupicef.type s1) (cupicef.type s2))))))))
           cupicef.I (crelation s0 s1 A)
           (R :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s1)))
                (crelation s0 s1 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup cupicef.set
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2))))))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup cupicef.set
                             (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))))
              cupicef.I (crelation s0 s2 A)
              (R_27_ :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s2)))
                   (crelation s0 s2 A) =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup cupicef.set
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup cupicef.set
                             (cupicef.sup (cupicef.type s1) (cupicef.type s2))))))
                 cupicef.I A
                 (x : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s0)
                    (cupicef.axiom
                       (cupicef.sup cupicef.set
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2))))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.axiom
                          (cupicef.sup cupicef.set
                             (cupicef.sup (cupicef.type s1) (cupicef.type s2)))))
                    cupicef.I A
                    (y : cupicef.Term (cupicef.type s0) A =>
                     cupicef.univ
                       (cupicef.sup cupicef.set
                          (cupicef.sup (cupicef.type s1) (cupicef.type s2)))
                       (cupicef.axiom
                          (cupicef.sup cupicef.set
                             (cupicef.sup (cupicef.type s1) (cupicef.type s2))))
                       cupicef.I))))))
     (cupicef.prod (cupicef.axiom (cupicef.type s0))
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))))
        (cupicef.rule (cupicef.axiom (cupicef.type s0))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))))
        cupicef.I
        (cupicef.univ (cupicef.type s0) (cupicef.axiom (cupicef.type s0))
           cupicef.I)
        (A : cupicef.Univ (cupicef.type s0) =>
         cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s1)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))))
           cupicef.I (crelation s0 s1 A)
           (R :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s1)))
                (crelation s0 s1 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s2)))
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              cupicef.I (crelation s0 s2 A)
              (R_27_ :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s2)))
                   (crelation s0 s2 A) =>
               crelation s0 s3 A))))
     (cupicef.pair
        (cupicef.BoolSome (cupicef.Cumul (cupicef.type s2) (cupicef.type s3)))
        cstr_3
        (cupicef.BoolSome (cupicef.Cumul (cupicef.type s1) (cupicef.type s3)))
        cstr_1 cupicef.BoolNone)
     (A : cupicef.Univ (cupicef.type s0) =>
      R :
        cupicef.Term
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s1)))
          (crelation s0 s1 A) =>
      R_27_ :
        cupicef.Term
          (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s2)))
          (crelation s0 s2 A) =>
      x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      Coq__Init__Datatypes.sum (cupicef.type s1) (cupicef.type s2) (R x y)
        (R_27_ x y)).

def let__X :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) ->
  cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) ->
  cstr_4 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  x :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  y :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  z :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  X :
    (x0 : cupicef.Term (cupicef.type s0) A ->
     y0 : cupicef.Term (cupicef.type s0) A ->
     cupicef.Term (cupicef.type s3)
       (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
             (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
             (x x0 y0)
             (__ : cupicef.Term (cupicef.type s3) (x x0 y0) => y x0 y0))
          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
             (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
             (y x0 y0)
             (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => x x0 y0)))) ->
  X0 :
    (x0 : cupicef.Term (cupicef.type s0) A ->
     y0 : cupicef.Term (cupicef.type s0) A ->
     cupicef.Term (cupicef.type s3)
       (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
             (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
             (y x0 y0)
             (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => z x0 y0))
          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
             (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
             (z x0 y0)
             (__ : cupicef.Term (cupicef.type s3) (z x0 y0) => y x0 y0)))) ->
  x0 : cupicef.Term (cupicef.type s0) A ->
  y0 : cupicef.Term (cupicef.type s0) A ->
  cupicef.Term (cupicef.type s3)
    (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
          (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
          (x x0 y0)
          (__ : cupicef.Term (cupicef.type s3) (x x0 y0) => y x0 y0))
       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
          (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
          (y x0 y0)
          (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => x x0 y0)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) =>
   cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) =>
   cstr_4 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   x :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   y :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   z :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   X :
     (x0 : cupicef.Term (cupicef.type s0) A ->
      y0 : cupicef.Term (cupicef.type s0) A ->
      cupicef.Term (cupicef.type s3)
        (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
           (cupicef.prod (cupicef.type s3) (cupicef.type s3)
              (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
              (x x0 y0)
              (__ : cupicef.Term (cupicef.type s3) (x x0 y0) => y x0 y0))
           (cupicef.prod (cupicef.type s3) (cupicef.type s3)
              (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
              (y x0 y0)
              (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => x x0 y0)))) =>
   X0 :
     (x0 : cupicef.Term (cupicef.type s0) A ->
      y0 : cupicef.Term (cupicef.type s0) A ->
      cupicef.Term (cupicef.type s3)
        (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
           (cupicef.prod (cupicef.type s3) (cupicef.type s3)
              (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
              (y x0 y0)
              (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => z x0 y0))
           (cupicef.prod (cupicef.type s3) (cupicef.type s3)
              (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
              (z x0 y0)
              (__ : cupicef.Term (cupicef.type s3) (z x0 y0) => y x0 y0)))) =>
   x0 : cupicef.Term (cupicef.type s0) A =>
   y0 : cupicef.Term (cupicef.type s0) A =>
   X x0 y0.

def let__X0 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) ->
  cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) ->
  cstr_4 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  x :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  y :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  z :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  X :
    (x0 : cupicef.Term (cupicef.type s0) A ->
     y0 : cupicef.Term (cupicef.type s0) A ->
     cupicef.Term (cupicef.type s3)
       (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
             (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
             (x x0 y0)
             (__ : cupicef.Term (cupicef.type s3) (x x0 y0) => y x0 y0))
          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
             (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
             (y x0 y0)
             (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => x x0 y0)))) ->
  X0 :
    (x0 : cupicef.Term (cupicef.type s0) A ->
     y0 : cupicef.Term (cupicef.type s0) A ->
     cupicef.Term (cupicef.type s3)
       (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
             (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
             (y x0 y0)
             (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => z x0 y0))
          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
             (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
             (z x0 y0)
             (__ : cupicef.Term (cupicef.type s3) (z x0 y0) => y x0 y0)))) ->
  x0 : cupicef.Term (cupicef.type s0) A ->
  y0 : cupicef.Term (cupicef.type s0) A ->
  cupicef.Term (cupicef.type s3)
    (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
          (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
          (y x0 y0)
          (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => z x0 y0))
       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
          (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
          (z x0 y0)
          (__ : cupicef.Term (cupicef.type s3) (z x0 y0) => y x0 y0)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) =>
   cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) =>
   cstr_4 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   x :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   y :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   z :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   X :
     (x0 : cupicef.Term (cupicef.type s0) A ->
      y0 : cupicef.Term (cupicef.type s0) A ->
      cupicef.Term (cupicef.type s3)
        (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
           (cupicef.prod (cupicef.type s3) (cupicef.type s3)
              (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
              (x x0 y0)
              (__ : cupicef.Term (cupicef.type s3) (x x0 y0) => y x0 y0))
           (cupicef.prod (cupicef.type s3) (cupicef.type s3)
              (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
              (y x0 y0)
              (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => x x0 y0)))) =>
   X0 :
     (x0 : cupicef.Term (cupicef.type s0) A ->
      y0 : cupicef.Term (cupicef.type s0) A ->
      cupicef.Term (cupicef.type s3)
        (Coq__Init__Datatypes.prod (cupicef.type s3) (cupicef.type s3)
           (cupicef.prod (cupicef.type s3) (cupicef.type s3)
              (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
              (y x0 y0)
              (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => z x0 y0))
           (cupicef.prod (cupicef.type s3) (cupicef.type s3)
              (cupicef.rule (cupicef.type s3) (cupicef.type s3)) cupicef.I
              (z x0 y0)
              (__ : cupicef.Term (cupicef.type s3) (z x0 y0) => y x0 y0)))) =>
   x0 : cupicef.Term (cupicef.type s0) A =>
   y0 : cupicef.Term (cupicef.type s0) A =>
   X0 x0 y0.

thm relation__equivalence__equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) ->
  cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) ->
  cstr_4 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Term (cupicef.sup (cupicef.type s1) (cupicef.type s2))
    (Equivalence s1 s2
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3))))
          (cupicef.axiom (cupicef.type s1))
          (cupicef.univ
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3))))
             cupicef.I)
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I)
          (cupicef.pair
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
             cstr_1
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                   (cupicef.type s1)))
             cstr_0 cupicef.BoolNone)
          (crelation s0 s3 A))
       (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4
          cstr_5 A))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) =>
   cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) =>
   cstr_4 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   Build__Equivalence s1 s2
     (cupicef.cast
        (cupicef.axiom
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3))))
        (cupicef.axiom (cupicef.type s1))
        (cupicef.univ
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.axiom
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3))))
           cupicef.I)
        (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
           cupicef.I)
        (cupicef.pair
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
           cstr_1
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                 (cupicef.type s1)))
           cstr_0 cupicef.BoolNone)
        (crelation s0 s3 A))
     (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4
        cstr_5 A)
     (cupicef.cast
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.type s2))
        (cupicef.sup (cupicef.type s1) (cupicef.type s2))
        (cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.type s2)
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.type s2))
           cupicef.I (crelation s0 s3 A)
           (x :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3
              cstr_4 cstr_5 A x x))
        (Reflexive s1 s2
           (cupicef.cast
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3))))
                 cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                 cstr_1
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                       (cupicef.type s1)))
                 cstr_0 cupicef.BoolNone)
              (crelation s0 s3 A))
           (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3
              cstr_4 cstr_5 A))
        cupicef.I
        (cupicef.cast
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0) (cupicef.type s3))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.type s2))
           (cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0) (cupicef.type s3))))
              cupicef.I (crelation s0 s3 A)
              (x :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0) (cupicef.type s3))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                 cupicef.I A
                 (x0 : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s0) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s0) (cupicef.type s3))
                    cupicef.I A
                    (y : cupicef.Term (cupicef.type s0) A =>
                     Coq__Init__Datatypes.prod (cupicef.type s3)
                       (cupicef.type s3)
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (x x0 y)
                          (__ : cupicef.Term (cupicef.type s3) (x x0 y) =>
                           x x0 y))
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (x x0 y)
                          (__ : cupicef.Term (cupicef.type s3) (x x0 y) =>
                           x x0 y))))))
           (cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.type s2)
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.type s2))
              cupicef.I (crelation s0 s3 A)
              (x :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3
                 cstr_4 cstr_5 A x x))
           cupicef.I
           (x :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            x0 : cupicef.Term (cupicef.type s0) A =>
            y : cupicef.Term (cupicef.type s0) A =>
            Coq__Init__Datatypes.pair
              (cupicef.cast (cupicef.axiom (cupicef.type s3))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cstr_4
                 (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                    cupicef.I (x x0 y)
                    (__ : cupicef.Term (cupicef.type s3) (x x0 y) => x x0 y)))
              (cupicef.cast (cupicef.axiom (cupicef.type s3))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cstr_5
                 (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                    cupicef.I (x x0 y)
                    (__ : cupicef.Term (cupicef.type s3) (x x0 y) => x x0 y)))
              (X : cupicef.Term (cupicef.type s3) (x x0 y) => X)
              (X : cupicef.Term (cupicef.type s3) (x x0 y) => X))))
     (cupicef.cast
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
        (cupicef.sup (cupicef.type s1) (cupicef.type s2))
        (cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
           cupicef.I (crelation s0 s3 A)
           (x :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule (cupicef.type s2) (cupicef.type s2))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
              cupicef.I (crelation s0 s3 A)
              (y :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.prod (cupicef.type s2) (cupicef.type s2)
                 (cupicef.rule (cupicef.type s2) (cupicef.type s2)) cupicef.I
                 (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2
                    cstr_3 cstr_4 cstr_5 A x y)
                 (__ :
                    cupicef.Term (cupicef.type s2)
                      (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2
                         cstr_3 cstr_4 cstr_5 A x y) =>
                  relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2
                    cstr_3 cstr_4 cstr_5 A y x))))
        (Symmetric s1 s2
           (cupicef.cast
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3))))
                 cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                 cstr_1
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                       (cupicef.type s1)))
                 cstr_0 cupicef.BoolNone)
              (crelation s0 s3 A))
           (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3
              cstr_4 cstr_5 A))
        cupicef.I
        (cupicef.cast
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3))))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
           (cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3)))))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3))))))
              cupicef.I (crelation s0 s3 A)
              (x :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.prod
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3))))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))))
                 cupicef.I (crelation s0 s3 A)
                 (y :
                    cupicef.Term
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3)))
                      (crelation s0 s3 A) =>
                  cupicef.prod
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3))))
                    cupicef.I
                    (cupicef.prod (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3))
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       cupicef.I A
                       (x0 : cupicef.Term (cupicef.type s0) A =>
                        cupicef.prod (cupicef.type s0) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3))
                          cupicef.I A
                          (y0 : cupicef.Term (cupicef.type s0) A =>
                           Coq__Init__Datatypes.prod (cupicef.type s3)
                             (cupicef.type s3)
                             (cupicef.prod (cupicef.type s3)
                                (cupicef.type s3)
                                (cupicef.rule (cupicef.type s3)
                                   (cupicef.type s3))
                                cupicef.I (x x0 y0)
                                (__ :
                                   cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                 y x0 y0))
                             (cupicef.prod (cupicef.type s3)
                                (cupicef.type s3)
                                (cupicef.rule (cupicef.type s3)
                                   (cupicef.type s3))
                                cupicef.I (y x0 y0)
                                (__ :
                                   cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                 x x0 y0)))))
                    (X :
                       (x0 : cupicef.Term (cupicef.type s0) A ->
                        y0 : cupicef.Term (cupicef.type s0) A ->
                        cupicef.Term (cupicef.type s3)
                          (Coq__Init__Datatypes.prod (cupicef.type s3)
                             (cupicef.type s3)
                             (cupicef.prod (cupicef.type s3)
                                (cupicef.type s3)
                                (cupicef.rule (cupicef.type s3)
                                   (cupicef.type s3))
                                cupicef.I (x x0 y0)
                                (__ :
                                   cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                 y x0 y0))
                             (cupicef.prod (cupicef.type s3)
                                (cupicef.type s3)
                                (cupicef.rule (cupicef.type s3)
                                   (cupicef.type s3))
                                cupicef.I (y x0 y0)
                                (__ :
                                   cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                 x x0 y0)))) =>
                     cupicef.prod (cupicef.type s0)
                       (cupicef.rule (cupicef.type s0) (cupicef.type s3))
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       cupicef.I A
                       (x0 : cupicef.Term (cupicef.type s0) A =>
                        cupicef.prod (cupicef.type s0) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3))
                          cupicef.I A
                          (y0 : cupicef.Term (cupicef.type s0) A =>
                           Coq__Init__Datatypes.prod (cupicef.type s3)
                             (cupicef.type s3)
                             (cupicef.prod (cupicef.type s3)
                                (cupicef.type s3)
                                (cupicef.rule (cupicef.type s3)
                                   (cupicef.type s3))
                                cupicef.I (y x0 y0)
                                (__ :
                                   cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                 x x0 y0))
                             (cupicef.prod (cupicef.type s3)
                                (cupicef.type s3)
                                (cupicef.rule (cupicef.type s3)
                                   (cupicef.type s3))
                                cupicef.I (x x0 y0)
                                (__ :
                                   cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                 y x0 y0))))))))
           (cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
              cupicef.I (crelation s0 s3 A)
              (x :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.prod
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2) (cupicef.type s2))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
                 cupicef.I (crelation s0 s3 A)
                 (y :
                    cupicef.Term
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3)))
                      (crelation s0 s3 A) =>
                  cupicef.prod (cupicef.type s2) (cupicef.type s2)
                    (cupicef.rule (cupicef.type s2) (cupicef.type s2))
                    cupicef.I
                    (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2
                       cstr_3 cstr_4 cstr_5 A x y)
                    (__ :
                       cupicef.Term (cupicef.type s2)
                         (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                            cstr_2 cstr_3 cstr_4 cstr_5 A x y) =>
                     relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2
                       cstr_3 cstr_4 cstr_5 A y x))))
           cupicef.I
           (x :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            y :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            X :
              (x0 : cupicef.Term (cupicef.type s0) A ->
               y0 : cupicef.Term (cupicef.type s0) A ->
               cupicef.Term (cupicef.type s3)
                 (Coq__Init__Datatypes.prod (cupicef.type s3)
                    (cupicef.type s3)
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (x x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                        y x0 y0))
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (y x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                        x x0 y0)))) =>
            x0 : cupicef.Term (cupicef.type s0) A =>
            y0 : cupicef.Term (cupicef.type s0) A =>
            Coq__Init__Datatypes.pair
              (cupicef.cast (cupicef.axiom (cupicef.type s3))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cstr_4
                 (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                    cupicef.I (y x0 y0)
                    (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => x x0 y0)))
              (cupicef.cast (cupicef.axiom (cupicef.type s3))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cstr_5
                 (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                    cupicef.I (x x0 y0)
                    (__ : cupicef.Term (cupicef.type s3) (x x0 y0) => y x0 y0)))
              (X0 : cupicef.Term (cupicef.type s3) (y x0 y0) =>
               (X1 :
                  (y1 : cupicef.Term (cupicef.type s0) A ->
                   cupicef.Term (cupicef.type s3)
                     (Coq__Init__Datatypes.prod (cupicef.type s3)
                        (cupicef.type s3)
                        (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                           (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                           cupicef.I (x x0 y1)
                           (__ : cupicef.Term (cupicef.type s3) (x x0 y1) =>
                            y x0 y1))
                        (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                           (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                           cupicef.I (y x0 y1)
                           (__ : cupicef.Term (cupicef.type s3) (y x0 y1) =>
                            x x0 y1)))) =>
                (X2 :
                   cupicef.Term (cupicef.type s3)
                     (Coq__Init__Datatypes.prod (cupicef.type s3)
                        (cupicef.type s3)
                        (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                           (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                           cupicef.I (x x0 y0)
                           (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                            y x0 y0))
                        (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                           (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                           cupicef.I (y x0 y0)
                           (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                            x x0 y0))) =>
                 Coq__Init__Datatypes.prod__rect
                   (cupicef.cast (cupicef.axiom (cupicef.type s3))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cstr_4
                      (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                         (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                         cupicef.I (x x0 y0)
                         (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                          y x0 y0)))
                   (cupicef.cast (cupicef.axiom (cupicef.type s3))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cstr_5
                      (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                         (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                         cupicef.I (y x0 y0)
                         (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                          x x0 y0)))
                   (cupicef.cast
                      (cupicef.rule (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)))
                      (cupicef.rule (cupicef.type s3)
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      (cupicef.prod (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.rule (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)))
                         cupicef.I
                         (Coq__Init__Datatypes.prod (cupicef.type s3)
                            (cupicef.type s3)
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (x x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                y x0 y0))
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (y x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                x x0 y0)))
                         (X3 :
                            cupicef.Term (cupicef.type s3)
                              (Coq__Init__Datatypes.prod (cupicef.type s3)
                                 (cupicef.type s3)
                                 (cupicef.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.rule (cupicef.type s3)
                                       (cupicef.type s3))
                                    cupicef.I (x x0 y0)
                                    (__ :
                                       cupicef.Term (cupicef.type s3)
                                         (x x0 y0) =>
                                     y x0 y0))
                                 (cupicef.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.rule (cupicef.type s3)
                                       (cupicef.type s3))
                                    cupicef.I (y x0 y0)
                                    (__ :
                                       cupicef.Term (cupicef.type s3)
                                         (y x0 y0) =>
                                     x x0 y0))) =>
                          cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I))
                      (cupicef.prod (cupicef.type s3)
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.rule (cupicef.type s3)
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z))))
                         cupicef.I
                         (Coq__Init__Datatypes.prod (cupicef.type s3)
                            (cupicef.type s3)
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (x x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                y x0 y0))
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (y x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                x x0 y0)))
                         (p :
                            cupicef.Term (cupicef.type s3)
                              (Coq__Init__Datatypes.prod (cupicef.type s3)
                                 (cupicef.type s3)
                                 (cupicef.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.rule (cupicef.type s3)
                                       (cupicef.type s3))
                                    cupicef.I (x x0 y0)
                                    (__ :
                                       cupicef.Term (cupicef.type s3)
                                         (x x0 y0) =>
                                     y x0 y0))
                                 (cupicef.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.rule (cupicef.type s3)
                                       (cupicef.type s3))
                                    cupicef.I (y x0 y0)
                                    (__ :
                                       cupicef.Term (cupicef.type s3)
                                         (y x0 y0) =>
                                     x x0 y0))) =>
                          cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I))
                      cstr_6
                      (X3 :
                         cupicef.Term (cupicef.type s3)
                           (Coq__Init__Datatypes.prod (cupicef.type s3)
                              (cupicef.type s3)
                              (cupicef.prod (cupicef.type s3)
                                 (cupicef.type s3)
                                 (cupicef.rule (cupicef.type s3)
                                    (cupicef.type s3))
                                 cupicef.I (x x0 y0)
                                 (__ :
                                    cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                  y x0 y0))
                              (cupicef.prod (cupicef.type s3)
                                 (cupicef.type s3)
                                 (cupicef.rule (cupicef.type s3)
                                    (cupicef.type s3))
                                 cupicef.I (y x0 y0)
                                 (__ :
                                    cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                  x x0 y0))) =>
                       x x0 y0))
                   (a :
                      (__ : cupicef.Term (cupicef.type s3) (x x0 y0) ->
                       cupicef.Term (cupicef.type s3) (y x0 y0)) =>
                    b :
                      (__ : cupicef.Term (cupicef.type s3) (y x0 y0) ->
                       cupicef.Term (cupicef.type s3) (x x0 y0)) =>
                    (X3 : cupicef.Term (cupicef.type s3) (x x0 y0) => X3)
                      (b X0))
                   X2)
                  (X1 y0))
                 (X x0))
              (X0 : cupicef.Term (cupicef.type s3) (x x0 y0) =>
               (X1 :
                  (y1 : cupicef.Term (cupicef.type s0) A ->
                   cupicef.Term (cupicef.type s3)
                     (Coq__Init__Datatypes.prod (cupicef.type s3)
                        (cupicef.type s3)
                        (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                           (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                           cupicef.I (x x0 y1)
                           (__ : cupicef.Term (cupicef.type s3) (x x0 y1) =>
                            y x0 y1))
                        (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                           (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                           cupicef.I (y x0 y1)
                           (__ : cupicef.Term (cupicef.type s3) (y x0 y1) =>
                            x x0 y1)))) =>
                (X2 :
                   cupicef.Term (cupicef.type s3)
                     (Coq__Init__Datatypes.prod (cupicef.type s3)
                        (cupicef.type s3)
                        (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                           (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                           cupicef.I (x x0 y0)
                           (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                            y x0 y0))
                        (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                           (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                           cupicef.I (y x0 y0)
                           (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                            x x0 y0))) =>
                 Coq__Init__Datatypes.prod__rect
                   (cupicef.cast (cupicef.axiom (cupicef.type s3))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cstr_4
                      (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                         (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                         cupicef.I (x x0 y0)
                         (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                          y x0 y0)))
                   (cupicef.cast (cupicef.axiom (cupicef.type s3))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cstr_5
                      (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                         (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                         cupicef.I (y x0 y0)
                         (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                          x x0 y0)))
                   (cupicef.cast
                      (cupicef.rule (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)))
                      (cupicef.rule (cupicef.type s3)
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      (cupicef.prod (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.rule (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)))
                         cupicef.I
                         (Coq__Init__Datatypes.prod (cupicef.type s3)
                            (cupicef.type s3)
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (x x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                y x0 y0))
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (y x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                x x0 y0)))
                         (X3 :
                            cupicef.Term (cupicef.type s3)
                              (Coq__Init__Datatypes.prod (cupicef.type s3)
                                 (cupicef.type s3)
                                 (cupicef.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.rule (cupicef.type s3)
                                       (cupicef.type s3))
                                    cupicef.I (x x0 y0)
                                    (__ :
                                       cupicef.Term (cupicef.type s3)
                                         (x x0 y0) =>
                                     y x0 y0))
                                 (cupicef.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.rule (cupicef.type s3)
                                       (cupicef.type s3))
                                    cupicef.I (y x0 y0)
                                    (__ :
                                       cupicef.Term (cupicef.type s3)
                                         (y x0 y0) =>
                                     x x0 y0))) =>
                          cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I))
                      (cupicef.prod (cupicef.type s3)
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.rule (cupicef.type s3)
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z))))
                         cupicef.I
                         (Coq__Init__Datatypes.prod (cupicef.type s3)
                            (cupicef.type s3)
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (x x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                y x0 y0))
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (y x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                x x0 y0)))
                         (p :
                            cupicef.Term (cupicef.type s3)
                              (Coq__Init__Datatypes.prod (cupicef.type s3)
                                 (cupicef.type s3)
                                 (cupicef.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.rule (cupicef.type s3)
                                       (cupicef.type s3))
                                    cupicef.I (x x0 y0)
                                    (__ :
                                       cupicef.Term (cupicef.type s3)
                                         (x x0 y0) =>
                                     y x0 y0))
                                 (cupicef.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.rule (cupicef.type s3)
                                       (cupicef.type s3))
                                    cupicef.I (y x0 y0)
                                    (__ :
                                       cupicef.Term (cupicef.type s3)
                                         (y x0 y0) =>
                                     x x0 y0))) =>
                          cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I))
                      cstr_6
                      (X3 :
                         cupicef.Term (cupicef.type s3)
                           (Coq__Init__Datatypes.prod (cupicef.type s3)
                              (cupicef.type s3)
                              (cupicef.prod (cupicef.type s3)
                                 (cupicef.type s3)
                                 (cupicef.rule (cupicef.type s3)
                                    (cupicef.type s3))
                                 cupicef.I (x x0 y0)
                                 (__ :
                                    cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                  y x0 y0))
                              (cupicef.prod (cupicef.type s3)
                                 (cupicef.type s3)
                                 (cupicef.rule (cupicef.type s3)
                                    (cupicef.type s3))
                                 cupicef.I (y x0 y0)
                                 (__ :
                                    cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                  x x0 y0))) =>
                       y x0 y0))
                   (a :
                      (__ : cupicef.Term (cupicef.type s3) (x x0 y0) ->
                       cupicef.Term (cupicef.type s3) (y x0 y0)) =>
                    b :
                      (__ : cupicef.Term (cupicef.type s3) (y x0 y0) ->
                       cupicef.Term (cupicef.type s3) (x x0 y0)) =>
                    (X3 : cupicef.Term (cupicef.type s3) (y x0 y0) => X3)
                      (a X0))
                   X2)
                  (X1 y0))
                 (X x0)))))
     (cupicef.cast
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2)
                    (cupicef.rule (cupicef.type s2) (cupicef.type s2))))))
        (cupicef.sup (cupicef.type s1) (cupicef.type s2))
        (cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2)
                    (cupicef.rule (cupicef.type s2) (cupicef.type s2)))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))))))
           cupicef.I (crelation s0 s3 A)
           (x :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2)
                    (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2)))))
              cupicef.I (crelation s0 s3 A)
              (y :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.prod
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s2)
                    (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
                 cupicef.I (crelation s0 s3 A)
                 (z :
                    cupicef.Term
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3)))
                      (crelation s0 s3 A) =>
                  cupicef.prod (cupicef.type s2)
                    (cupicef.rule (cupicef.type s2) (cupicef.type s2))
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
                    cupicef.I
                    (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2
                       cstr_3 cstr_4 cstr_5 A x y)
                    (__ :
                       cupicef.Term (cupicef.type s2)
                         (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                            cstr_2 cstr_3 cstr_4 cstr_5 A x y) =>
                     cupicef.prod (cupicef.type s2) (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))
                       cupicef.I
                       (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                          cstr_2 cstr_3 cstr_4 cstr_5 A y z)
                       (__0 :
                          cupicef.Term (cupicef.type s2)
                            (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                               cstr_2 cstr_3 cstr_4 cstr_5 A y z) =>
                        relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                          cstr_2 cstr_3 cstr_4 cstr_5 A x z))))))
        (Transitive s1 s2
           (cupicef.cast
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3))))
                 cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                 cstr_1
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                       (cupicef.type s1)))
                 cstr_0 cupicef.BoolNone)
              (crelation s0 s3 A))
           (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3
              cstr_4 cstr_5 A))
        cupicef.I
        (cupicef.cast
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3))))))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))))))
           (cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))))))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3))))))))
              cupicef.I (crelation s0 s3 A)
              (x :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.prod
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3))))))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))))))
                 cupicef.I (crelation s0 s3 A)
                 (y :
                    cupicef.Term
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3)))
                      (crelation s0 s3 A) =>
                  cupicef.prod
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3))))))
                    cupicef.I (crelation s0 s3 A)
                    (z :
                       cupicef.Term
                         (cupicef.sup (cupicef.type s0)
                            (cupicef.axiom (cupicef.type s3)))
                         (crelation s0 s3 A) =>
                     cupicef.prod
                       (cupicef.rule (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3)))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3))))
                       (cupicef.rule
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))))
                       cupicef.I
                       (cupicef.prod (cupicef.type s0)
                          (cupicef.rule (cupicef.type s0) (cupicef.type s3))
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          cupicef.I A
                          (x0 : cupicef.Term (cupicef.type s0) A =>
                           cupicef.prod (cupicef.type s0) (cupicef.type s3)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3))
                             cupicef.I A
                             (y0 : cupicef.Term (cupicef.type s0) A =>
                              Coq__Init__Datatypes.prod (cupicef.type s3)
                                (cupicef.type s3)
                                (cupicef.prod (cupicef.type s3)
                                   (cupicef.type s3)
                                   (cupicef.rule (cupicef.type s3)
                                      (cupicef.type s3))
                                   cupicef.I (x x0 y0)
                                   (__ :
                                      cupicef.Term (cupicef.type s3)
                                        (x x0 y0) =>
                                    y x0 y0))
                                (cupicef.prod (cupicef.type s3)
                                   (cupicef.type s3)
                                   (cupicef.rule (cupicef.type s3)
                                      (cupicef.type s3))
                                   cupicef.I (y x0 y0)
                                   (__ :
                                      cupicef.Term (cupicef.type s3)
                                        (y x0 y0) =>
                                    x x0 y0)))))
                       (X :
                          (x0 : cupicef.Term (cupicef.type s0) A ->
                           y0 : cupicef.Term (cupicef.type s0) A ->
                           cupicef.Term (cupicef.type s3)
                             (Coq__Init__Datatypes.prod (cupicef.type s3)
                                (cupicef.type s3)
                                (cupicef.prod (cupicef.type s3)
                                   (cupicef.type s3)
                                   (cupicef.rule (cupicef.type s3)
                                      (cupicef.type s3))
                                   cupicef.I (x x0 y0)
                                   (__ :
                                      cupicef.Term (cupicef.type s3)
                                        (x x0 y0) =>
                                    y x0 y0))
                                (cupicef.prod (cupicef.type s3)
                                   (cupicef.type s3)
                                   (cupicef.rule (cupicef.type s3)
                                      (cupicef.type s3))
                                   cupicef.I (y x0 y0)
                                   (__ :
                                      cupicef.Term (cupicef.type s3)
                                        (y x0 y0) =>
                                    x x0 y0)))) =>
                        cupicef.prod
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3)))
                          (cupicef.rule
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3))))
                          cupicef.I
                          (cupicef.prod (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3))
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))
                             cupicef.I A
                             (x0 : cupicef.Term (cupicef.type s0) A =>
                              cupicef.prod (cupicef.type s0)
                                (cupicef.type s3)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3))
                                cupicef.I A
                                (y0 : cupicef.Term (cupicef.type s0) A =>
                                 Coq__Init__Datatypes.prod (cupicef.type s3)
                                   (cupicef.type s3)
                                   (cupicef.prod (cupicef.type s3)
                                      (cupicef.type s3)
                                      (cupicef.rule (cupicef.type s3)
                                         (cupicef.type s3))
                                      cupicef.I (y x0 y0)
                                      (__ :
                                         cupicef.Term (cupicef.type s3)
                                           (y x0 y0) =>
                                       z x0 y0))
                                   (cupicef.prod (cupicef.type s3)
                                      (cupicef.type s3)
                                      (cupicef.rule (cupicef.type s3)
                                         (cupicef.type s3))
                                      cupicef.I (z x0 y0)
                                      (__ :
                                         cupicef.Term (cupicef.type s3)
                                           (z x0 y0) =>
                                       y x0 y0)))))
                          (X0 :
                             (x0 : cupicef.Term (cupicef.type s0) A ->
                              y0 : cupicef.Term (cupicef.type s0) A ->
                              cupicef.Term (cupicef.type s3)
                                (Coq__Init__Datatypes.prod (cupicef.type s3)
                                   (cupicef.type s3)
                                   (cupicef.prod (cupicef.type s3)
                                      (cupicef.type s3)
                                      (cupicef.rule (cupicef.type s3)
                                         (cupicef.type s3))
                                      cupicef.I (y x0 y0)
                                      (__ :
                                         cupicef.Term (cupicef.type s3)
                                           (y x0 y0) =>
                                       z x0 y0))
                                   (cupicef.prod (cupicef.type s3)
                                      (cupicef.type s3)
                                      (cupicef.rule (cupicef.type s3)
                                         (cupicef.type s3))
                                      cupicef.I (z x0 y0)
                                      (__ :
                                         cupicef.Term (cupicef.type s3)
                                           (z x0 y0) =>
                                       y x0 y0)))) =>
                           cupicef.prod (cupicef.type s0)
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.type s3))
                             (cupicef.rule (cupicef.type s0)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3)))
                             cupicef.I A
                             (x0 : cupicef.Term (cupicef.type s0) A =>
                              cupicef.prod (cupicef.type s0)
                                (cupicef.type s3)
                                (cupicef.rule (cupicef.type s0)
                                   (cupicef.type s3))
                                cupicef.I A
                                (y0 : cupicef.Term (cupicef.type s0) A =>
                                 (X1 :
                                    cupicef.Term (cupicef.type s3)
                                      (Coq__Init__Datatypes.prod
                                         (cupicef.type s3) (cupicef.type s3)
                                         (cupicef.prod (cupicef.type s3)
                                            (cupicef.type s3)
                                            (cupicef.rule (cupicef.type s3)
                                               (cupicef.type s3))
                                            cupicef.I (y x0 y0)
                                            (__ :
                                               cupicef.Term (cupicef.type s3)
                                                 (y x0 y0) =>
                                             z x0 y0))
                                         (cupicef.prod (cupicef.type s3)
                                            (cupicef.type s3)
                                            (cupicef.rule (cupicef.type s3)
                                               (cupicef.type s3))
                                            cupicef.I (z x0 y0)
                                            (__ :
                                               cupicef.Term (cupicef.type s3)
                                                 (z x0 y0) =>
                                             y x0 y0))) =>
                                  Coq__Init__Datatypes.prod (cupicef.type s3)
                                    (cupicef.type s3)
                                    (cupicef.prod (cupicef.type s3)
                                       (cupicef.type s3)
                                       (cupicef.rule (cupicef.type s3)
                                          (cupicef.type s3))
                                       cupicef.I (x x0 y0)
                                       (__ :
                                          cupicef.Term (cupicef.type s3)
                                            (x x0 y0) =>
                                        z x0 y0))
                                    (cupicef.prod (cupicef.type s3)
                                       (cupicef.type s3)
                                       (cupicef.rule (cupicef.type s3)
                                          (cupicef.type s3))
                                       cupicef.I (z x0 y0)
                                       (__ :
                                          cupicef.Term (cupicef.type s3)
                                            (z x0 y0) =>
                                        x x0 y0)))
                                   (X0 x0 y0)))))))))
           (cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2)))))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.rule (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2))))))
              cupicef.I (crelation s0 s3 A)
              (x :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.prod
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.rule (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2)))))
                 cupicef.I (crelation s0 s3 A)
                 (y :
                    cupicef.Term
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3)))
                      (crelation s0 s3 A) =>
                  cupicef.prod
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.rule (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2))))
                    cupicef.I (crelation s0 s3 A)
                    (z :
                       cupicef.Term
                         (cupicef.sup (cupicef.type s0)
                            (cupicef.axiom (cupicef.type s3)))
                         (crelation s0 s3 A) =>
                     cupicef.prod (cupicef.type s2)
                       (cupicef.rule (cupicef.type s2) (cupicef.type s2))
                       (cupicef.rule (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2)))
                       cupicef.I
                       (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                          cstr_2 cstr_3 cstr_4 cstr_5 A x y)
                       (__ :
                          cupicef.Term (cupicef.type s2)
                            (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                               cstr_2 cstr_3 cstr_4 cstr_5 A x y) =>
                        cupicef.prod (cupicef.type s2) (cupicef.type s2)
                          (cupicef.rule (cupicef.type s2) (cupicef.type s2))
                          cupicef.I
                          (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                             cstr_2 cstr_3 cstr_4 cstr_5 A y z)
                          (__0 :
                             cupicef.Term (cupicef.type s2)
                               (relation__equivalence s0 s1 s2 s3 cstr_0
                                  cstr_1 cstr_2 cstr_3 cstr_4 cstr_5 A y z) =>
                           relation__equivalence s0 s1 s2 s3 cstr_0 cstr_1
                             cstr_2 cstr_3 cstr_4 cstr_5 A x z))))))
           cupicef.I
           (x :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            y :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            z :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            X :
              (x0 : cupicef.Term (cupicef.type s0) A ->
               y0 : cupicef.Term (cupicef.type s0) A ->
               cupicef.Term (cupicef.type s3)
                 (Coq__Init__Datatypes.prod (cupicef.type s3)
                    (cupicef.type s3)
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (x x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                        y x0 y0))
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (y x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                        x x0 y0)))) =>
            X0 :
              (x0 : cupicef.Term (cupicef.type s0) A ->
               y0 : cupicef.Term (cupicef.type s0) A ->
               cupicef.Term (cupicef.type s3)
                 (Coq__Init__Datatypes.prod (cupicef.type s3)
                    (cupicef.type s3)
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (y x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                        z x0 y0))
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (z x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                        y x0 y0)))) =>
            x0 : cupicef.Term (cupicef.type s0) A =>
            y0 : cupicef.Term (cupicef.type s0) A =>
            Coq__Init__Datatypes.prod__rect
              (cupicef.cast (cupicef.axiom (cupicef.type s3))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cstr_4
                 (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                    cupicef.I (y x0 y0)
                    (__ : cupicef.Term (cupicef.type s3) (y x0 y0) => z x0 y0)))
              (cupicef.cast (cupicef.axiom (cupicef.type s3))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cstr_5
                 (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                    cupicef.I (z x0 y0)
                    (__ : cupicef.Term (cupicef.type s3) (z x0 y0) => y x0 y0)))
              (cupicef.cast
                 (cupicef.rule (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule (cupicef.type s3)
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 (cupicef.prod (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.rule (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)))
                    cupicef.I
                    (Coq__Init__Datatypes.prod (cupicef.type s3)
                       (cupicef.type s3)
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (y x0 y0)
                          (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                           z x0 y0))
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (z x0 y0)
                          (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                           y x0 y0)))
                    (X1 :
                       cupicef.Term (cupicef.type s3)
                         (Coq__Init__Datatypes.prod (cupicef.type s3)
                            (cupicef.type s3)
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (y x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                z x0 y0))
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (z x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                                y x0 y0))) =>
                     cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I))
                 (cupicef.prod (cupicef.type s3)
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type s3)
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I
                    (Coq__Init__Datatypes.prod (cupicef.type s3)
                       (cupicef.type s3)
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (y x0 y0)
                          (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                           z x0 y0))
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (z x0 y0)
                          (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                           y x0 y0)))
                    (p :
                       cupicef.Term (cupicef.type s3)
                         (Coq__Init__Datatypes.prod (cupicef.type s3)
                            (cupicef.type s3)
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (y x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                z x0 y0))
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (z x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                                y x0 y0))) =>
                     cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I))
                 cstr_6
                 (X1 :
                    cupicef.Term (cupicef.type s3)
                      (Coq__Init__Datatypes.prod (cupicef.type s3)
                         (cupicef.type s3)
                         (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                            (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                            cupicef.I (y x0 y0)
                            (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                             z x0 y0))
                         (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                            (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                            cupicef.I (z x0 y0)
                            (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                             y x0 y0))) =>
                  Coq__Init__Datatypes.prod (cupicef.type s3)
                    (cupicef.type s3)
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (x x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                        z x0 y0))
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (z x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                        x x0 y0))))
              (a :
                 (__ : cupicef.Term (cupicef.type s3) (y x0 y0) ->
                  cupicef.Term (cupicef.type s3) (z x0 y0)) =>
               b :
                 (__ : cupicef.Term (cupicef.type s3) (z x0 y0) ->
                  cupicef.Term (cupicef.type s3) (y x0 y0)) =>
               Coq__Init__Datatypes.prod__rect
                 (cupicef.cast (cupicef.axiom (cupicef.type s3))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cstr_4
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (x x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                        y x0 y0)))
                 (cupicef.cast (cupicef.axiom (cupicef.type s3))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cstr_5
                    (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                       (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                       cupicef.I (y x0 y0)
                       (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                        x x0 y0)))
                 (cupicef.cast
                    (cupicef.rule (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule (cupicef.type s3)
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                    (cupicef.prod (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3))
                       (cupicef.rule (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)))
                       cupicef.I
                       (Coq__Init__Datatypes.prod (cupicef.type s3)
                          (cupicef.type s3)
                          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                             (cupicef.rule (cupicef.type s3)
                                (cupicef.type s3))
                             cupicef.I (x x0 y0)
                             (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                              y x0 y0))
                          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                             (cupicef.rule (cupicef.type s3)
                                (cupicef.type s3))
                             cupicef.I (y x0 y0)
                             (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                              x x0 y0)))
                       (X1 :
                          cupicef.Term (cupicef.type s3)
                            (Coq__Init__Datatypes.prod (cupicef.type s3)
                               (cupicef.type s3)
                               (cupicef.prod (cupicef.type s3)
                                  (cupicef.type s3)
                                  (cupicef.rule (cupicef.type s3)
                                     (cupicef.type s3))
                                  cupicef.I (x x0 y0)
                                  (__ :
                                     cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                   y x0 y0))
                               (cupicef.prod (cupicef.type s3)
                                  (cupicef.type s3)
                                  (cupicef.rule (cupicef.type s3)
                                     (cupicef.type s3))
                                  cupicef.I (y x0 y0)
                                  (__ :
                                     cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                   x x0 y0))) =>
                        cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I))
                    (cupicef.prod (cupicef.type s3)
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type s3)
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                       cupicef.I
                       (Coq__Init__Datatypes.prod (cupicef.type s3)
                          (cupicef.type s3)
                          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                             (cupicef.rule (cupicef.type s3)
                                (cupicef.type s3))
                             cupicef.I (x x0 y0)
                             (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                              y x0 y0))
                          (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                             (cupicef.rule (cupicef.type s3)
                                (cupicef.type s3))
                             cupicef.I (y x0 y0)
                             (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                              x x0 y0)))
                       (p :
                          cupicef.Term (cupicef.type s3)
                            (Coq__Init__Datatypes.prod (cupicef.type s3)
                               (cupicef.type s3)
                               (cupicef.prod (cupicef.type s3)
                                  (cupicef.type s3)
                                  (cupicef.rule (cupicef.type s3)
                                     (cupicef.type s3))
                                  cupicef.I (x x0 y0)
                                  (__ :
                                     cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                   y x0 y0))
                               (cupicef.prod (cupicef.type s3)
                                  (cupicef.type s3)
                                  (cupicef.rule (cupicef.type s3)
                                     (cupicef.type s3))
                                  cupicef.I (y x0 y0)
                                  (__ :
                                     cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                   x x0 y0))) =>
                        cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I))
                    cstr_6
                    (X1 :
                       cupicef.Term (cupicef.type s3)
                         (Coq__Init__Datatypes.prod (cupicef.type s3)
                            (cupicef.type s3)
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (x x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                                y x0 y0))
                            (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                               (cupicef.rule (cupicef.type s3)
                                  (cupicef.type s3))
                               cupicef.I (y x0 y0)
                               (__ : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                                x x0 y0))) =>
                     Coq__Init__Datatypes.prod (cupicef.type s3)
                       (cupicef.type s3)
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (x x0 y0)
                          (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                           z x0 y0))
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (z x0 y0)
                          (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                           x x0 y0))))
                 (a0 :
                    (__ : cupicef.Term (cupicef.type s3) (x x0 y0) ->
                     cupicef.Term (cupicef.type s3) (y x0 y0)) =>
                  b0 :
                    (__ : cupicef.Term (cupicef.type s3) (y x0 y0) ->
                     cupicef.Term (cupicef.type s3) (x x0 y0)) =>
                  Coq__Init__Datatypes.pair
                    (cupicef.cast (cupicef.axiom (cupicef.type s3))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cstr_4
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (x x0 y0)
                          (__ : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                           z x0 y0)))
                    (cupicef.cast (cupicef.axiom (cupicef.type s3))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cstr_5
                       (cupicef.prod (cupicef.type s3) (cupicef.type s3)
                          (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                          cupicef.I (z x0 y0)
                          (__ : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                           x x0 y0)))
                    (X1 : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                     (X2 : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                      (X3 : cupicef.Term (cupicef.type s3) (x x0 y0) =>
                       (X4 : cupicef.Term (cupicef.type s3) (z x0 y0) => X4)
                         (a X2))
                        (b0 X2))
                       (a0 X1))
                    (X1 : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                     (X2 : cupicef.Term (cupicef.type s3) (y x0 y0) =>
                      (X3 : cupicef.Term (cupicef.type s3) (z x0 y0) =>
                       (X4 : cupicef.Term (cupicef.type s3) (x x0 y0) => X4)
                         (b0 X2))
                        (a X2))
                       (b X1)))
                 (let__X s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4
                    cstr_5 cstr_6 A x y z X X0 x0 y0))
              (let__X0 s0 s1 s2 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
                 cstr_6 A x y z X X0 x0 y0)))).

#TYPE_CLASS_INSTANCE relation__equivalence__equivalence.

thm relation__implication__preorder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) ->
  cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) ->
  A : cupicef.Univ (cupicef.type s0) ->
  cupicef.Term (cupicef.sup (cupicef.type s1) (cupicef.type s2))
    (PreOrder s1 s2
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3))))
          (cupicef.axiom (cupicef.type s1))
          (cupicef.univ
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3))))
             cupicef.I)
          (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
             cupicef.I)
          (cupicef.pair
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
             cstr_1
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                   (cupicef.type s1)))
             cstr_0 cupicef.BoolNone)
          (crelation s0 s3 A))
       (cupicef.cast
          (cupicef.rule
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (cupicef.rule
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (cupicef.axiom
                   (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
          (cupicef.sup (cupicef.type s1) (cupicef.axiom (cupicef.type s2)))
          (cupicef.prod
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (cupicef.rule
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (cupicef.axiom
                   (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
             (cupicef.rule
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (cupicef.rule
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (cupicef.axiom
                      (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
             cupicef.I (crelation s0 s3 A)
             (R :
                cupicef.Term
                  (cupicef.sup (cupicef.type s0)
                     (cupicef.axiom (cupicef.type s3)))
                  (crelation s0 s3 A) =>
              cupicef.prod
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (cupicef.axiom
                   (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                (cupicef.rule
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (cupicef.axiom
                      (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
                cupicef.I (crelation s0 s3 A)
                (R_27_ :
                   cupicef.Term
                     (cupicef.sup (cupicef.type s0)
                        (cupicef.axiom (cupicef.type s3)))
                     (crelation s0 s3 A) =>
                 cupicef.univ
                   (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                   (cupicef.axiom
                      (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                   cupicef.I)))
          (crelation s1 s2
             (cupicef.cast
                (cupicef.axiom
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3))))
                (cupicef.axiom (cupicef.type s1))
                (cupicef.univ
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (cupicef.axiom
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3))))
                   cupicef.I)
                (cupicef.univ (cupicef.type s1)
                   (cupicef.axiom (cupicef.type s1)) cupicef.I)
                (cupicef.pair
                   (cupicef.BoolSome
                      (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                   cstr_1
                   (cupicef.BoolSome
                      (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                         (cupicef.type s1)))
                   cstr_0 cupicef.BoolNone)
                (crelation s0 s3 A)))
          (cupicef.pair
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)))
             cstr_3
             (cupicef.BoolSome
                (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)))
             cstr_2 cupicef.BoolNone)
          (subrelation s0 s3 s3 A)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) =>
   cstr_1 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) =>
   A : cupicef.Univ (cupicef.type s0) =>
   Build__PreOrder s1 s2
     (cupicef.cast
        (cupicef.axiom
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3))))
        (cupicef.axiom (cupicef.type s1))
        (cupicef.univ
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.axiom
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3))))
           cupicef.I)
        (cupicef.univ (cupicef.type s1) (cupicef.axiom (cupicef.type s1))
           cupicef.I)
        (cupicef.pair
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
           cstr_1
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                 (cupicef.type s1)))
           cstr_0 cupicef.BoolNone)
        (crelation s0 s3 A))
     (cupicef.cast
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
        (cupicef.sup (cupicef.type s1) (cupicef.axiom (cupicef.type s2)))
        (cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
           cupicef.I (crelation s0 s3 A)
           (R :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
              cupicef.I (crelation s0 s3 A)
              (R_27_ :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.univ (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                 cupicef.I)))
        (crelation s1 s2
           (cupicef.cast
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3))))
                 cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                 cstr_1
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                       (cupicef.type s1)))
                 cstr_0 cupicef.BoolNone)
              (crelation s0 s3 A)))
        (cupicef.pair
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)))
           cstr_3
           (cupicef.BoolSome
              (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)))
           cstr_2 cupicef.BoolNone)
        (subrelation s0 s3 s3 A))
     (cupicef.cast
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
        (cupicef.sup (cupicef.type s1) (cupicef.type s2))
        (cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.sup (cupicef.type s0) (cupicef.type s3))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
           cupicef.I (crelation s0 s3 A)
           (x :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            subrelation s0 s3 s3 A x x))
        (Reflexive s1 s2
           (cupicef.cast
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3))))
                 cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                 cstr_1
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                       (cupicef.type s1)))
                 cstr_0 cupicef.BoolNone)
              (crelation s0 s3 A))
           (cupicef.cast
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
              (cupicef.sup (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.prod
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
                 cupicef.I (crelation s0 s3 A)
                 (R :
                    cupicef.Term
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3)))
                      (crelation s0 s3 A) =>
                  cupicef.prod
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
                    cupicef.I (crelation s0 s3 A)
                    (R_27_ :
                       cupicef.Term
                         (cupicef.sup (cupicef.type s0)
                            (cupicef.axiom (cupicef.type s3)))
                         (crelation s0 s3 A) =>
                     cupicef.univ
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                       cupicef.I)))
              (crelation s1 s2
                 (cupicef.cast
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3))))
                    (cupicef.axiom (cupicef.type s1))
                    (cupicef.univ
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s0)
                             (cupicef.axiom (cupicef.type s3))))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I)
                    (cupicef.pair
                       (cupicef.BoolSome
                          (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                       cstr_1
                       (cupicef.BoolSome
                          (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                             (cupicef.type s1)))
                       cstr_0 cupicef.BoolNone)
                    (crelation s0 s3 A)))
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)))
                 cstr_3
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)))
                 cstr_2 cupicef.BoolNone)
              (subrelation s0 s3 s3 A)))
        cupicef.I
        (x :
           cupicef.Term
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (crelation s0 s3 A) =>
         cupicef.cast
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s3) (cupicef.type s3))))
           (cupicef.sup (cupicef.type s0) (cupicef.type s3))
           (cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s3) (cupicef.type s3)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))))
              cupicef.I A
              (x0 : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3)))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s3) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                    cupicef.I (x x0 y)
                    (X : cupicef.Term (cupicef.type s3) (x x0 y) => x x0 y))))
           (subrelation s0 s3 s3 A x x) cupicef.I
           (x0 : cupicef.Term (cupicef.type s0) A =>
            y : cupicef.Term (cupicef.type s0) A =>
            X : cupicef.Term (cupicef.type s3) (x x0 y) =>
            X)))
     (cupicef.cast
        (cupicef.rule
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))))
        (cupicef.sup (cupicef.type s1) (cupicef.type s2))
        (cupicef.prod
           (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))))))
           (cupicef.rule
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.rule
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))))
           cupicef.I (crelation s0 s3 A)
           (x :
              cupicef.Term
                (cupicef.sup (cupicef.type s0)
                   (cupicef.axiom (cupicef.type s3)))
                (crelation s0 s3 A) =>
            cupicef.prod
              (cupicef.sup (cupicef.type s0)
                 (cupicef.axiom (cupicef.type s3)))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.rule
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))))))
              cupicef.I (crelation s0 s3 A)
              (y :
                 cupicef.Term
                   (cupicef.sup (cupicef.type s0)
                      (cupicef.axiom (cupicef.type s3)))
                   (crelation s0 s3 A) =>
               cupicef.prod
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.rule
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
                 cupicef.I (crelation s0 s3 A)
                 (z :
                    cupicef.Term
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3)))
                      (crelation s0 s3 A) =>
                  cupicef.prod
                    (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.rule
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
                    cupicef.I (subrelation s0 s3 s3 A x y)
                    (X :
                       cupicef.Term
                         (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                         (subrelation s0 s3 s3 A x y) =>
                     cupicef.prod
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.rule
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                       cupicef.I (subrelation s0 s3 s3 A y z)
                       (X0 :
                          cupicef.Term
                            (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                            (subrelation s0 s3 s3 A y z) =>
                        subrelation s0 s3 s3 A x z))))))
        (Transitive s1 s2
           (cupicef.cast
              (cupicef.axiom
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3))))
              (cupicef.axiom (cupicef.type s1))
              (cupicef.univ
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.axiom
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3))))
                 cupicef.I)
              (cupicef.univ (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s1)) cupicef.I)
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                 cstr_1
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                       (cupicef.type s1)))
                 cstr_0 cupicef.BoolNone)
              (crelation s0 s3 A))
           (cupicef.cast
              (cupicef.rule
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
              (cupicef.sup (cupicef.type s1)
                 (cupicef.axiom (cupicef.type s2)))
              (cupicef.prod
                 (cupicef.sup (cupicef.type s0)
                    (cupicef.axiom (cupicef.type s3)))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
                 (cupicef.rule
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3)))))
                 cupicef.I (crelation s0 s3 A)
                 (R :
                    cupicef.Term
                      (cupicef.sup (cupicef.type s0)
                         (cupicef.axiom (cupicef.type s3)))
                      (crelation s0 s3 A) =>
                  cupicef.prod
                    (cupicef.sup (cupicef.type s0)
                       (cupicef.axiom (cupicef.type s3)))
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                    (cupicef.rule
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3))))
                    cupicef.I (crelation s0 s3 A)
                    (R_27_ :
                       cupicef.Term
                         (cupicef.sup (cupicef.type s0)
                            (cupicef.axiom (cupicef.type s3)))
                         (crelation s0 s3 A) =>
                     cupicef.univ
                       (cupicef.sup (cupicef.type s0) (cupicef.type s3))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s0) (cupicef.type s3)))
                       cupicef.I)))
              (crelation s1 s2
                 (cupicef.cast
                    (cupicef.axiom
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3))))
                    (cupicef.axiom (cupicef.type s1))
                    (cupicef.univ
                       (cupicef.sup (cupicef.type s0)
                          (cupicef.axiom (cupicef.type s3)))
                       (cupicef.axiom
                          (cupicef.sup (cupicef.type s0)
                             (cupicef.axiom (cupicef.type s3))))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s1)
                       (cupicef.axiom (cupicef.type s1)) cupicef.I)
                    (cupicef.pair
                       (cupicef.BoolSome
                          (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)))
                       cstr_1
                       (cupicef.BoolSome
                          (cupicef.Cumul (cupicef.axiom (cupicef.type s3))
                             (cupicef.type s1)))
                       cstr_0 cupicef.BoolNone)
                    (crelation s0 s3 A)))
              (cupicef.pair
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)))
                 cstr_3
                 (cupicef.BoolSome
                    (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)))
                 cstr_2 cupicef.BoolNone)
              (subrelation s0 s3 s3 A)))
        cupicef.I
        (x :
           cupicef.Term
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (crelation s0 s3 A) =>
         y :
           cupicef.Term
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (crelation s0 s3 A) =>
         z :
           cupicef.Term
             (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
             (crelation s0 s3 A) =>
         X :
           cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
             (subrelation s0 s3 s3 A x y) =>
         X0 :
           cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
             (subrelation s0 s3 s3 A y z) =>
         cupicef.cast
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s3) (cupicef.type s3))))
           (cupicef.sup (cupicef.type s0) (cupicef.type s3))
           (cupicef.prod (cupicef.type s0)
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s3) (cupicef.type s3)))
              (cupicef.rule (cupicef.type s0)
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))))
              cupicef.I A
              (x0 : cupicef.Term (cupicef.type s0) A =>
               cupicef.prod (cupicef.type s0)
                 (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                 (cupicef.rule (cupicef.type s0)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3)))
                 cupicef.I A
                 (y0 : cupicef.Term (cupicef.type s0) A =>
                  cupicef.prod (cupicef.type s3) (cupicef.type s3)
                    (cupicef.rule (cupicef.type s3) (cupicef.type s3))
                    cupicef.I (x x0 y0)
                    (X1 : cupicef.Term (cupicef.type s3) (x x0 y0) => z x0 y0))))
           (subrelation s0 s3 s3 A x z) cupicef.I
           (x0 : cupicef.Term (cupicef.type s0) A =>
            y0 : cupicef.Term (cupicef.type s0) A =>
            X1 : cupicef.Term (cupicef.type s3) (x x0 y0) =>
            (X2 :
               (y1 : cupicef.Term (cupicef.type s0) A ->
                __ : cupicef.Term (cupicef.type s3) (y x0 y1) ->
                cupicef.Term (cupicef.type s3) (z x0 y1)) =>
             (X3 :
                (__ : cupicef.Term (cupicef.type s3) (y x0 y0) ->
                 cupicef.Term (cupicef.type s3) (z x0 y0)) =>
              (X4 :
                 (y1 : cupicef.Term (cupicef.type s0) A ->
                  __ : cupicef.Term (cupicef.type s3) (x x0 y1) ->
                  cupicef.Term (cupicef.type s3) (y x0 y1)) =>
               X0 x0 y0 (X x0 y0 X1)) (X x0)) (X2 y0))
              (X0 x0)))).

#TYPE_CLASS_INSTANCE relation__implication__preorder.

def PartialOrder :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s4)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
      (Equivalence s0 s3 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  preo :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
      (PreOrder s0 s3 A R) ->
  cupicef.Univ (cupicef.type s2)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s4)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
       (Equivalence s0 s3 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   preo :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
       (PreOrder s0 s3 A R) =>
   relation__equivalence s0 s1 s2 s3 cstr_0 cstr_2 cstr_3 cstr_4 cstr_5
     cstr_6 A eqA
     (relation__conjunction s0 s3 s3 s3 cupicef.I cstr_5 cupicef.I cstr_6 A R
        (flip s0 s0 s4 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s3)))
              (cupicef.axiom (cupicef.type s4))
              (cupicef.univ (cupicef.axiom (cupicef.type s3))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s3))) cupicef.I)
              (cupicef.univ (cupicef.type s4)
                 (cupicef.axiom (cupicef.type s4)) cupicef.I)
              cstr_1
              (cupicef.univ (cupicef.type s3)
                 (cupicef.axiom (cupicef.type s3)) cupicef.I))
           R)).

#TYPE_CLASS PartialOrder.

def partial__order__equivalence :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s4)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
      (Equivalence s0 s3 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
      (crelation s0 s3 A) ->
  preo :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
      (PreOrder s0 s3 A R) ->
  PartialOrder0 :
    cupicef.Term (cupicef.type s2)
      (PartialOrder s0 s1 s2 s3 s4 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
         cstr_6 A eqA equ R preo) ->
  cupicef.Term (cupicef.type s2)
    (relation__equivalence s0 s1 s2 s3 cstr_0 cstr_2 cstr_3 cstr_4 cstr_5
       cstr_6 A eqA
       (relation__conjunction s0 s3 s3 s3 cupicef.I cstr_5 cupicef.I cstr_6 A
          R
          (flip s0 s0 s4 A A
             (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s3)))
                (cupicef.axiom (cupicef.type s4))
                (cupicef.univ (cupicef.axiom (cupicef.type s3))
                   (cupicef.axiom (cupicef.axiom (cupicef.type s3)))
                   cupicef.I)
                (cupicef.univ (cupicef.type s4)
                   (cupicef.axiom (cupicef.type s4)) cupicef.I)
                cstr_1
                (cupicef.univ (cupicef.type s3)
                   (cupicef.axiom (cupicef.type s3)) cupicef.I))
             R)))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s1)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s3)) (cupicef.type s4)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s3) (cupicef.type s2)) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s3) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
       (Equivalence s0 s3 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s3)))
       (crelation s0 s3 A) =>
   preo :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s3))
       (PreOrder s0 s3 A R) =>
   PartialOrder0 :
     cupicef.Term (cupicef.type s2)
       (PartialOrder s0 s1 s2 s3 s4 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
          cstr_6 A eqA equ R preo) =>
   PartialOrder0.

def let__X1 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (Equivalence s0 s4 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  preo :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (PreOrder s0 s4 A R) ->
  H :
    cupicef.Term (cupicef.type s2)
      (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
         cstr_6 A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type s0) A ->
  y : cupicef.Term (cupicef.type s0) A ->
  X : cupicef.Term (cupicef.type s4) (R x y) ->
  X0 : cupicef.Term (cupicef.type s4) (R y x) ->
  x0 : cupicef.Term (cupicef.type s0) A ->
  y0 : cupicef.Term (cupicef.type s0) A ->
  __ :
    cupicef.Term (cupicef.type s4)
      (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I cstr_6 A
         R
         (flip s0 s0 s3 A A
            (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
               (cupicef.axiom (cupicef.type s3))
               (cupicef.univ (cupicef.axiom (cupicef.type s4))
                  (cupicef.axiom (cupicef.axiom (cupicef.type s4))) cupicef.I)
               (cupicef.univ (cupicef.type s3)
                  (cupicef.axiom (cupicef.type s3)) cupicef.I)
               cstr_1
               (cupicef.univ (cupicef.type s4)
                  (cupicef.axiom (cupicef.type s4)) cupicef.I))
            R)
         x0 y0) ->
  cupicef.Term (cupicef.type s4) (eqA x0 y0)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (Equivalence s0 s4 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   preo :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (PreOrder s0 s4 A R) =>
   H :
     cupicef.Term (cupicef.type s2)
       (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
          cstr_6 A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type s0) A =>
   y : cupicef.Term (cupicef.type s0) A =>
   X : cupicef.Term (cupicef.type s4) (R x y) =>
   X0 : cupicef.Term (cupicef.type s4) (R y x) =>
   x0 : cupicef.Term (cupicef.type s0) A =>
   y0 : cupicef.Term (cupicef.type s0) A =>
   Coq__Init__Datatypes.match____prod (cupicef.type s4)
     (cupicef.cast (cupicef.axiom (cupicef.type s4))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cstr_5
        (cupicef.prod (cupicef.type s4) (cupicef.type s4)
           (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
           (eqA x0 y0)
           (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) =>
            relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)))
     (cupicef.cast (cupicef.axiom (cupicef.type s4))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cstr_6
        (cupicef.prod (cupicef.type s4) (cupicef.type s4)
           (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
           (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)
           (__ :
              cupicef.Term (cupicef.type s4)
                (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0) =>
            eqA x0 y0)))
     (__ :
        cupicef.Term (cupicef.type s4)
          (Coq__Init__Datatypes.prod (cupicef.type s4) (cupicef.type s4)
             (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                (eqA x0 y0)
                (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) =>
                 relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0))
             (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0)
                (__ :
                   cupicef.Term (cupicef.type s4)
                     (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                        cupicef.I cstr_6 A R
                        (flip s0 s0 s3 A A
                           (cupicef.cast
                              (cupicef.axiom
                                 (cupicef.axiom (cupicef.type s4)))
                              (cupicef.axiom (cupicef.type s3))
                              (cupicef.univ (cupicef.axiom (cupicef.type s4))
                                 (cupicef.axiom
                                    (cupicef.axiom (cupicef.type s4)))
                                 cupicef.I)
                              (cupicef.univ (cupicef.type s3)
                                 (cupicef.axiom (cupicef.type s3)) cupicef.I)
                              cstr_1
                              (cupicef.univ (cupicef.type s4)
                                 (cupicef.axiom (cupicef.type s4)) cupicef.I))
                           R)
                        x0 y0) =>
                 eqA x0 y0))) =>
      cupicef.prod (cupicef.type s4) (cupicef.type s4)
        (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
        (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I cstr_6
           A R
           (flip s0 s0 s3 A A
              (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                 (cupicef.axiom (cupicef.type s3))
                 (cupicef.univ (cupicef.axiom (cupicef.type s4))
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    cupicef.I)
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 cstr_1
                 (cupicef.univ (cupicef.type s4)
                    (cupicef.axiom (cupicef.type s4)) cupicef.I))
              R)
           x0 y0)
        (__0 :
           cupicef.Term (cupicef.type s4)
             (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                cstr_6 A R
                (flip s0 s0 s3 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                      (cupicef.axiom (cupicef.type s3))
                      (cupicef.univ (cupicef.axiom (cupicef.type s4))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      cstr_1
                      (cupicef.univ (cupicef.type s4)
                         (cupicef.axiom (cupicef.type s4)) cupicef.I))
                   R)
                x0 y0) =>
         eqA x0 y0))
     (__ :
        (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) ->
         cupicef.Term (cupicef.type s4)
           (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)) =>
      __0 :
        (__0 :
           cupicef.Term (cupicef.type s4)
             (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                cstr_6 A R
                (flip s0 s0 s3 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                      (cupicef.axiom (cupicef.type s3))
                      (cupicef.univ (cupicef.axiom (cupicef.type s4))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      cstr_1
                      (cupicef.univ (cupicef.type s4)
                         (cupicef.axiom (cupicef.type s4)) cupicef.I))
                   R)
                x0 y0) ->
         cupicef.Term (cupicef.type s4) (eqA x0 y0)) =>
      __0)
     (H x0 y0).

thm partial__order__antisym :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (Equivalence s0 s4 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  preo :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (PreOrder s0 s4 A R) ->
  H :
    cupicef.Term (cupicef.type s2)
      (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
         cstr_6 A eqA equ R preo) ->
  cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
    (Antisymmetric s0 s4 s4 A eqA equ R)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (Equivalence s0 s4 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   preo :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (PreOrder s0 s4 A R) =>
   H :
     cupicef.Term (cupicef.type s2)
       (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
          cstr_6 A eqA equ R preo) =>
   cupicef.cast
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4)))))
     (cupicef.sup (cupicef.type s0) (cupicef.type s4))
     (cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4))))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s4)
                 (cupicef.rule (cupicef.type s4) (cupicef.type s4)))))
        cupicef.I A
        (x : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s0)
           (cupicef.rule (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4)))
           (cupicef.rule (cupicef.type s0)
              (cupicef.rule (cupicef.type s4)
                 (cupicef.rule (cupicef.type s4) (cupicef.type s4))))
           cupicef.I A
           (y : cupicef.Term (cupicef.type s0) A =>
            cupicef.prod (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4))
              (cupicef.rule (cupicef.type s4)
                 (cupicef.rule (cupicef.type s4) (cupicef.type s4)))
              cupicef.I (R x y)
              (X : cupicef.Term (cupicef.type s4) (R x y) =>
               cupicef.prod (cupicef.type s4) (cupicef.type s4)
                 (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                 (R y x)
                 (X0 : cupicef.Term (cupicef.type s4) (R y x) => eqA x y)))))
     (Antisymmetric s0 s4 s4 A eqA equ R) cupicef.I
     (x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      X : cupicef.Term (cupicef.type s4) (R x y) =>
      X0 : cupicef.Term (cupicef.type s4) (R y x) =>
      let__X1 s0 s1 s2 s3 s4 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5 cstr_6
        A eqA equ R preo H x y X X0 x y
        (Coq__Init__Datatypes.pair
           (cupicef.cast (cupicef.axiom (cupicef.type s4))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type s4)
                 (cupicef.axiom (cupicef.type s4)) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cstr_5 (R x y))
           (cupicef.cast (cupicef.axiom (cupicef.type s4))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type s4)
                 (cupicef.axiom (cupicef.type s4)) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cstr_6
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R x y))
           X X0)).

#TYPE_CLASS_INSTANCE partial__order__antisym.

def let__X2 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (Equivalence s0 s4 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  preo :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (PreOrder s0 s4 A R) ->
  H :
    cupicef.Term (cupicef.type s2)
      (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
         cstr_6 A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type s0) A ->
  y : cupicef.Term (cupicef.type s0) A ->
  X : cupicef.Term (cupicef.type s4) (eqA x y) ->
  x0 : cupicef.Term (cupicef.type s0) A ->
  y0 : cupicef.Term (cupicef.type s0) A ->
  __ : cupicef.Term (cupicef.type s4) (eqA x0 y0) ->
  cupicef.Term (cupicef.type s4)
    (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I cstr_6 A R
       (flip s0 s0 s3 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
             (cupicef.axiom (cupicef.type s3))
             (cupicef.univ (cupicef.axiom (cupicef.type s4))
                (cupicef.axiom (cupicef.axiom (cupicef.type s4))) cupicef.I)
             (cupicef.univ (cupicef.type s3)
                (cupicef.axiom (cupicef.type s3)) cupicef.I)
             cstr_1
             (cupicef.univ (cupicef.type s4)
                (cupicef.axiom (cupicef.type s4)) cupicef.I))
          R)
       x0 y0)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (Equivalence s0 s4 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   preo :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (PreOrder s0 s4 A R) =>
   H :
     cupicef.Term (cupicef.type s2)
       (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
          cstr_6 A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type s0) A =>
   y : cupicef.Term (cupicef.type s0) A =>
   X : cupicef.Term (cupicef.type s4) (eqA x y) =>
   x0 : cupicef.Term (cupicef.type s0) A =>
   y0 : cupicef.Term (cupicef.type s0) A =>
   Coq__Init__Datatypes.match____prod (cupicef.type s4)
     (cupicef.cast (cupicef.axiom (cupicef.type s4))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cstr_5
        (cupicef.prod (cupicef.type s4) (cupicef.type s4)
           (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
           (eqA x0 y0)
           (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) =>
            relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)))
     (cupicef.cast (cupicef.axiom (cupicef.type s4))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cstr_6
        (cupicef.prod (cupicef.type s4) (cupicef.type s4)
           (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
           (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)
           (__ :
              cupicef.Term (cupicef.type s4)
                (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0) =>
            eqA x0 y0)))
     (__ :
        cupicef.Term (cupicef.type s4)
          (Coq__Init__Datatypes.prod (cupicef.type s4) (cupicef.type s4)
             (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                (eqA x0 y0)
                (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) =>
                 relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0))
             (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0)
                (__ :
                   cupicef.Term (cupicef.type s4)
                     (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                        cupicef.I cstr_6 A R
                        (flip s0 s0 s3 A A
                           (cupicef.cast
                              (cupicef.axiom
                                 (cupicef.axiom (cupicef.type s4)))
                              (cupicef.axiom (cupicef.type s3))
                              (cupicef.univ (cupicef.axiom (cupicef.type s4))
                                 (cupicef.axiom
                                    (cupicef.axiom (cupicef.type s4)))
                                 cupicef.I)
                              (cupicef.univ (cupicef.type s3)
                                 (cupicef.axiom (cupicef.type s3)) cupicef.I)
                              cstr_1
                              (cupicef.univ (cupicef.type s4)
                                 (cupicef.axiom (cupicef.type s4)) cupicef.I))
                           R)
                        x0 y0) =>
                 eqA x0 y0))) =>
      cupicef.prod (cupicef.type s4) (cupicef.type s4)
        (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
        (eqA x0 y0)
        (__0 : cupicef.Term (cupicef.type s4) (eqA x0 y0) =>
         relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I cstr_6
           A R
           (flip s0 s0 s3 A A
              (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                 (cupicef.axiom (cupicef.type s3))
                 (cupicef.univ (cupicef.axiom (cupicef.type s4))
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    cupicef.I)
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 cstr_1
                 (cupicef.univ (cupicef.type s4)
                    (cupicef.axiom (cupicef.type s4)) cupicef.I))
              R)
           x0 y0))
     (__ :
        (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) ->
         cupicef.Term (cupicef.type s4)
           (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)) =>
      __0 :
        (__0 :
           cupicef.Term (cupicef.type s4)
             (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                cstr_6 A R
                (flip s0 s0 s3 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                      (cupicef.axiom (cupicef.type s3))
                      (cupicef.univ (cupicef.axiom (cupicef.type s4))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      cstr_1
                      (cupicef.univ (cupicef.type s4)
                         (cupicef.axiom (cupicef.type s4)) cupicef.I))
                   R)
                x0 y0) ->
         cupicef.Term (cupicef.type s4) (eqA x0 y0)) =>
      __)
     (H x0 y0).

def let__X3 :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (Equivalence s0 s4 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  preo :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (PreOrder s0 s4 A R) ->
  H :
    cupicef.Term (cupicef.type s2)
      (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
         cstr_6 A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type s0) A ->
  y : cupicef.Term (cupicef.type s0) A ->
  X :
    cupicef.Term (cupicef.type s4)
      (Coq__Init__Datatypes.prod (cupicef.type s4) (cupicef.type s4) (
         R y x) (R x y)) ->
  H1 : cupicef.Term (cupicef.type s4) (R y x) ->
  H2 : cupicef.Term (cupicef.type s4) (R x y) ->
  x0 : cupicef.Term (cupicef.type s0) A ->
  y0 : cupicef.Term (cupicef.type s0) A ->
  __ :
    cupicef.Term (cupicef.type s4)
      (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I cstr_6 A
         R
         (flip s0 s0 s3 A A
            (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
               (cupicef.axiom (cupicef.type s3))
               (cupicef.univ (cupicef.axiom (cupicef.type s4))
                  (cupicef.axiom (cupicef.axiom (cupicef.type s4))) cupicef.I)
               (cupicef.univ (cupicef.type s3)
                  (cupicef.axiom (cupicef.type s3)) cupicef.I)
               cstr_1
               (cupicef.univ (cupicef.type s4)
                  (cupicef.axiom (cupicef.type s4)) cupicef.I))
            R)
         x0 y0) ->
  cupicef.Term (cupicef.type s4) (eqA x0 y0)

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (Equivalence s0 s4 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   preo :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (PreOrder s0 s4 A R) =>
   H :
     cupicef.Term (cupicef.type s2)
       (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
          cstr_6 A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type s0) A =>
   y : cupicef.Term (cupicef.type s0) A =>
   X :
     cupicef.Term (cupicef.type s4)
       (Coq__Init__Datatypes.prod (cupicef.type s4) (cupicef.type s4) (
          R y x) (R x y)) =>
   H1 : cupicef.Term (cupicef.type s4) (R y x) =>
   H2 : cupicef.Term (cupicef.type s4) (R x y) =>
   x0 : cupicef.Term (cupicef.type s0) A =>
   y0 : cupicef.Term (cupicef.type s0) A =>
   Coq__Init__Datatypes.match____prod (cupicef.type s4)
     (cupicef.cast (cupicef.axiom (cupicef.type s4))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cstr_5
        (cupicef.prod (cupicef.type s4) (cupicef.type s4)
           (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
           (eqA x0 y0)
           (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) =>
            relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)))
     (cupicef.cast (cupicef.axiom (cupicef.type s4))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cstr_6
        (cupicef.prod (cupicef.type s4) (cupicef.type s4)
           (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
           (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)
           (__ :
              cupicef.Term (cupicef.type s4)
                (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0) =>
            eqA x0 y0)))
     (__ :
        cupicef.Term (cupicef.type s4)
          (Coq__Init__Datatypes.prod (cupicef.type s4) (cupicef.type s4)
             (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                (eqA x0 y0)
                (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) =>
                 relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0))
             (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                   cstr_6 A R
                   (flip s0 s0 s3 A A
                      (cupicef.cast
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         (cupicef.axiom (cupicef.type s3))
                         (cupicef.univ (cupicef.axiom (cupicef.type s4))
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type s3)
                            (cupicef.axiom (cupicef.type s3)) cupicef.I)
                         cstr_1
                         (cupicef.univ (cupicef.type s4)
                            (cupicef.axiom (cupicef.type s4)) cupicef.I))
                      R)
                   x0 y0)
                (__ :
                   cupicef.Term (cupicef.type s4)
                     (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                        cupicef.I cstr_6 A R
                        (flip s0 s0 s3 A A
                           (cupicef.cast
                              (cupicef.axiom
                                 (cupicef.axiom (cupicef.type s4)))
                              (cupicef.axiom (cupicef.type s3))
                              (cupicef.univ (cupicef.axiom (cupicef.type s4))
                                 (cupicef.axiom
                                    (cupicef.axiom (cupicef.type s4)))
                                 cupicef.I)
                              (cupicef.univ (cupicef.type s3)
                                 (cupicef.axiom (cupicef.type s3)) cupicef.I)
                              cstr_1
                              (cupicef.univ (cupicef.type s4)
                                 (cupicef.axiom (cupicef.type s4)) cupicef.I))
                           R)
                        x0 y0) =>
                 eqA x0 y0))) =>
      cupicef.prod (cupicef.type s4) (cupicef.type s4)
        (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
        (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I cstr_6
           A R
           (flip s0 s0 s3 A A
              (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                 (cupicef.axiom (cupicef.type s3))
                 (cupicef.univ (cupicef.axiom (cupicef.type s4))
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    cupicef.I)
                 (cupicef.univ (cupicef.type s3)
                    (cupicef.axiom (cupicef.type s3)) cupicef.I)
                 cstr_1
                 (cupicef.univ (cupicef.type s4)
                    (cupicef.axiom (cupicef.type s4)) cupicef.I))
              R)
           x0 y0)
        (__0 :
           cupicef.Term (cupicef.type s4)
             (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                cstr_6 A R
                (flip s0 s0 s3 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                      (cupicef.axiom (cupicef.type s3))
                      (cupicef.univ (cupicef.axiom (cupicef.type s4))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      cstr_1
                      (cupicef.univ (cupicef.type s4)
                         (cupicef.axiom (cupicef.type s4)) cupicef.I))
                   R)
                x0 y0) =>
         eqA x0 y0))
     (__ :
        (__ : cupicef.Term (cupicef.type s4) (eqA x0 y0) ->
         cupicef.Term (cupicef.type s4)
           (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
              cstr_6 A R
              (flip s0 s0 s3 A A
                 (cupicef.cast
                    (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                    (cupicef.axiom (cupicef.type s3))
                    (cupicef.univ (cupicef.axiom (cupicef.type s4))
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type s3)
                       (cupicef.axiom (cupicef.type s3)) cupicef.I)
                    cstr_1
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I))
                 R)
              x0 y0)) =>
      __0 :
        (__0 :
           cupicef.Term (cupicef.type s4)
             (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                cstr_6 A R
                (flip s0 s0 s3 A A
                   (cupicef.cast
                      (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                      (cupicef.axiom (cupicef.type s3))
                      (cupicef.univ (cupicef.axiom (cupicef.type s4))
                         (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type s3)
                         (cupicef.axiom (cupicef.type s3)) cupicef.I)
                      cstr_1
                      (cupicef.univ (cupicef.type s4)
                         (cupicef.axiom (cupicef.type s4)) cupicef.I))
                   R)
                x0 y0) ->
         cupicef.Term (cupicef.type s4) (eqA x0 y0)) =>
      __0)
     (H x0 y0).

thm PartialOrder__inverse :
  s0 : cupicef.Nat ->
  s1 : cupicef.Nat ->
  s2 : cupicef.Nat ->
  s3 : cupicef.Nat ->
  s4 : cupicef.Nat ->
  cstr_0 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) ->
  cstr_1 :
    cupicef.eps
      (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) ->
  cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) ->
  cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) ->
  cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) ->
  cstr_5 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  cstr_6 :
    cupicef.eps
      (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) ->
  A : cupicef.Univ (cupicef.type s0) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  equ :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (Equivalence s0 s4 A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
      (crelation s0 s4 A) ->
  preo :
    cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
      (PreOrder s0 s4 A R) ->
  H :
    cupicef.Term (cupicef.type s2)
      (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
         cstr_6 A eqA equ R preo) ->
  cupicef.Term (cupicef.type s2)
    (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
       cstr_6 A eqA equ
       (flip s0 s0 s3 A A
          (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
             (cupicef.axiom (cupicef.type s3))
             (cupicef.univ (cupicef.axiom (cupicef.type s4))
                (cupicef.axiom (cupicef.axiom (cupicef.type s4))) cupicef.I)
             (cupicef.univ (cupicef.type s3)
                (cupicef.axiom (cupicef.type s3)) cupicef.I)
             cstr_1
             (cupicef.univ (cupicef.type s4)
                (cupicef.axiom (cupicef.type s4)) cupicef.I))
          R)
       (flip__PreOrder s0 s4 s3 cstr_1 A R preo))

:= s0 : cupicef.Nat =>
   s1 : cupicef.Nat =>
   s2 : cupicef.Nat =>
   s3 : cupicef.Nat =>
   s4 : cupicef.Nat =>
   cstr_0 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s1)) =>
   cstr_1 :
     cupicef.eps
       (cupicef.Cumul (cupicef.axiom (cupicef.type s4)) (cupicef.type s3)) =>
   cstr_2 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s1)) =>
   cstr_3 : cupicef.eps (cupicef.Cumul (cupicef.type s0) (cupicef.type s2)) =>
   cstr_4 : cupicef.eps (cupicef.Cumul (cupicef.type s4) (cupicef.type s2)) =>
   cstr_5 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   cstr_6 :
     cupicef.eps
       (cupicef.Cumul (cupicef.type s4) (cupicef.type (cupicef.s cupicef.z))) =>
   A : cupicef.Univ (cupicef.type s0) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   equ :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (Equivalence s0 s4 A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type s0) (cupicef.axiom (cupicef.type s4)))
       (crelation s0 s4 A) =>
   preo :
     cupicef.Term (cupicef.sup (cupicef.type s0) (cupicef.type s4))
       (PreOrder s0 s4 A R) =>
   H :
     cupicef.Term (cupicef.type s2)
       (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
          cstr_6 A eqA equ R preo) =>
   cupicef.cast
     (cupicef.rule (cupicef.type s0)
        (cupicef.rule (cupicef.type s0) (cupicef.type s4)))
     (cupicef.type s2)
     (cupicef.prod (cupicef.type s0)
        (cupicef.rule (cupicef.type s0) (cupicef.type s4))
        (cupicef.rule (cupicef.type s0)
           (cupicef.rule (cupicef.type s0) (cupicef.type s4)))
        cupicef.I A
        (x : cupicef.Term (cupicef.type s0) A =>
         cupicef.prod (cupicef.type s0) (cupicef.type s4)
           (cupicef.rule (cupicef.type s0) (cupicef.type s4)) cupicef.I A
           (y : cupicef.Term (cupicef.type s0) A =>
            Coq__Init__Datatypes.prod (cupicef.type s4) (cupicef.type s4)
              (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                 (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                 (eqA x y)
                 (__ : cupicef.Term (cupicef.type s4) (eqA x y) =>
                  relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                    cupicef.I cstr_6 A
                    (x0 : cupicef.Term (cupicef.type s0) A =>
                     y0 : cupicef.Term (cupicef.type s0) A =>
                     R y0 x0)
                    (flip s0 s0 s3 A A
                       (cupicef.cast
                          (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                          (cupicef.axiom (cupicef.type s3))
                          (cupicef.univ (cupicef.axiom (cupicef.type s4))
                             (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type s3)
                             (cupicef.axiom (cupicef.type s3)) cupicef.I)
                          cstr_1
                          (cupicef.univ (cupicef.type s4)
                             (cupicef.axiom (cupicef.type s4)) cupicef.I))
                       (x0 : cupicef.Term (cupicef.type s0) A =>
                        y0 : cupicef.Term (cupicef.type s0) A =>
                        R y0 x0))
                    x y))
              (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                 (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                 (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                    cupicef.I cstr_6 A
                    (x0 : cupicef.Term (cupicef.type s0) A =>
                     y0 : cupicef.Term (cupicef.type s0) A =>
                     R y0 x0)
                    (flip s0 s0 s3 A A
                       (cupicef.cast
                          (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                          (cupicef.axiom (cupicef.type s3))
                          (cupicef.univ (cupicef.axiom (cupicef.type s4))
                             (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type s3)
                             (cupicef.axiom (cupicef.type s3)) cupicef.I)
                          cstr_1
                          (cupicef.univ (cupicef.type s4)
                             (cupicef.axiom (cupicef.type s4)) cupicef.I))
                       (x0 : cupicef.Term (cupicef.type s0) A =>
                        y0 : cupicef.Term (cupicef.type s0) A =>
                        R y0 x0))
                    x y)
                 (__ :
                    cupicef.Term (cupicef.type s4)
                      (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                         cupicef.I cstr_6 A
                         (x0 : cupicef.Term (cupicef.type s0) A =>
                          y0 : cupicef.Term (cupicef.type s0) A =>
                          R y0 x0)
                         (flip s0 s0 s3 A A
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.axiom (cupicef.type s4)))
                               (cupicef.axiom (cupicef.type s3))
                               (cupicef.univ
                                  (cupicef.axiom (cupicef.type s4))
                                  (cupicef.axiom
                                     (cupicef.axiom (cupicef.type s4)))
                                  cupicef.I)
                               (cupicef.univ (cupicef.type s3)
                                  (cupicef.axiom (cupicef.type s3)) cupicef.I)
                               cstr_1
                               (cupicef.univ (cupicef.type s4)
                                  (cupicef.axiom (cupicef.type s4)) cupicef.I))
                            (x0 : cupicef.Term (cupicef.type s0) A =>
                             y0 : cupicef.Term (cupicef.type s0) A =>
                             R y0 x0))
                         x y) =>
                  eqA x y)))))
     (PartialOrder s0 s1 s2 s4 s3 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
        cstr_6 A eqA equ
        (flip s0 s0 s3 A A
           (cupicef.cast (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
              (cupicef.axiom (cupicef.type s3))
              (cupicef.univ (cupicef.axiom (cupicef.type s4))
                 (cupicef.axiom (cupicef.axiom (cupicef.type s4))) cupicef.I)
              (cupicef.univ (cupicef.type s3)
                 (cupicef.axiom (cupicef.type s3)) cupicef.I)
              cstr_1
              (cupicef.univ (cupicef.type s4)
                 (cupicef.axiom (cupicef.type s4)) cupicef.I))
           R)
        (flip__PreOrder s0 s4 s3 cstr_1 A R preo))
     cupicef.I
     (x : cupicef.Term (cupicef.type s0) A =>
      y : cupicef.Term (cupicef.type s0) A =>
      Coq__Init__Datatypes.pair
        (cupicef.cast (cupicef.axiom (cupicef.type s4))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cstr_5
           (cupicef.prod (cupicef.type s4) (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
              (eqA x y)
              (__ : cupicef.Term (cupicef.type s4) (eqA x y) =>
               relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                 cstr_6 A
                 (x0 : cupicef.Term (cupicef.type s0) A =>
                  y0 : cupicef.Term (cupicef.type s0) A =>
                  R y0 x0)
                 (flip s0 s0 s3 A A
                    (cupicef.cast
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       (cupicef.axiom (cupicef.type s3))
                       (cupicef.univ (cupicef.axiom (cupicef.type s4))
                          (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I)
                       cstr_1
                       (cupicef.univ (cupicef.type s4)
                          (cupicef.axiom (cupicef.type s4)) cupicef.I))
                    (x0 : cupicef.Term (cupicef.type s0) A =>
                     y0 : cupicef.Term (cupicef.type s0) A =>
                     R y0 x0))
                 x y)))
        (cupicef.cast (cupicef.axiom (cupicef.type s4))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type s4) (cupicef.axiom (cupicef.type s4))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cstr_6
           (cupicef.prod (cupicef.type s4) (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
              (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                 cstr_6 A
                 (x0 : cupicef.Term (cupicef.type s0) A =>
                  y0 : cupicef.Term (cupicef.type s0) A =>
                  R y0 x0)
                 (flip s0 s0 s3 A A
                    (cupicef.cast
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       (cupicef.axiom (cupicef.type s3))
                       (cupicef.univ (cupicef.axiom (cupicef.type s4))
                          (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I)
                       cstr_1
                       (cupicef.univ (cupicef.type s4)
                          (cupicef.axiom (cupicef.type s4)) cupicef.I))
                    (x0 : cupicef.Term (cupicef.type s0) A =>
                     y0 : cupicef.Term (cupicef.type s0) A =>
                     R y0 x0))
                 x y)
              (__ :
                 cupicef.Term (cupicef.type s4)
                   (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                      cupicef.I cstr_6 A
                      (x0 : cupicef.Term (cupicef.type s0) A =>
                       y0 : cupicef.Term (cupicef.type s0) A =>
                       R y0 x0)
                      (flip s0 s0 s3 A A
                         (cupicef.cast
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            (cupicef.axiom (cupicef.type s3))
                            (cupicef.univ (cupicef.axiom (cupicef.type s4))
                               (cupicef.axiom
                                  (cupicef.axiom (cupicef.type s4)))
                               cupicef.I)
                            (cupicef.univ (cupicef.type s3)
                               (cupicef.axiom (cupicef.type s3)) cupicef.I)
                            cstr_1
                            (cupicef.univ (cupicef.type s4)
                               (cupicef.axiom (cupicef.type s4)) cupicef.I))
                         (x0 : cupicef.Term (cupicef.type s0) A =>
                          y0 : cupicef.Term (cupicef.type s0) A =>
                          R y0 x0))
                      x y) =>
               eqA x y)))
        (cupicef.cast (cupicef.rule (cupicef.type s4) (cupicef.type s4))
           (cupicef.rule (cupicef.type s4) (cupicef.type s4))
           (cupicef.prod (cupicef.type s4) (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
              (eqA x y)
              (X : cupicef.Term (cupicef.type s4) (eqA x y) =>
               relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                 cstr_6 A R
                 (flip s0 s0 s3 A A
                    (cupicef.cast
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       (cupicef.axiom (cupicef.type s3))
                       (cupicef.univ (cupicef.axiom (cupicef.type s4))
                          (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I)
                       cstr_1
                       (cupicef.univ (cupicef.type s4)
                          (cupicef.axiom (cupicef.type s4)) cupicef.I))
                    R)
                 y x))
           (cupicef.prod (cupicef.type s4) (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
              (eqA x y)
              (__ : cupicef.Term (cupicef.type s4) (eqA x y) =>
               relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                 cstr_6 A
                 (x0 : cupicef.Term (cupicef.type s0) A =>
                  y0 : cupicef.Term (cupicef.type s0) A =>
                  R y0 x0)
                 (flip s0 s0 s3 A A
                    (cupicef.cast
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       (cupicef.axiom (cupicef.type s3))
                       (cupicef.univ (cupicef.axiom (cupicef.type s4))
                          (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I)
                       cstr_1
                       (cupicef.univ (cupicef.type s4)
                          (cupicef.axiom (cupicef.type s4)) cupicef.I))
                    (x0 : cupicef.Term (cupicef.type s0) A =>
                     y0 : cupicef.Term (cupicef.type s0) A =>
                     R y0 x0))
                 x y))
           cupicef.I
           (X : cupicef.Term (cupicef.type s4) (eqA x y) =>
            let__X2 s0 s1 s2 s3 s4 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4 cstr_5
              cstr_6 A eqA equ R preo H x y X y x
              (symmetry s0 s4 A eqA (Equivalence__Symmetric s0 s4 A eqA equ)
                 x y X)))
        (cupicef.cast (cupicef.rule (cupicef.type s4) (cupicef.type s4))
           (cupicef.rule (cupicef.type s4) (cupicef.type s4))
           (cupicef.prod (cupicef.type s4) (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
              (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                 cstr_6 A
                 (x0 : cupicef.Term (cupicef.type s0) A =>
                  y0 : cupicef.Term (cupicef.type s0) A =>
                  R y0 x0)
                 (x0 : cupicef.Term (cupicef.type s0) A =>
                  y0 : cupicef.Term (cupicef.type s0) A =>
                  R x0 y0)
                 x y)
              (__ :
                 cupicef.Term (cupicef.type s4)
                   (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                      cupicef.I cstr_6 A
                      (x0 : cupicef.Term (cupicef.type s0) A =>
                       y0 : cupicef.Term (cupicef.type s0) A =>
                       R y0 x0)
                      (x0 : cupicef.Term (cupicef.type s0) A =>
                       y0 : cupicef.Term (cupicef.type s0) A =>
                       R x0 y0)
                      x y) =>
               eqA x y))
           (cupicef.prod (cupicef.type s4) (cupicef.type s4)
              (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
              (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5 cupicef.I
                 cstr_6 A
                 (x0 : cupicef.Term (cupicef.type s0) A =>
                  y0 : cupicef.Term (cupicef.type s0) A =>
                  R y0 x0)
                 (flip s0 s0 s3 A A
                    (cupicef.cast
                       (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                       (cupicef.axiom (cupicef.type s3))
                       (cupicef.univ (cupicef.axiom (cupicef.type s4))
                          (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type s3)
                          (cupicef.axiom (cupicef.type s3)) cupicef.I)
                       cstr_1
                       (cupicef.univ (cupicef.type s4)
                          (cupicef.axiom (cupicef.type s4)) cupicef.I))
                    (x0 : cupicef.Term (cupicef.type s0) A =>
                     y0 : cupicef.Term (cupicef.type s0) A =>
                     R y0 x0))
                 x y)
              (__ :
                 cupicef.Term (cupicef.type s4)
                   (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                      cupicef.I cstr_6 A
                      (x0 : cupicef.Term (cupicef.type s0) A =>
                       y0 : cupicef.Term (cupicef.type s0) A =>
                       R y0 x0)
                      (flip s0 s0 s3 A A
                         (cupicef.cast
                            (cupicef.axiom (cupicef.axiom (cupicef.type s4)))
                            (cupicef.axiom (cupicef.type s3))
                            (cupicef.univ (cupicef.axiom (cupicef.type s4))
                               (cupicef.axiom
                                  (cupicef.axiom (cupicef.type s4)))
                               cupicef.I)
                            (cupicef.univ (cupicef.type s3)
                               (cupicef.axiom (cupicef.type s3)) cupicef.I)
                            cstr_1
                            (cupicef.univ (cupicef.type s4)
                               (cupicef.axiom (cupicef.type s4)) cupicef.I))
                         (x0 : cupicef.Term (cupicef.type s0) A =>
                          y0 : cupicef.Term (cupicef.type s0) A =>
                          R y0 x0))
                      x y) =>
               eqA x y))
           cupicef.I
           (cupicef.cast (cupicef.rule (cupicef.type s4) (cupicef.type s4))
              (cupicef.rule (cupicef.type s4) (cupicef.type s4))
              (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                 (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                 (Coq__Init__Datatypes.prod (cupicef.type s4)
                    (cupicef.type s4) (R y x) (R x y))
                 (X :
                    cupicef.Term (cupicef.type s4)
                      (Coq__Init__Datatypes.prod (cupicef.type s4)
                         (cupicef.type s4) (R y x) (R x y)) =>
                  eqA x y))
              (cupicef.prod (cupicef.type s4) (cupicef.type s4)
                 (cupicef.rule (cupicef.type s4) (cupicef.type s4)) cupicef.I
                 (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                    cupicef.I cstr_6 A
                    (x0 : cupicef.Term (cupicef.type s0) A =>
                     y0 : cupicef.Term (cupicef.type s0) A =>
                     R y0 x0)
                    (x0 : cupicef.Term (cupicef.type s0) A =>
                     y0 : cupicef.Term (cupicef.type s0) A =>
                     R x0 y0)
                    x y)
                 (__ :
                    cupicef.Term (cupicef.type s4)
                      (relation__conjunction s0 s4 s4 s4 cupicef.I cstr_5
                         cupicef.I cstr_6 A
                         (x0 : cupicef.Term (cupicef.type s0) A =>
                          y0 : cupicef.Term (cupicef.type s0) A =>
                          R y0 x0)
                         (x0 : cupicef.Term (cupicef.type s0) A =>
                          y0 : cupicef.Term (cupicef.type s0) A =>
                          R x0 y0)
                         x y) =>
                  eqA x y))
              cupicef.I
              (X :
                 cupicef.Term (cupicef.type s4)
                   (Coq__Init__Datatypes.prod (cupicef.type s4)
                      (cupicef.type s4) (R y x) (R x y)) =>
               Coq__Init__Datatypes.match____prod (cupicef.type s4)
                 (cupicef.cast (cupicef.axiom (cupicef.type s4))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cstr_5 (R y x))
                 (cupicef.cast (cupicef.axiom (cupicef.type s4))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type s4)
                       (cupicef.axiom (cupicef.type s4)) cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cstr_6 (R x y))
                 (p :
                    cupicef.Term (cupicef.type s4)
                      (Coq__Init__Datatypes.prod (cupicef.type s4)
                         (cupicef.type s4) (R y x) (R x y)) =>
                  eqA x y)
                 (H1 : cupicef.Term (cupicef.type s4) (R y x) =>
                  H2 : cupicef.Term (cupicef.type s4) (R x y) =>
                  let__X3 s0 s1 s2 s3 s4 cstr_0 cstr_1 cstr_2 cstr_3 cstr_4
                    cstr_5 cstr_6 A eqA equ R preo H x y X H1 H2 x y
                    (Coq__Init__Datatypes.pair
                       (cupicef.cast (cupicef.axiom (cupicef.type s4))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type s4)
                             (cupicef.axiom (cupicef.type s4)) cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cstr_5 (R x y))
                       (cupicef.cast (cupicef.axiom (cupicef.type s4))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type s4)
                             (cupicef.axiom (cupicef.type s4)) cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cstr_6
                          (flip s0 s0 s3 A A
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.axiom (cupicef.type s4)))
                                (cupicef.axiom (cupicef.type s3))
                                (cupicef.univ
                                   (cupicef.axiom (cupicef.type s4))
                                   (cupicef.axiom
                                      (cupicef.axiom (cupicef.type s4)))
                                   cupicef.I)
                                (cupicef.univ (cupicef.type s3)
                                   (cupicef.axiom (cupicef.type s3))
                                   cupicef.I)
                                cstr_1
                                (cupicef.univ (cupicef.type s4)
                                   (cupicef.axiom (cupicef.type s4))
                                   cupicef.I))
                             R x y))
                       H2 H1))
                 X)))).

(; End of translation. ;)
