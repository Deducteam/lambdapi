(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

def fact :
  n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat ->
  cupicef.Term cupicef.set Coq__Init__Datatypes.nat

:= cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.0 cupicef.set
           (cupicef.prod cupicef.set cupicef.set
              (cupicef.rule cupicef.set cupicef.set) cupicef.I
              Coq__Init__Datatypes.nat
              (n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
               Coq__Init__Datatypes.nat))))
     (c =>
      c
        (fact0 =>
         n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
         Coq__Init__Datatypes.match____nat cupicef.set
           (n0 : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
            Coq__Init__Datatypes.nat)
           (Coq__Init__Datatypes.S Coq__Init__Datatypes.O)
           (n0 : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
            Coq__Init__Nat.mul (Coq__Init__Datatypes.S n0) (fact0 n0))
           n))
     cupicef.0.

thm lt__O__fact :
  n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat ->
  cupicef.Term cupicef.prop
    (Coq__Init__Peano.lt Coq__Init__Datatypes.O (fact n))

:= n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
   Coq__Init__Datatypes.nat__ind
     (n0 : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
      Coq__Init__Peano.lt Coq__Init__Datatypes.O (fact n0))
     (cupicef.cast cupicef.prop cupicef.prop
        (Coq__Init__Peano.lt Coq__Init__Datatypes.O
           (Coq__Init__Datatypes.S Coq__Init__Datatypes.O))
        (Coq__Init__Peano.lt Coq__Init__Datatypes.O
           (fact Coq__Init__Datatypes.O))
        cupicef.I
        (cupicef.cast cupicef.prop cupicef.prop
           (Coq__Init__Peano.le
              (Coq__Init__Datatypes.S Coq__Init__Datatypes.O)
              (Coq__Init__Datatypes.S Coq__Init__Datatypes.O))
           (Coq__Init__Peano.lt Coq__Init__Datatypes.O
              (Coq__Init__Datatypes.S Coq__Init__Datatypes.O))
           cupicef.I
           (Coq__Init__Peano.le__n
              (Coq__Init__Datatypes.S Coq__Init__Datatypes.O))))
     (n0 : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
      IHn :
        cupicef.Term cupicef.prop
          (Coq__Init__Peano.lt Coq__Init__Datatypes.O (fact n0)) =>
      cupicef.cast cupicef.prop cupicef.prop
        (Coq__Init__Peano.lt Coq__Init__Datatypes.O
           (Coq__Init__Nat.add (fact n0) (Coq__Init__Nat.mul n0 (fact n0))))
        (Coq__Init__Peano.lt Coq__Init__Datatypes.O
           (fact (Coq__Init__Datatypes.S n0)))
        cupicef.I
        (cupicef.cast cupicef.prop cupicef.prop
           (Coq__Init__Peano.le
              (Coq__Init__Datatypes.S Coq__Init__Datatypes.O)
              (Coq__Init__Nat.add (fact n0) (Coq__Init__Nat.mul n0 (fact n0))))
           (Coq__Init__Peano.lt Coq__Init__Datatypes.O
              (Coq__Init__Nat.add (fact n0) (Coq__Init__Nat.mul n0 (fact n0))))
           cupicef.I
           (Coq__Arith__Plus.le__plus__trans
              (Coq__Init__Datatypes.S Coq__Init__Datatypes.O) (fact n0)
              (Coq__Init__Nat.mul n0 (fact n0)) IHn)))
     n.

def let__H :
  n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat ->
  n0 : cupicef.Term cupicef.set Coq__Init__Datatypes.nat ->
  __ :
    cupicef.Term cupicef.prop (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0) ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.not
       (Coq__Init__Logic.eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I Coq__Init__Datatypes.nat)
          n0 Coq__Init__Datatypes.O))

:= n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
   n0 : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
   Coq__Init__Logic.match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (Coq__Init__Logic.not
           (Coq__Init__Logic.eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I Coq__Init__Datatypes.nat)
              n0 Coq__Init__Datatypes.O))
        (__ :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.not
                (Coq__Init__Logic.eq
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I Coq__Init__Datatypes.nat)
                   n0 Coq__Init__Datatypes.O)) =>
         Coq__Init__Peano.lt Coq__Init__Datatypes.O n0))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0)
        (__ :
           cupicef.Term cupicef.prop
             (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0) =>
         Coq__Init__Logic.not
           (Coq__Init__Logic.eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I Coq__Init__Datatypes.nat)
              n0 Coq__Init__Datatypes.O)))
     (__ :
        cupicef.Term cupicef.prop
          (Coq__Init__Logic.and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                (Coq__Init__Logic.not
                   (Coq__Init__Logic.eq
                      (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ cupicef.set
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I Coq__Init__Datatypes.nat)
                      n0 Coq__Init__Datatypes.O))
                (__ :
                   cupicef.Term cupicef.prop
                     (Coq__Init__Logic.not
                        (Coq__Init__Logic.eq
                           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                              (cupicef.axiom
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z))))
                              (cupicef.univ cupicef.set
                                 (cupicef.type (cupicef.s cupicef.z))
                                 cupicef.I)
                              (cupicef.univ
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z)))
                                 (cupicef.axiom
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z))))
                                 cupicef.I)
                              cupicef.I Coq__Init__Datatypes.nat)
                           n0 Coq__Init__Datatypes.O)) =>
                 Coq__Init__Peano.lt Coq__Init__Datatypes.O n0))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0)
                (__ :
                   cupicef.Term cupicef.prop
                     (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0) =>
                 Coq__Init__Logic.not
                   (Coq__Init__Logic.eq
                      (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ cupicef.set
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I Coq__Init__Datatypes.nat)
                      n0 Coq__Init__Datatypes.O)))) =>
      cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0)
        (__0 :
           cupicef.Term cupicef.prop
             (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0) =>
         Coq__Init__Logic.not
           (Coq__Init__Logic.eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I Coq__Init__Datatypes.nat)
              n0 Coq__Init__Datatypes.O)))
     (__ :
        (__ :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.not
                (Coq__Init__Logic.eq
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I Coq__Init__Datatypes.nat)
                   n0 Coq__Init__Datatypes.O)) ->
         cupicef.Term cupicef.prop
           (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0)) =>
      __0 :
        (__0 :
           cupicef.Term cupicef.prop
             (Coq__Init__Peano.lt Coq__Init__Datatypes.O n0) ->
         cupicef.Term cupicef.prop
           (Coq__Init__Logic.not
              (Coq__Init__Logic.eq
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ cupicef.set
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I Coq__Init__Datatypes.nat)
                 n0 Coq__Init__Datatypes.O))) =>
      __0)
     (Coq__Arith__PeanoNat.Nat__neq__0__lt__0 n0).

thm fact__neq__0 :
  n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.not
       (Coq__Init__Logic.eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I Coq__Init__Datatypes.nat)
          (fact n) Coq__Init__Datatypes.O))

:= n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
   let__H n (fact n) (lt__O__fact n).

thm fact__le :
  n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat ->
  m : cupicef.Term cupicef.set Coq__Init__Datatypes.nat ->
  __ : cupicef.Term cupicef.prop (Coq__Init__Peano.le n m) ->
  cupicef.Term cupicef.prop (Coq__Init__Peano.le (fact n) (fact m))

:= n : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
   m : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
   H : cupicef.Term cupicef.prop (Coq__Init__Peano.le n m) =>
   Coq__Init__Peano.le__ind n
     (m0 : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
      Coq__Init__Peano.le (fact n) (fact m0))
     (Coq__Init__Peano.le__n (fact n))
     (m0 : cupicef.Term cupicef.set Coq__Init__Datatypes.nat =>
      H0 : cupicef.Term cupicef.prop (Coq__Init__Peano.le n m0) =>
      IHle :
        cupicef.Term cupicef.prop (Coq__Init__Peano.le (fact n) (fact m0)) =>
      cupicef.cast cupicef.prop cupicef.prop
        (Coq__Init__Peano.le (fact n)
           (Coq__Init__Nat.add (fact m0) (Coq__Init__Nat.mul m0 (fact m0))))
        (Coq__Init__Peano.le (fact n) (fact (Coq__Init__Datatypes.S m0)))
        cupicef.I
        (Coq__Classes__RelationClasses.transitivity
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I Coq__Init__Datatypes.nat)
           Coq__Init__Peano.le
           (Coq__Classes__RelationClasses.PreOrder__Transitive
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I Coq__Init__Datatypes.nat)
              Coq__Init__Peano.le Coq__Arith__PeanoNat.Nat__le__preorder)
           (fact n) (fact m0)
           (Coq__Init__Nat.add (fact m0) (Coq__Init__Nat.mul m0 (fact m0)))
           IHle
           (Coq__Arith__PeanoNat.Nat__le__add__r (fact m0)
              (Coq__Init__Nat.mul m0 (fact m0)))))
     m H.

(; End of translation. ;)
