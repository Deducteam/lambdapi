(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

#REQUIRE cupicef.

def True :
  cupicef.Univ cupicef.prop.

def I :
  cupicef.Term cupicef.prop True.

[ ] cupicef.code_guarded? _ I --> cupicef.guarded.

def match____True :
  s : cupicef.Sort ->
  P : (cupicef.Term cupicef.prop True -> cupicef.Univ s) ->
  case__I : cupicef.Term s (P I) ->
  x : cupicef.Term cupicef.prop True ->
  cupicef.Term s (P x).

[ s, P, case__I]
  match____True s P case__I I
  -->
  case__I.

[ s, P, s']
  match____True s
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____True s' (x => P x).

def True__rect :
  P : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P ->
  t : cupicef.Term cupicef.prop True ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P

:= P : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P =>
   t : cupicef.Term cupicef.prop True =>
   match____True (cupicef.type (cupicef.s cupicef.z))
     (__ : cupicef.Term cupicef.prop True => P) f t.

def True__ind :
  P : cupicef.Univ cupicef.prop ->
  f : cupicef.Term cupicef.prop P ->
  t : cupicef.Term cupicef.prop True ->
  cupicef.Term cupicef.prop P

:= P : cupicef.Univ cupicef.prop =>
   f : cupicef.Term cupicef.prop P =>
   t : cupicef.Term cupicef.prop True =>
   match____True cupicef.prop (__ : cupicef.Term cupicef.prop True => P) f t.

def True__rec :
  P : cupicef.Univ cupicef.set ->
  f : cupicef.Term cupicef.set P ->
  t : cupicef.Term cupicef.prop True ->
  cupicef.Term cupicef.set P

:= P : cupicef.Univ cupicef.set =>
   True__rect
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I P).

def False :
  cupicef.Univ cupicef.prop.

def match____False :
  s : cupicef.Sort ->
  P : (cupicef.Term cupicef.prop False -> cupicef.Univ s) ->
  x : cupicef.Term cupicef.prop False ->
  cupicef.Term s (P x).

[ s, P, s']
  match____False s
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____False s' (x => P x).

def False__rect :
  P : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f : cupicef.Term cupicef.prop False ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P

:= P : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f : cupicef.Term cupicef.prop False =>
   match____False (cupicef.type (cupicef.s cupicef.z))
     (__ : cupicef.Term cupicef.prop False => P) f.

def False__ind :
  P : cupicef.Univ cupicef.prop ->
  f : cupicef.Term cupicef.prop False ->
  cupicef.Term cupicef.prop P

:= P : cupicef.Univ cupicef.prop =>
   f : cupicef.Term cupicef.prop False =>
   match____False cupicef.prop (__ : cupicef.Term cupicef.prop False => P) f.

def False__rec :
  P : cupicef.Univ cupicef.set ->
  f : cupicef.Term cupicef.prop False ->
  cupicef.Term cupicef.set P

:= P : cupicef.Univ cupicef.set =>
   False__rect
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I P).

def not :
  A : cupicef.Univ cupicef.prop -> cupicef.Univ cupicef.prop

:= A : cupicef.Univ cupicef.prop =>
   cupicef.prod cupicef.prop cupicef.prop
     (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
     (__ : cupicef.Term cupicef.prop A => False).

def and :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  cupicef.Univ cupicef.prop.

def conj :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop A ->
  __0 : cupicef.Term cupicef.prop B ->
  cupicef.Term cupicef.prop (and A B).

[ ] cupicef.code_guarded? _ (conj _ _ _ _) --> cupicef.guarded.

def match____and :
  s : cupicef.Sort ->
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  P : (cupicef.Term cupicef.prop (and A B) -> cupicef.Univ s) ->
  case__conj :
    (__ : cupicef.Term cupicef.prop A ->
     __0 : cupicef.Term cupicef.prop B ->
     cupicef.Term s (P (conj A B __ __0))) ->
  x : cupicef.Term cupicef.prop (and A B) ->
  cupicef.Term s (P x).

[ s, A, B, P, case__conj, __, __0]
  match____and s A B P case__conj (conj A B __ __0)
  -->
  case__conj __ __0.

[ s, A, B, P, s']
  match____and s A B
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____and s' A B (x => P x).

def and__rect :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  P : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term cupicef.prop A ->
     __0 : cupicef.Term cupicef.prop B ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P) ->
  a : cupicef.Term cupicef.prop (and A B) ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   P : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term cupicef.prop A ->
      __0 : cupicef.Term cupicef.prop B ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P) =>
   a : cupicef.Term cupicef.prop (and A B) =>
   match____and (cupicef.type (cupicef.s cupicef.z)) A B
     (__ : cupicef.Term cupicef.prop (and A B) => P) f a.

def and__ind :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  P : cupicef.Univ cupicef.prop ->
  f :
    (__ : cupicef.Term cupicef.prop A ->
     __0 : cupicef.Term cupicef.prop B ->
     cupicef.Term cupicef.prop P) ->
  a : cupicef.Term cupicef.prop (and A B) ->
  cupicef.Term cupicef.prop P

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   P : cupicef.Univ cupicef.prop =>
   f :
     (__ : cupicef.Term cupicef.prop A ->
      __0 : cupicef.Term cupicef.prop B ->
      cupicef.Term cupicef.prop P) =>
   a : cupicef.Term cupicef.prop (and A B) =>
   match____and cupicef.prop A B
     (__ : cupicef.Term cupicef.prop (and A B) => P) f a.

def and__rec :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  P : cupicef.Univ cupicef.set ->
  f :
    (__ : cupicef.Term cupicef.prop A ->
     __0 : cupicef.Term cupicef.prop B ->
     cupicef.Term cupicef.set P) ->
  a : cupicef.Term cupicef.prop (and A B) ->
  cupicef.Term cupicef.set P

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   P : cupicef.Univ cupicef.set =>
   and__rect A B
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I P).

thm proj1 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (and A B) ->
  cupicef.Term cupicef.prop A

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (and A B) =>
   match____and cupicef.prop A B
     (__ : cupicef.Term cupicef.prop (and A B) => A)
     (H0 : cupicef.Term cupicef.prop A =>
      H1 : cupicef.Term cupicef.prop B =>
      H0)
     H.

thm proj2 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (and A B) ->
  cupicef.Term cupicef.prop B

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (and A B) =>
   match____and cupicef.prop A B
     (__ : cupicef.Term cupicef.prop (and A B) => B)
     (H0 : cupicef.Term cupicef.prop A =>
      H1 : cupicef.Term cupicef.prop B =>
      H1)
     H.

def or :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  cupicef.Univ cupicef.prop.

def or__introl :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop A ->
  cupicef.Term cupicef.prop (or A B).

def or__intror :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop B ->
  cupicef.Term cupicef.prop (or A B).

[ ] cupicef.code_guarded? _ (or__introl _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (or__intror _ _ _) --> cupicef.guarded.

def match____or :
  s : cupicef.Sort ->
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  P : (cupicef.Term cupicef.prop (or A B) -> cupicef.Univ s) ->
  case__or__introl :
    (__ : cupicef.Term cupicef.prop A ->
     cupicef.Term s (P (or__introl A B __))) ->
  case__or__intror :
    (__ : cupicef.Term cupicef.prop B ->
     cupicef.Term s (P (or__intror A B __))) ->
  x : cupicef.Term cupicef.prop (or A B) ->
  cupicef.Term s (P x).

[ s, A, B, P, case__or__introl, case__or__intror, __]
  match____or s A B P case__or__introl case__or__intror (or__introl A B __)
  -->
  case__or__introl __.

[ s, A, B, P, case__or__introl, case__or__intror, __]
  match____or s A B P case__or__introl case__or__intror (or__intror A B __)
  -->
  case__or__intror __.

[ s, A, B, P, s']
  match____or s A B
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____or s' A B (x => P x).

def or__ind :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  P : cupicef.Univ cupicef.prop ->
  f : (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop P) ->
  f0 : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop P) ->
  o : cupicef.Term cupicef.prop (or A B) ->
  cupicef.Term cupicef.prop P

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   P : cupicef.Univ cupicef.prop =>
   f : (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop P) =>
   f0 : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop P) =>
   o : cupicef.Term cupicef.prop (or A B) =>
   match____or cupicef.prop A B
     (__ : cupicef.Term cupicef.prop (or A B) => P) f f0 o.

def iff :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   and
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
        (__ : cupicef.Term cupicef.prop A => B))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => A)).

thm iff__refl :
  A : cupicef.Univ cupicef.prop -> cupicef.Term cupicef.prop (iff A A)

:= A : cupicef.Univ cupicef.prop =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
        (__ : cupicef.Term cupicef.prop A => A))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
        (__ : cupicef.Term cupicef.prop A => A))
     (H : cupicef.Term cupicef.prop A => H)
     (H : cupicef.Term cupicef.prop A => H).

thm iff__trans :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff A B) ->
  __0 : cupicef.Term cupicef.prop (iff B C) ->
  cupicef.Term cupicef.prop (iff A C)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff A B) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
        (__ : cupicef.Term cupicef.prop A => B))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => A))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                (__ : cupicef.Term cupicef.prop A => B))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => A))) =>
      cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (iff B C)
        (__0 : cupicef.Term cupicef.prop (iff B C) => iff A C))
     (H1 : (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop B) =>
      H2 : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
      H0 : cupicef.Term cupicef.prop (iff B C) =>
      match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
           (__ : cupicef.Term cupicef.prop B => C))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
           (__ : cupicef.Term cupicef.prop C => B))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                   (__ : cupicef.Term cupicef.prop B => C))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
                   (__ : cupicef.Term cupicef.prop C => B))) =>
         iff A C)
        (H3 :
           (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop C) =>
         H4 :
           (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop B) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => C))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__ : cupicef.Term cupicef.prop C => A))
           (H5 : cupicef.Term cupicef.prop A => H3 (H1 H5))
           (H5 : cupicef.Term cupicef.prop C => H2 (H1 (H2 (H4 H5)))))
        H0)
     H.

thm iff__sym :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff A B) ->
  cupicef.Term cupicef.prop (iff B A)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff A B) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
        (__ : cupicef.Term cupicef.prop A => B))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => A))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                (__ : cupicef.Term cupicef.prop A => B))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => A))) =>
      iff B A)
     (H1 : (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop B) =>
      H2 : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
      conj
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
           (__ : cupicef.Term cupicef.prop B => A))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
           (__ : cupicef.Term cupicef.prop A => B))
        H2 H1)
     H.

thm and__iff__compat__l :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff B C) ->
  cupicef.Term cupicef.prop (iff (and A B) (and A C))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff B C) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
        (__ : cupicef.Term cupicef.prop C => B))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => C))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
                (__ : cupicef.Term cupicef.prop C => B))) =>
      iff (and A B) (and A C))
     (Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop C) =>
      Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop B) =>
      conj
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and A B)
           (__ : cupicef.Term cupicef.prop (and A B) => and A C))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and A C)
           (__ : cupicef.Term cupicef.prop (and A C) => and A B))
        (H0 : cupicef.Term cupicef.prop (and A B) =>
         match____and cupicef.prop A B
           (__ : cupicef.Term cupicef.prop (and A B) => and A C)
           (H1 : cupicef.Term cupicef.prop A =>
            H2 : cupicef.Term cupicef.prop B =>
            conj A C H1 (Hl H2))
           H0)
        (H0 : cupicef.Term cupicef.prop (and A C) =>
         match____and cupicef.prop A C
           (__ : cupicef.Term cupicef.prop (and A C) => and A B)
           (H1 : cupicef.Term cupicef.prop A =>
            H2 : cupicef.Term cupicef.prop C =>
            conj A B H1 (Hr H2))
           H0))
     H.

thm and__iff__compat__r :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff B C) ->
  cupicef.Term cupicef.prop (iff (and B A) (and C A))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff B C) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
        (__ : cupicef.Term cupicef.prop C => B))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => C))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
                (__ : cupicef.Term cupicef.prop C => B))) =>
      iff (and B A) (and C A))
     (Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop C) =>
      Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop B) =>
      conj
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and B A)
           (__ : cupicef.Term cupicef.prop (and B A) => and C A))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and C A)
           (__ : cupicef.Term cupicef.prop (and C A) => and B A))
        (H0 : cupicef.Term cupicef.prop (and B A) =>
         match____and cupicef.prop B A
           (__ : cupicef.Term cupicef.prop (and B A) => and C A)
           (H1 : cupicef.Term cupicef.prop B =>
            H2 : cupicef.Term cupicef.prop A =>
            conj C A (Hl H1) H2)
           H0)
        (H0 : cupicef.Term cupicef.prop (and C A) =>
         match____and cupicef.prop C A
           (__ : cupicef.Term cupicef.prop (and C A) => and B A)
           (H1 : cupicef.Term cupicef.prop C =>
            H2 : cupicef.Term cupicef.prop A =>
            conj B A (Hr H1) H2)
           H0))
     H.

thm or__iff__compat__l :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff B C) ->
  cupicef.Term cupicef.prop (iff (or A B) (or A C))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff B C) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
        (__ : cupicef.Term cupicef.prop C => B))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => C))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
                (__ : cupicef.Term cupicef.prop C => B))) =>
      iff (or A B) (or A C))
     (Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop C) =>
      Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop B) =>
      conj
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or A B)
           (__ : cupicef.Term cupicef.prop (or A B) => or A C))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or A C)
           (__ : cupicef.Term cupicef.prop (or A C) => or A B))
        (H0 : cupicef.Term cupicef.prop (or A B) =>
         match____or cupicef.prop A B
           (__ : cupicef.Term cupicef.prop (or A B) => or A C)
           (H1 : cupicef.Term cupicef.prop A => or__introl A C H1)
           (H1 : cupicef.Term cupicef.prop B => or__intror A C (Hl H1)) H0)
        (H0 : cupicef.Term cupicef.prop (or A C) =>
         match____or cupicef.prop A C
           (__ : cupicef.Term cupicef.prop (or A C) => or A B)
           (H1 : cupicef.Term cupicef.prop A => or__introl A B H1)
           (H1 : cupicef.Term cupicef.prop C => or__intror A B (Hr H1)) H0))
     H.

thm or__iff__compat__r :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff B C) ->
  cupicef.Term cupicef.prop (iff (or B A) (or C A))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff B C) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
        (__ : cupicef.Term cupicef.prop C => B))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => C))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
                (__ : cupicef.Term cupicef.prop C => B))) =>
      iff (or B A) (or C A))
     (Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop C) =>
      Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop B) =>
      conj
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or B A)
           (__ : cupicef.Term cupicef.prop (or B A) => or C A))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or C A)
           (__ : cupicef.Term cupicef.prop (or C A) => or B A))
        (H0 : cupicef.Term cupicef.prop (or B A) =>
         match____or cupicef.prop B A
           (__ : cupicef.Term cupicef.prop (or B A) => or C A)
           (H1 : cupicef.Term cupicef.prop B => or__introl C A (Hl H1))
           (H1 : cupicef.Term cupicef.prop A => or__intror C A H1) H0)
        (H0 : cupicef.Term cupicef.prop (or C A) =>
         match____or cupicef.prop C A
           (__ : cupicef.Term cupicef.prop (or C A) => or B A)
           (H1 : cupicef.Term cupicef.prop C => or__introl B A (Hr H1))
           (H1 : cupicef.Term cupicef.prop A => or__intror B A H1) H0))
     H.

thm imp__iff__compat__l :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff B C) ->
  cupicef.Term cupicef.prop
    (iff
       (cupicef.prod cupicef.prop cupicef.prop
          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
          (__0 : cupicef.Term cupicef.prop A => B))
       (cupicef.prod cupicef.prop cupicef.prop
          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
          (__0 : cupicef.Term cupicef.prop A => C)))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff B C) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
        (__ : cupicef.Term cupicef.prop C => B))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => C))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
                (__ : cupicef.Term cupicef.prop C => B))) =>
      iff
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
           (__0 : cupicef.Term cupicef.prop A => B))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
           (__0 : cupicef.Term cupicef.prop A => C)))
     (Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop C) =>
      Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop B) =>
      conj
        (cupicef.prod (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => B))
           (__ :
              (__ : cupicef.Term cupicef.prop A ->
               cupicef.Term cupicef.prop B) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__0 : cupicef.Term cupicef.prop A => C)))
        (cupicef.prod (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => C))
           (__ :
              (__ : cupicef.Term cupicef.prop A ->
               cupicef.Term cupicef.prop C) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__0 : cupicef.Term cupicef.prop A => B)))
        (H0 :
           (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop B) =>
         H1 : cupicef.Term cupicef.prop A =>
         Hl (H0 H1))
        (H0 :
           (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop C) =>
         H1 : cupicef.Term cupicef.prop A =>
         Hr (H0 H1)))
     H.

thm imp__iff__compat__r :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff B C) ->
  cupicef.Term cupicef.prop
    (iff
       (cupicef.prod cupicef.prop cupicef.prop
          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
          (__0 : cupicef.Term cupicef.prop B => A))
       (cupicef.prod cupicef.prop cupicef.prop
          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
          (__0 : cupicef.Term cupicef.prop C => A)))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff B C) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
        (__ : cupicef.Term cupicef.prop C => B))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => C))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
                (__ : cupicef.Term cupicef.prop C => B))) =>
      iff
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
           (__0 : cupicef.Term cupicef.prop B => A))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
           (__0 : cupicef.Term cupicef.prop C => A)))
     (Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop C) =>
      Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop B) =>
      conj
        (cupicef.prod (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => A))
           (__ :
              (__ : cupicef.Term cupicef.prop B ->
               cupicef.Term cupicef.prop A) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__0 : cupicef.Term cupicef.prop C => A)))
        (cupicef.prod (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__ : cupicef.Term cupicef.prop C => A))
           (__ :
              (__ : cupicef.Term cupicef.prop C ->
               cupicef.Term cupicef.prop A) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__0 : cupicef.Term cupicef.prop B => A)))
        (H0 :
           (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
         H1 : cupicef.Term cupicef.prop C =>
         H0 (Hr H1))
        (H0 :
           (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) =>
         H1 : cupicef.Term cupicef.prop B =>
         H0 (Hl H1)))
     H.

thm not__iff__compat :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff A B) ->
  cupicef.Term cupicef.prop (iff (not A) (not B))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff A B) =>
   imp__iff__compat__r False A B H.

thm neg__false :
  A : cupicef.Univ cupicef.prop ->
  cupicef.Term cupicef.prop (iff (not A) (iff A False))

:= A : cupicef.Univ cupicef.prop =>
   cupicef.cast cupicef.prop cupicef.prop
     (and
        (cupicef.prod (cupicef.rule cupicef.prop cupicef.prop) cupicef.prop
           (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
              cupicef.prop)
           cupicef.I
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => False))
           (__ :
              (__ : cupicef.Term cupicef.prop A ->
               cupicef.Term cupicef.prop False) =>
            iff A False))
        (cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I (iff A False)
           (__ : cupicef.Term cupicef.prop (iff A False) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__0 : cupicef.Term cupicef.prop A => False))))
     (iff (not A) (iff A False)) cupicef.I
     (conj
        (cupicef.prod (cupicef.rule cupicef.prop cupicef.prop) cupicef.prop
           (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
              cupicef.prop)
           cupicef.I
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => False))
           (__ :
              (__ : cupicef.Term cupicef.prop A ->
               cupicef.Term cupicef.prop False) =>
            iff A False))
        (cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I (iff A False)
           (__ : cupicef.Term cupicef.prop (iff A False) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__0 : cupicef.Term cupicef.prop A => False)))
        (H :
           (__ : cupicef.Term cupicef.prop A ->
            cupicef.Term cupicef.prop False) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => False))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I False
              (__ : cupicef.Term cupicef.prop False => A))
           H (H1 : cupicef.Term cupicef.prop False => False__ind A H1))
        (H0 : cupicef.Term cupicef.prop (iff A False) =>
         match____and cupicef.prop
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => False))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I False
              (__ : cupicef.Term cupicef.prop False => A))
           (__ :
              cupicef.Term cupicef.prop
                (and
                   (cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                      (__ : cupicef.Term cupicef.prop A => False))
                   (cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                      False (__ : cupicef.Term cupicef.prop False => A))) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__0 : cupicef.Term cupicef.prop A => False))
           (H :
              (__ : cupicef.Term cupicef.prop A ->
               cupicef.Term cupicef.prop False) =>
            __tmp :
              (__ : cupicef.Term cupicef.prop False ->
               cupicef.Term cupicef.prop A) =>
            H)
           H0)).

def let__H0 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) ->
  Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) ->
  H : cupicef.Term cupicef.prop (iff (and A B) (and A C)) ->
  HypL :
    (__ : cupicef.Term cupicef.prop (and A B) ->
     cupicef.Term cupicef.prop (and A C)) ->
  HypR :
    (__ : cupicef.Term cupicef.prop (and A C) ->
     cupicef.Term cupicef.prop (and A B)) ->
  H0 : cupicef.Term cupicef.prop B ->
  __ : cupicef.Term cupicef.prop (and A B) ->
  cupicef.Term cupicef.prop C

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
   Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) =>
   H : cupicef.Term cupicef.prop (iff (and A B) (and A C)) =>
   HypL :
     (__ : cupicef.Term cupicef.prop (and A B) ->
      cupicef.Term cupicef.prop (and A C)) =>
   HypR :
     (__ : cupicef.Term cupicef.prop (and A C) ->
      cupicef.Term cupicef.prop (and A B)) =>
   H0 : cupicef.Term cupicef.prop B =>
   __ : cupicef.Term cupicef.prop (and A B) =>
   match____and cupicef.prop A C
     (__0 : cupicef.Term cupicef.prop (and A C) => C)
     (__0 : cupicef.Term cupicef.prop A =>
      __1 : cupicef.Term cupicef.prop C =>
      __1)
     (HypL __).

def let__H1 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) ->
  Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) ->
  H : cupicef.Term cupicef.prop (iff (and A B) (and A C)) ->
  HypL :
    (__ : cupicef.Term cupicef.prop (and A B) ->
     cupicef.Term cupicef.prop (and A C)) ->
  HypR :
    (__ : cupicef.Term cupicef.prop (and A C) ->
     cupicef.Term cupicef.prop (and A B)) ->
  H0 : cupicef.Term cupicef.prop C ->
  __ : cupicef.Term cupicef.prop (and A C) ->
  cupicef.Term cupicef.prop B

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
   Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) =>
   H : cupicef.Term cupicef.prop (iff (and A B) (and A C)) =>
   HypL :
     (__ : cupicef.Term cupicef.prop (and A B) ->
      cupicef.Term cupicef.prop (and A C)) =>
   HypR :
     (__ : cupicef.Term cupicef.prop (and A C) ->
      cupicef.Term cupicef.prop (and A B)) =>
   H0 : cupicef.Term cupicef.prop C =>
   __ : cupicef.Term cupicef.prop (and A C) =>
   match____and cupicef.prop A B
     (__0 : cupicef.Term cupicef.prop (and A B) => B)
     (__0 : cupicef.Term cupicef.prop A =>
      __1 : cupicef.Term cupicef.prop B =>
      __1)
     (HypR __).

thm and__cancel__l :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) ->
  __0 : (__0 : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) ->
  cupicef.Term cupicef.prop (iff (iff (and A B) (and A C)) (iff B C))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
   Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (iff (and A B) (and A C))
        (__ : cupicef.Term cupicef.prop (iff (and A B) (and A C)) => iff B C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (iff B C)
        (__ : cupicef.Term cupicef.prop (iff B C) => iff (and A B) (and A C)))
     (H : cupicef.Term cupicef.prop (iff (and A B) (and A C)) =>
      match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and A B)
           (__ : cupicef.Term cupicef.prop (and A B) => and A C))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and A C)
           (__ : cupicef.Term cupicef.prop (and A C) => and A B))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (and A B)
                   (__ : cupicef.Term cupicef.prop (and A B) => and A C))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (and A C)
                   (__ : cupicef.Term cupicef.prop (and A C) => and A B))) =>
         iff B C)
        (HypL :
           (__ : cupicef.Term cupicef.prop (and A B) ->
            cupicef.Term cupicef.prop (and A C)) =>
         HypR :
           (__ : cupicef.Term cupicef.prop (and A C) ->
            cupicef.Term cupicef.prop (and A B)) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => C))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__ : cupicef.Term cupicef.prop C => B))
           (H0 : cupicef.Term cupicef.prop B =>
            let__H0 A B C Hl Hr H HypL HypR H0 (conj A B (Hl H0) H0))
           (H0 : cupicef.Term cupicef.prop C =>
            let__H1 A B C Hl Hr H HypL HypR H0 (conj A C (Hr H0) H0)))
        H)
     (and__iff__compat__l A B C).

def let__H2 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) ->
  Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) ->
  H : cupicef.Term cupicef.prop (iff (and B A) (and C A)) ->
  HypL :
    (__ : cupicef.Term cupicef.prop (and B A) ->
     cupicef.Term cupicef.prop (and C A)) ->
  HypR :
    (__ : cupicef.Term cupicef.prop (and C A) ->
     cupicef.Term cupicef.prop (and B A)) ->
  H0 : cupicef.Term cupicef.prop B ->
  __ : cupicef.Term cupicef.prop (and B A) ->
  cupicef.Term cupicef.prop C

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
   Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) =>
   H : cupicef.Term cupicef.prop (iff (and B A) (and C A)) =>
   HypL :
     (__ : cupicef.Term cupicef.prop (and B A) ->
      cupicef.Term cupicef.prop (and C A)) =>
   HypR :
     (__ : cupicef.Term cupicef.prop (and C A) ->
      cupicef.Term cupicef.prop (and B A)) =>
   H0 : cupicef.Term cupicef.prop B =>
   __ : cupicef.Term cupicef.prop (and B A) =>
   match____and cupicef.prop C A
     (__0 : cupicef.Term cupicef.prop (and C A) => C)
     (__0 : cupicef.Term cupicef.prop C =>
      __1 : cupicef.Term cupicef.prop A =>
      __0)
     (HypL __).

def let__H3 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) ->
  Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) ->
  H : cupicef.Term cupicef.prop (iff (and B A) (and C A)) ->
  HypL :
    (__ : cupicef.Term cupicef.prop (and B A) ->
     cupicef.Term cupicef.prop (and C A)) ->
  HypR :
    (__ : cupicef.Term cupicef.prop (and C A) ->
     cupicef.Term cupicef.prop (and B A)) ->
  H0 : cupicef.Term cupicef.prop C ->
  __ : cupicef.Term cupicef.prop (and C A) ->
  cupicef.Term cupicef.prop B

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
   Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) =>
   H : cupicef.Term cupicef.prop (iff (and B A) (and C A)) =>
   HypL :
     (__ : cupicef.Term cupicef.prop (and B A) ->
      cupicef.Term cupicef.prop (and C A)) =>
   HypR :
     (__ : cupicef.Term cupicef.prop (and C A) ->
      cupicef.Term cupicef.prop (and B A)) =>
   H0 : cupicef.Term cupicef.prop C =>
   __ : cupicef.Term cupicef.prop (and C A) =>
   match____and cupicef.prop B A
     (__0 : cupicef.Term cupicef.prop (and B A) => B)
     (__0 : cupicef.Term cupicef.prop B =>
      __1 : cupicef.Term cupicef.prop A =>
      __0)
     (HypR __).

thm and__cancel__r :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) ->
  __0 : (__0 : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) ->
  cupicef.Term cupicef.prop (iff (iff (and B A) (and C A)) (iff B C))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Hl : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
   Hr : (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (iff (and B A) (and C A))
        (__ : cupicef.Term cupicef.prop (iff (and B A) (and C A)) => iff B C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (iff B C)
        (__ : cupicef.Term cupicef.prop (iff B C) => iff (and B A) (and C A)))
     (H : cupicef.Term cupicef.prop (iff (and B A) (and C A)) =>
      match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and B A)
           (__ : cupicef.Term cupicef.prop (and B A) => and C A))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and C A)
           (__ : cupicef.Term cupicef.prop (and C A) => and B A))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (and B A)
                   (__ : cupicef.Term cupicef.prop (and B A) => and C A))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (and C A)
                   (__ : cupicef.Term cupicef.prop (and C A) => and B A))) =>
         iff B C)
        (HypL :
           (__ : cupicef.Term cupicef.prop (and B A) ->
            cupicef.Term cupicef.prop (and C A)) =>
         HypR :
           (__ : cupicef.Term cupicef.prop (and C A) ->
            cupicef.Term cupicef.prop (and B A)) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => C))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__ : cupicef.Term cupicef.prop C => B))
           (H0 : cupicef.Term cupicef.prop B =>
            let__H2 A B C Hl Hr H HypL HypR H0 (conj B A H0 (Hl H0)))
           (H0 : cupicef.Term cupicef.prop C =>
            let__H3 A B C Hl Hr H HypL HypR H0 (conj C A H0 (Hr H0))))
        H)
     (and__iff__compat__r A B C).

thm and__comm :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  cupicef.Term cupicef.prop (iff (and A B) (and B A))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and A B)
        (__ : cupicef.Term cupicef.prop (and A B) => and B A))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and B A)
        (__ : cupicef.Term cupicef.prop (and B A) => and A B))
     (H : cupicef.Term cupicef.prop (and A B) =>
      match____and cupicef.prop A B
        (__ : cupicef.Term cupicef.prop (and A B) => and B A)
        (H0 : cupicef.Term cupicef.prop A =>
         H1 : cupicef.Term cupicef.prop B =>
         conj B A H1 H0)
        H)
     (H : cupicef.Term cupicef.prop (and B A) =>
      match____and cupicef.prop B A
        (__ : cupicef.Term cupicef.prop (and B A) => and A B)
        (H0 : cupicef.Term cupicef.prop B =>
         H1 : cupicef.Term cupicef.prop A =>
         conj A B H1 H0)
        H).

thm and__assoc :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  cupicef.Term cupicef.prop (iff (and (and A B) C) (and A (and B C)))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and (and A B) C)
        (__ : cupicef.Term cupicef.prop (and (and A B) C) => and A (and B C)))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (and A (and B C))
        (__ : cupicef.Term cupicef.prop (and A (and B C)) => and (and A B) C))
     (H : cupicef.Term cupicef.prop (and (and A B) C) =>
      match____and cupicef.prop (and A B) C
        (__ : cupicef.Term cupicef.prop (and (and A B) C) => and A (and B C))
        (H0 : cupicef.Term cupicef.prop (and A B) =>
         match____and cupicef.prop A B
           (__ : cupicef.Term cupicef.prop (and A B) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__0 : cupicef.Term cupicef.prop C => and A (and B C)))
           (H1 : cupicef.Term cupicef.prop A =>
            H2 : cupicef.Term cupicef.prop B =>
            H3 : cupicef.Term cupicef.prop C =>
            conj A (and B C) H1 (conj B C H2 H3))
           H0)
        H)
     (H : cupicef.Term cupicef.prop (and A (and B C)) =>
      match____and cupicef.prop A (and B C)
        (__ : cupicef.Term cupicef.prop (and A (and B C)) => and (and A B) C)
        (H0 : cupicef.Term cupicef.prop A =>
         H1 : cupicef.Term cupicef.prop (and B C) =>
         match____and cupicef.prop B C
           (__ : cupicef.Term cupicef.prop (and B C) => and (and A B) C)
           (H2 : cupicef.Term cupicef.prop B =>
            H3 : cupicef.Term cupicef.prop C =>
            conj (and A B) C (conj A B H0 H2) H3)
           H1)
        H).

def let__o :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Fl :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  Fr :
    (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) ->
  Hl :
    (__ : cupicef.Term cupicef.prop (or A B) ->
     cupicef.Term cupicef.prop (or A C)) ->
  Hr :
    (__ : cupicef.Term cupicef.prop (or A C) ->
     cupicef.Term cupicef.prop (or A B)) ->
  H0 : cupicef.Term cupicef.prop B ->
  cupicef.Term cupicef.prop (or A C)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) =>
   Hl :
     (__ : cupicef.Term cupicef.prop (or A B) ->
      cupicef.Term cupicef.prop (or A C)) =>
   Hr :
     (__ : cupicef.Term cupicef.prop (or A C) ->
      cupicef.Term cupicef.prop (or A B)) =>
   H0 : cupicef.Term cupicef.prop B =>
   Hl (or__intror A B H0).

def let__n :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Fl :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  Fr :
    (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) ->
  Hl :
    (__ : cupicef.Term cupicef.prop (or A B) ->
     cupicef.Term cupicef.prop (or A C)) ->
  Hr :
    (__ : cupicef.Term cupicef.prop (or A C) ->
     cupicef.Term cupicef.prop (or A B)) ->
  H0 : cupicef.Term cupicef.prop B ->
  H1 : cupicef.Term cupicef.prop A ->
  cupicef.Term cupicef.prop False

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) =>
   Hl :
     (__ : cupicef.Term cupicef.prop (or A B) ->
      cupicef.Term cupicef.prop (or A C)) =>
   Hr :
     (__ : cupicef.Term cupicef.prop (or A C) ->
      cupicef.Term cupicef.prop (or A B)) =>
   H0 : cupicef.Term cupicef.prop B =>
   H1 : cupicef.Term cupicef.prop A =>
   Fl H0 H1.

def let__o0 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Fl :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  Fr :
    (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) ->
  Hl :
    (__ : cupicef.Term cupicef.prop (or A B) ->
     cupicef.Term cupicef.prop (or A C)) ->
  Hr :
    (__ : cupicef.Term cupicef.prop (or A C) ->
     cupicef.Term cupicef.prop (or A B)) ->
  H0 : cupicef.Term cupicef.prop C ->
  cupicef.Term cupicef.prop (or A B)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) =>
   Hl :
     (__ : cupicef.Term cupicef.prop (or A B) ->
      cupicef.Term cupicef.prop (or A C)) =>
   Hr :
     (__ : cupicef.Term cupicef.prop (or A C) ->
      cupicef.Term cupicef.prop (or A B)) =>
   H0 : cupicef.Term cupicef.prop C =>
   Hr (or__intror A C H0).

def let__n0 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Fl :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  Fr :
    (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) ->
  Hl :
    (__ : cupicef.Term cupicef.prop (or A B) ->
     cupicef.Term cupicef.prop (or A C)) ->
  Hr :
    (__ : cupicef.Term cupicef.prop (or A C) ->
     cupicef.Term cupicef.prop (or A B)) ->
  H0 : cupicef.Term cupicef.prop C ->
  H1 : cupicef.Term cupicef.prop A ->
  cupicef.Term cupicef.prop False

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) =>
   Hl :
     (__ : cupicef.Term cupicef.prop (or A B) ->
      cupicef.Term cupicef.prop (or A C)) =>
   Hr :
     (__ : cupicef.Term cupicef.prop (or A C) ->
      cupicef.Term cupicef.prop (or A B)) =>
   H0 : cupicef.Term cupicef.prop C =>
   H1 : cupicef.Term cupicef.prop A =>
   Fr H0 H1.

thm or__cancel__l :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  __0 :
    (__0 : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  cupicef.Term cupicef.prop (iff (iff (or A B) (or A C)) (iff B C))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (iff (or A B) (or A C))
        (__ : cupicef.Term cupicef.prop (iff (or A B) (or A C)) => iff B C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (iff B C)
        (__ : cupicef.Term cupicef.prop (iff B C) => iff (or A B) (or A C)))
     (H : cupicef.Term cupicef.prop (iff (or A B) (or A C)) =>
      match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or A B)
           (__ : cupicef.Term cupicef.prop (or A B) => or A C))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or A C)
           (__ : cupicef.Term cupicef.prop (or A C) => or A B))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (or A B)
                   (__ : cupicef.Term cupicef.prop (or A B) => or A C))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (or A C)
                   (__ : cupicef.Term cupicef.prop (or A C) => or A B))) =>
         iff B C)
        (Hl :
           (__ : cupicef.Term cupicef.prop (or A B) ->
            cupicef.Term cupicef.prop (or A C)) =>
         Hr :
           (__ : cupicef.Term cupicef.prop (or A C) ->
            cupicef.Term cupicef.prop (or A B)) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => C))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__ : cupicef.Term cupicef.prop C => B))
           (H0 : cupicef.Term cupicef.prop B =>
            match____or cupicef.prop A C
              (__ : cupicef.Term cupicef.prop (or A C) => C)
              (H1 : cupicef.Term cupicef.prop A =>
               match____False cupicef.prop
                 (__ : cupicef.Term cupicef.prop False => C)
                 (let__n A B C Fl Fr H Hl Hr H0 H1))
              (H1 : cupicef.Term cupicef.prop C => H1)
              (let__o A B C Fl Fr H Hl Hr H0))
           (H0 : cupicef.Term cupicef.prop C =>
            match____or cupicef.prop A B
              (__ : cupicef.Term cupicef.prop (or A B) => B)
              (H1 : cupicef.Term cupicef.prop A =>
               match____False cupicef.prop
                 (__ : cupicef.Term cupicef.prop False => B)
                 (let__n0 A B C Fl Fr H Hl Hr H0 H1))
              (H1 : cupicef.Term cupicef.prop B => H1)
              (let__o0 A B C Fl Fr H Hl Hr H0)))
        H)
     (or__iff__compat__l A B C).

def let__o1 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Fl :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  Fr :
    (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) ->
  Hl :
    (__ : cupicef.Term cupicef.prop (or B A) ->
     cupicef.Term cupicef.prop (or C A)) ->
  Hr :
    (__ : cupicef.Term cupicef.prop (or C A) ->
     cupicef.Term cupicef.prop (or B A)) ->
  H0 : cupicef.Term cupicef.prop B ->
  cupicef.Term cupicef.prop (or C A)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) =>
   Hl :
     (__ : cupicef.Term cupicef.prop (or B A) ->
      cupicef.Term cupicef.prop (or C A)) =>
   Hr :
     (__ : cupicef.Term cupicef.prop (or C A) ->
      cupicef.Term cupicef.prop (or B A)) =>
   H0 : cupicef.Term cupicef.prop B =>
   Hl (or__introl B A H0).

def let__n1 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Fl :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  Fr :
    (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) ->
  Hl :
    (__ : cupicef.Term cupicef.prop (or B A) ->
     cupicef.Term cupicef.prop (or C A)) ->
  Hr :
    (__ : cupicef.Term cupicef.prop (or C A) ->
     cupicef.Term cupicef.prop (or B A)) ->
  H0 : cupicef.Term cupicef.prop B ->
  H1 : cupicef.Term cupicef.prop A ->
  cupicef.Term cupicef.prop False

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) =>
   Hl :
     (__ : cupicef.Term cupicef.prop (or B A) ->
      cupicef.Term cupicef.prop (or C A)) =>
   Hr :
     (__ : cupicef.Term cupicef.prop (or C A) ->
      cupicef.Term cupicef.prop (or B A)) =>
   H0 : cupicef.Term cupicef.prop B =>
   H1 : cupicef.Term cupicef.prop A =>
   Fl H0 H1.

def let__o2 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Fl :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  Fr :
    (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) ->
  Hl :
    (__ : cupicef.Term cupicef.prop (or B A) ->
     cupicef.Term cupicef.prop (or C A)) ->
  Hr :
    (__ : cupicef.Term cupicef.prop (or C A) ->
     cupicef.Term cupicef.prop (or B A)) ->
  H0 : cupicef.Term cupicef.prop C ->
  cupicef.Term cupicef.prop (or B A)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) =>
   Hl :
     (__ : cupicef.Term cupicef.prop (or B A) ->
      cupicef.Term cupicef.prop (or C A)) =>
   Hr :
     (__ : cupicef.Term cupicef.prop (or C A) ->
      cupicef.Term cupicef.prop (or B A)) =>
   H0 : cupicef.Term cupicef.prop C =>
   Hr (or__introl C A H0).

def let__n2 :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  Fl :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  Fr :
    (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) ->
  Hl :
    (__ : cupicef.Term cupicef.prop (or B A) ->
     cupicef.Term cupicef.prop (or C A)) ->
  Hr :
    (__ : cupicef.Term cupicef.prop (or C A) ->
     cupicef.Term cupicef.prop (or B A)) ->
  H0 : cupicef.Term cupicef.prop C ->
  H1 : cupicef.Term cupicef.prop A ->
  cupicef.Term cupicef.prop False

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) =>
   Hl :
     (__ : cupicef.Term cupicef.prop (or B A) ->
      cupicef.Term cupicef.prop (or C A)) =>
   Hr :
     (__ : cupicef.Term cupicef.prop (or C A) ->
      cupicef.Term cupicef.prop (or B A)) =>
   H0 : cupicef.Term cupicef.prop C =>
   H1 : cupicef.Term cupicef.prop A =>
   Fr H0 H1.

thm or__cancel__r :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ :
    (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) ->
  __0 :
    (__0 : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) ->
  cupicef.Term cupicef.prop (iff (iff (or B A) (or C A)) (iff B C))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   Fl :
     (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop (not A)) =>
   Fr :
     (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop (not A)) =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (iff (or B A) (or C A))
        (__ : cupicef.Term cupicef.prop (iff (or B A) (or C A)) => iff B C))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (iff B C)
        (__ : cupicef.Term cupicef.prop (iff B C) => iff (or B A) (or C A)))
     (H : cupicef.Term cupicef.prop (iff (or B A) (or C A)) =>
      match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or B A)
           (__ : cupicef.Term cupicef.prop (or B A) => or C A))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or C A)
           (__ : cupicef.Term cupicef.prop (or C A) => or B A))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (or B A)
                   (__ : cupicef.Term cupicef.prop (or B A) => or C A))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (or C A)
                   (__ : cupicef.Term cupicef.prop (or C A) => or B A))) =>
         iff B C)
        (Hl :
           (__ : cupicef.Term cupicef.prop (or B A) ->
            cupicef.Term cupicef.prop (or C A)) =>
         Hr :
           (__ : cupicef.Term cupicef.prop (or C A) ->
            cupicef.Term cupicef.prop (or B A)) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => C))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__ : cupicef.Term cupicef.prop C => B))
           (H0 : cupicef.Term cupicef.prop B =>
            match____or cupicef.prop C A
              (__ : cupicef.Term cupicef.prop (or C A) => C)
              (H1 : cupicef.Term cupicef.prop C => H1)
              (H1 : cupicef.Term cupicef.prop A =>
               match____False cupicef.prop
                 (__ : cupicef.Term cupicef.prop False => C)
                 (let__n1 A B C Fl Fr H Hl Hr H0 H1))
              (let__o1 A B C Fl Fr H Hl Hr H0))
           (H0 : cupicef.Term cupicef.prop C =>
            match____or cupicef.prop B A
              (__ : cupicef.Term cupicef.prop (or B A) => B)
              (H1 : cupicef.Term cupicef.prop B => H1)
              (H1 : cupicef.Term cupicef.prop A =>
               match____False cupicef.prop
                 (__ : cupicef.Term cupicef.prop False => B)
                 (let__n2 A B C Fl Fr H Hl Hr H0 H1))
              (let__o2 A B C Fl Fr H Hl Hr H0)))
        H)
     (or__iff__compat__r A B C).

thm or__comm :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  cupicef.Term cupicef.prop (iff (or A B) (or B A))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or A B)
        (__ : cupicef.Term cupicef.prop (or A B) => or B A))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or B A)
        (__ : cupicef.Term cupicef.prop (or B A) => or A B))
     (H : cupicef.Term cupicef.prop (or A B) =>
      match____or cupicef.prop A B
        (__ : cupicef.Term cupicef.prop (or A B) => or B A)
        (H0 : cupicef.Term cupicef.prop A => or__intror B A H0)
        (H0 : cupicef.Term cupicef.prop B => or__introl B A H0) H)
     (H : cupicef.Term cupicef.prop (or B A) =>
      match____or cupicef.prop B A
        (__ : cupicef.Term cupicef.prop (or B A) => or A B)
        (H0 : cupicef.Term cupicef.prop B => or__intror A B H0)
        (H0 : cupicef.Term cupicef.prop A => or__introl A B H0) H).

thm or__assoc :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  cupicef.Term cupicef.prop (iff (or (or A B) C) (or A (or B C)))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or (or A B) C)
        (__ : cupicef.Term cupicef.prop (or (or A B) C) => or A (or B C)))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (or A (or B C))
        (__ : cupicef.Term cupicef.prop (or A (or B C)) => or (or A B) C))
     (H : cupicef.Term cupicef.prop (or (or A B) C) =>
      match____or cupicef.prop (or A B) C
        (__ : cupicef.Term cupicef.prop (or (or A B) C) => or A (or B C))
        (H0 : cupicef.Term cupicef.prop (or A B) =>
         match____or cupicef.prop A B
           (__ : cupicef.Term cupicef.prop (or A B) => or A (or B C))
           (H1 : cupicef.Term cupicef.prop A => or__introl A (or B C) H1)
           (H1 : cupicef.Term cupicef.prop B =>
            or__intror A (or B C) (or__introl B C H1))
           H0)
        (H0 : cupicef.Term cupicef.prop C =>
         or__intror A (or B C) (or__intror B C H0))
        H)
     (H : cupicef.Term cupicef.prop (or A (or B C)) =>
      match____or cupicef.prop A (or B C)
        (__ : cupicef.Term cupicef.prop (or A (or B C)) => or (or A B) C)
        (H0 : cupicef.Term cupicef.prop A =>
         or__introl (or A B) C (or__introl A B H0))
        (H0 : cupicef.Term cupicef.prop (or B C) =>
         match____or cupicef.prop B C
           (__ : cupicef.Term cupicef.prop (or B C) => or (or A B) C)
           (H1 : cupicef.Term cupicef.prop B =>
            or__introl (or A B) C (or__intror A B H1))
           (H1 : cupicef.Term cupicef.prop C => or__intror (or A B) C H1) H0)
        H).

thm iff__and :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff A B) ->
  cupicef.Term cupicef.prop
    (and
       (cupicef.prod cupicef.prop cupicef.prop
          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
          (__0 : cupicef.Term cupicef.prop A => B))
       (cupicef.prod cupicef.prop cupicef.prop
          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
          (__0 : cupicef.Term cupicef.prop B => A)))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff A B) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
        (__ : cupicef.Term cupicef.prop A => B))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => A))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                (__ : cupicef.Term cupicef.prop A => B))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => A))) =>
      and
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
           (__0 : cupicef.Term cupicef.prop A => B))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
           (__0 : cupicef.Term cupicef.prop B => A)))
     (H0 : (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop B) =>
      H1 : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
      conj
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
           (__ : cupicef.Term cupicef.prop A => B))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
           (__ : cupicef.Term cupicef.prop B => A))
        H0 H1)
     H.

thm iff__to__and :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  cupicef.Term cupicef.prop
    (iff (iff A B)
       (and
          (cupicef.prod cupicef.prop cupicef.prop
             (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
             (__ : cupicef.Term cupicef.prop A => B))
          (cupicef.prod cupicef.prop cupicef.prop
             (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
             (__ : cupicef.Term cupicef.prop B => A))))

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (iff A B)
        (__ : cupicef.Term cupicef.prop (iff A B) =>
         and
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__0 : cupicef.Term cupicef.prop A => B))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__0 : cupicef.Term cupicef.prop B => A))))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (and
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => B))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => A)))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                   (__ : cupicef.Term cupicef.prop A => B))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                   (__ : cupicef.Term cupicef.prop B => A))) =>
         iff A B))
     (H : cupicef.Term cupicef.prop (iff A B) =>
      match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
           (__ : cupicef.Term cupicef.prop A => B))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
           (__ : cupicef.Term cupicef.prop B => A))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                   (__ : cupicef.Term cupicef.prop A => B))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                   (__ : cupicef.Term cupicef.prop B => A))) =>
         and
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__0 : cupicef.Term cupicef.prop A => B))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__0 : cupicef.Term cupicef.prop B => A)))
        (Hl :
           (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop B) =>
         Hr :
           (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => B))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => A))
           (H0 : cupicef.Term cupicef.prop A => Hl H0)
           (H0 : cupicef.Term cupicef.prop B => Hr H0))
        H)
     (H :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                (__ : cupicef.Term cupicef.prop A => B))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => A))) =>
      match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
           (__ : cupicef.Term cupicef.prop A => B))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
           (__ : cupicef.Term cupicef.prop B => A))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                   (__ : cupicef.Term cupicef.prop A => B))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                   (__ : cupicef.Term cupicef.prop B => A))) =>
         iff A B)
        (Hl :
           (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop B) =>
         Hr :
           (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
              (__ : cupicef.Term cupicef.prop A => B))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => A))
           (H0 : cupicef.Term cupicef.prop A => Hl H0)
           (H0 : cupicef.Term cupicef.prop B => Hr H0))
        H).

def IF__then__else :
  P : cupicef.Univ cupicef.prop ->
  Q : cupicef.Univ cupicef.prop ->
  R : cupicef.Univ cupicef.prop ->
  cupicef.Univ cupicef.prop

:= P : cupicef.Univ cupicef.prop =>
   Q : cupicef.Univ cupicef.prop =>
   R : cupicef.Univ cupicef.prop =>
   or (and P Q) (and (not P) R).

def ex :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.prop.

def ex__intro :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (P x) ->
  cupicef.Term cupicef.prop (ex A P).

[ ] cupicef.code_guarded? _ (ex__intro _ _ _ _) --> cupicef.guarded.

def match____ex :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  P0 : (cupicef.Term cupicef.prop (ex A P) -> cupicef.Univ s) ->
  case__ex__intro :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (P x0) ->
     cupicef.Term s (P0 (ex__intro A P x0 __))) ->
  x : cupicef.Term cupicef.prop (ex A P) ->
  cupicef.Term s (P0 x).

[ s, A, P, P0, case__ex__intro, x0, __]
  match____ex s A P P0 case__ex__intro (ex__intro A P x0 __)
  -->
  case__ex__intro x0 __.

[ s, A, P, P0, s']
  match____ex s A P
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P0 x)))
  -->
  match____ex s' A P (x => P0 x).

def ex__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  P0 : cupicef.Univ cupicef.prop ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (P x) ->
     cupicef.Term cupicef.prop P0) ->
  e : cupicef.Term cupicef.prop (ex A P) ->
  cupicef.Term cupicef.prop P0

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   P0 : cupicef.Univ cupicef.prop =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (P x) ->
      cupicef.Term cupicef.prop P0) =>
   e : cupicef.Term cupicef.prop (ex A P) =>
   match____ex cupicef.prop A P
     (__ : cupicef.Term cupicef.prop (ex A P) => P0) f e.

def ex2 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  Q :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.prop.

def ex__intro2 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  Q :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (P x) ->
  __0 : cupicef.Term cupicef.prop (Q x) ->
  cupicef.Term cupicef.prop (ex2 A P Q).

[ ] cupicef.code_guarded? _ (ex__intro2 _ _ _ _ _ _) --> cupicef.guarded.

def match____ex2 :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  Q :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  P0 : (cupicef.Term cupicef.prop (ex2 A P Q) -> cupicef.Univ s) ->
  case__ex__intro2 :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (P x0) ->
     __0 : cupicef.Term cupicef.prop (Q x0) ->
     cupicef.Term s (P0 (ex__intro2 A P Q x0 __ __0))) ->
  x : cupicef.Term cupicef.prop (ex2 A P Q) ->
  cupicef.Term s (P0 x).

[ s, A, P, Q, P0, case__ex__intro2, x0, __, __0]
  match____ex2 s A P Q P0 case__ex__intro2 (ex__intro2 A P Q x0 __ __0)
  -->
  case__ex__intro2 x0 __ __0.

[ s, A, P, Q, P0, s']
  match____ex2 s A P Q
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P0 x)))
  -->
  match____ex2 s' A P Q (x => P0 x).

def ex2__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  Q :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  P0 : cupicef.Univ cupicef.prop ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (P x) ->
     __0 : cupicef.Term cupicef.prop (Q x) ->
     cupicef.Term cupicef.prop P0) ->
  e : cupicef.Term cupicef.prop (ex2 A P Q) ->
  cupicef.Term cupicef.prop P0

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   Q :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   P0 : cupicef.Univ cupicef.prop =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (P x) ->
      __0 : cupicef.Term cupicef.prop (Q x) ->
      cupicef.Term cupicef.prop P0) =>
   e : cupicef.Term cupicef.prop (ex2 A P Q) =>
   match____ex2 cupicef.prop A P Q
     (__ : cupicef.Term cupicef.prop (ex2 A P Q) => P0) f e.

def all :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x).

thm inst :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ :
    cupicef.Term cupicef.prop
      (all A
         (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x0)) ->
  cupicef.Term cupicef.prop (P x)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           cupicef.prop))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop))
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           cupicef.prop)
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
              cupicef.prop))
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           cupicef.prop
           (cupicef.rule
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
              cupicef.prop)
           cupicef.I
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
              cupicef.I A
              (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               P x0))
           (H :
              (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               cupicef.Term cupicef.prop (P x0)) =>
            P x)))
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop)
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
           (all A
              (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               P x0))
           (__ :
              cupicef.Term cupicef.prop
                (all A
                   (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    P x0)) =>
            P x)))
     cupicef.I
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      H :
        (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
         cupicef.Term cupicef.prop (P x0)) =>
      H x).

thm gen :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  B : cupicef.Univ cupicef.prop ->
  f :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop B ->
     cupicef.Term cupicef.prop (P y)) ->
  __ : cupicef.Term cupicef.prop B ->
  cupicef.Term cupicef.prop (all A P)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop))))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.prop cupicef.prop)))
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    cupicef.prop))))
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (B : cupicef.Univ cupicef.prop =>
         cupicef.prod
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop))
           (cupicef.rule
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    cupicef.prop)))
           cupicef.I
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                 (__ : cupicef.Term cupicef.prop B => P y)))
           (f :
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               __ : cupicef.Term cupicef.prop B ->
               cupicef.Term cupicef.prop (P y)) =>
            cupicef.prod cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    cupicef.prop))
              cupicef.I B
              (H : cupicef.Term cupicef.prop B =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    cupicef.prop)
                 cupicef.I A
                 (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  P x)))))
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (B : cupicef.Univ cupicef.prop =>
         cupicef.prod
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                 (__ : cupicef.Term cupicef.prop B => P y)))
           (f :
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               __ : cupicef.Term cupicef.prop B ->
               cupicef.Term cupicef.prop (P y)) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => all A P))))
     cupicef.I
     (B : cupicef.Univ cupicef.prop =>
      f :
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
         __ : cupicef.Term cupicef.prop B ->
         cupicef.Term cupicef.prop (P y)) =>
      H : cupicef.Term cupicef.prop B =>
      x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      f x H).

def eq :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  cupicef.Univ cupicef.prop.

def eq__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  cupicef.Term cupicef.prop (eq A x x).

[ ] cupicef.code_guarded? _ (eq__refl _ _) --> cupicef.guarded.

def match____eq :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
     cupicef.Term cupicef.prop (eq A x __) ->
     cupicef.Univ s) ->
  case__eq__refl : cupicef.Term s (P x (eq__refl A x)) ->
  __ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  x0 : cupicef.Term cupicef.prop (eq A x __) ->
  cupicef.Term s (P __ x0).

[ s, A, x, P, case__eq__refl]
  match____eq s A x P case__eq__refl {x} (eq__refl A x)
  -->
  case__eq__refl.

[ s, A, x, P, s']
  match____eq s A x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____eq s' A x (__ => x => P __ x).

def eq__rect :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  f : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) ->
  y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  e : cupicef.Term cupicef.prop (eq A x y) ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y)

:= A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   f : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
   y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   e : cupicef.Term cupicef.prop (eq A x y) =>
   match____eq (cupicef.type (cupicef.s cupicef.z)) A x
     (y0 : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
      __ : cupicef.Term cupicef.prop (eq A x y0) =>
      P y0)
     f y e.

def eq__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
     cupicef.Univ cupicef.prop) ->
  f : cupicef.Term cupicef.prop (P x) ->
  y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  e : cupicef.Term cupicef.prop (eq A x y) ->
  cupicef.Term cupicef.prop (P y)

:= A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
      cupicef.Univ cupicef.prop) =>
   f : cupicef.Term cupicef.prop (P x) =>
   y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   e : cupicef.Term cupicef.prop (eq A x y) =>
   match____eq cupicef.prop A x
     (y0 : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
      __ : cupicef.Term cupicef.prop (eq A x y0) =>
      P y0)
     f y e.

def eq__rec :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
     cupicef.Univ cupicef.set) ->
  f : cupicef.Term cupicef.set (P x) ->
  y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  e : cupicef.Term cupicef.prop (eq A x y) ->
  cupicef.Term cupicef.set (P y)

:= A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
      cupicef.Univ cupicef.set) =>
   eq__rect A x
     (cupicef.cast
        (cupicef.rule (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.rule (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
        (cupicef.prod (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.type (cupicef.s cupicef.z)))
           cupicef.I A
           (__ :
              cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
            cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I))
        (cupicef.prod (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.rule (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
           cupicef.I A
           (__ :
              cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
            cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I))
        cupicef.I P).

def let__f :
  A : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  h1 : cupicef.Term cupicef.prop A ->
  h2 : (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop False) ->
  cupicef.Term cupicef.prop False

:= A : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   h1 : cupicef.Term cupicef.prop A =>
   h2 : (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop False) =>
   h2 h1.

thm absurd :
  A : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop A ->
  __0 : cupicef.Term cupicef.prop (not A) ->
  cupicef.Term cupicef.prop C

:= cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
                 cupicef.prop))))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))))
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
                 cupicef.prop)))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
                    cupicef.prop))))
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (A : cupicef.Univ cupicef.prop =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
                 cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
                    cupicef.prop)))
           cupicef.I
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (C : cupicef.Univ cupicef.prop =>
            cupicef.prod cupicef.prop
              (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
                 cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
                    cupicef.prop))
              cupicef.I A
              (h1 : cupicef.Term cupicef.prop A =>
               cupicef.prod (cupicef.rule cupicef.prop cupicef.prop)
                 cupicef.prop
                 (cupicef.rule (cupicef.rule cupicef.prop cupicef.prop)
                    cupicef.prop)
                 cupicef.I
                 (cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                    (__ : cupicef.Term cupicef.prop A => False))
                 (h2 :
                    (__ : cupicef.Term cupicef.prop A ->
                     cupicef.Term cupicef.prop False) =>
                  C)))))
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))))
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (A : cupicef.Univ cupicef.prop =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (C : cupicef.Univ cupicef.prop =>
            cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (__ : cupicef.Term cupicef.prop A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 not A) (__0 : cupicef.Term cupicef.prop (not A) => C)))))
     cupicef.I
     (A : cupicef.Univ cupicef.prop =>
      C : cupicef.Univ cupicef.prop =>
      h1 : cupicef.Term cupicef.prop A =>
      h2 :
        (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop False) =>
      match____False cupicef.prop (__ : cupicef.Term cupicef.prop False => C)
        (let__f A C h1 h2)).

def eq__sym :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  __ : cupicef.Term cupicef.prop (eq A x y) ->
  cupicef.Term cupicef.prop (eq A y x)

:= A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   H : cupicef.Term cupicef.prop (eq A x y) =>
   match____eq cupicef.prop A x
     (y0 : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
      __ : cupicef.Term cupicef.prop (eq A x y0) =>
      eq A y0 x)
     (eq__refl A x) y H.

def eq__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  z : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  __ : cupicef.Term cupicef.prop (eq A x y) ->
  __0 : cupicef.Term cupicef.prop (eq A y z) ->
  cupicef.Term cupicef.prop (eq A x z)

:= A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   z : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   H : cupicef.Term cupicef.prop (eq A x y) =>
   H0 : cupicef.Term cupicef.prop (eq A y z) =>
   match____eq cupicef.prop A y
     (y0 : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
      __ : cupicef.Term cupicef.prop (eq A y y0) =>
      eq A x y0)
     H z H0.

def f__equal :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  B : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
     cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) B) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  __ : cupicef.Term cupicef.prop (eq A x y) ->
  cupicef.Term cupicef.prop (eq B (f x) (f y))

:= A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) =>
   B : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
      cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) B) =>
   x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   H : cupicef.Term cupicef.prop (eq A x y) =>
   match____eq cupicef.prop A x
     (y0 : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
      __ : cupicef.Term cupicef.prop (eq A x y0) =>
      eq B (f x) (f y0))
     (eq__refl B (f x)) y H.

thm not__eq__sym :
  A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A ->
  __ : cupicef.Term cupicef.prop (not (eq A x y)) ->
  cupicef.Term cupicef.prop (not (eq A y x))

:= A : cupicef.Univ (cupicef.type (cupicef.s (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   y : cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
   cupicef.cast
     (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop))
     (cupicef.rule cupicef.prop cupicef.prop)
     (cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop))
        cupicef.I (not (eq A x y))
        (h1 : cupicef.Term cupicef.prop (not (eq A x y)) =>
         cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (eq A y x)
           (h2 : cupicef.Term cupicef.prop (eq A y x) => False)))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (not (eq A x y))
        (__ : cupicef.Term cupicef.prop (not (eq A x y)) => not (eq A y x)))
     cupicef.I
     (h1 : cupicef.Term cupicef.prop (not (eq A x y)) =>
      h2 : cupicef.Term cupicef.prop (eq A y x) =>
      h1
        (match____eq cupicef.prop A y
           (y0 :
              cupicef.Term (cupicef.type (cupicef.s (cupicef.s cupicef.z))) A =>
            __ : cupicef.Term cupicef.prop (eq A y y0) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (not (eq A y0 y))
              (h3 : cupicef.Term cupicef.prop (not (eq A y0 y)) => eq A y0 y))
           (h3 : cupicef.Term cupicef.prop (not (eq A y y)) => eq__refl A y)
           x h2 h1)).

def eq__ind__r :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  __ : cupicef.Term cupicef.prop (P x) ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __0 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         y x) ->
  cupicef.Term cupicef.prop (P y)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   H : cupicef.Term cupicef.prop (P x) =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y x) =>
   eq__ind
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P y0) H y
     (eq__sym
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A)
        y x H0).

def eq__rec__r :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.set) ->
  __ : cupicef.Term cupicef.set (P x) ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __0 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         y x) ->
  cupicef.Term cupicef.set (P y)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.set) =>
   H : cupicef.Term cupicef.set (P x) =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y x) =>
   eq__rec
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P y0) H y
     (eq__sym
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A)
        y x H0).

def eq__rect__r :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __0 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         y x) ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   H : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y x) =>
   eq__rect
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P y0) H y
     (eq__sym
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A)
        y x H0).

def rew__opp__r :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (P y))
       (eq__rect
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x P (eq__rect__r A y P a x H) y H)
       a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        cupicef.I (P y0)
        (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y0) =>
         eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (P y0))
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x P (eq__rect__r A y0 P a0 x e) y0 e)
           a0))
     (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
      eq__refl
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (P x))
        a0)
     y H a.

def rew__opp__l :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (P x))
       (eq__rect__r A y P
          (eq__rect
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x P a y H)
          x H)
       a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (P x))
        (eq__rect__r A y0 P
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x P a y0 e)
           x e)
        a)
     (eq__refl
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (P x))
        a)
     y H.

thm f__equal2 :
  A1 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A2 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
  y1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
  x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
  y2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
  __ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A1)
         x1 y1) ->
  __0 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A2)
         x2 y2) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I B)
       (f x1 x2) (f y1 y2))

:= A1 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A2 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
   y1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
   x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
   y2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
   H :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A1)
          x1 y1) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A1)
     x1
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
      __ :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A1)
             x1 y) =>
      cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A2)
           x2 y2)
        (__0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A2)
                x2 y2) =>
         eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x1 x2) (f y y2)))
     (H0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A2)
             x2 y2) =>
      match____eq cupicef.prop
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A2)
        x2
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
         __ :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A2)
                x2 y) =>
         eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x1 x2) (f x1 y))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x1 x2))
        y2 H0)
     y1 H.

thm f__equal3 :
  A1 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A2 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A3 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
     __1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
  y1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
  x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
  y2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
  x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
  y3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
  __ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A1)
         x1 y1) ->
  __0 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A2)
         x2 y2) ->
  __1 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A3)
         x3 y3) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I B)
       (f x1 x2 x3) (f y1 y2 y3))

:= A1 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A2 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A3 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
      __1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
   y1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
   x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
   y2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
   x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
   y3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
   H :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A1)
          x1 y1) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A1)
     x1
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
      __ :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A1)
             x1 y) =>
      cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop))
        cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A2)
           x2 y2)
        (__0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A2)
                x2 y2) =>
         cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A3)
              x3 y3)
           (__1 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y3) =>
            eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x1 x2 x3) (f y y2 y3))))
     (H0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A2)
             x2 y2) =>
      match____eq cupicef.prop
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A2)
        x2
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
         __ :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A2)
                x2 y) =>
         cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A3)
              x3 y3)
           (__0 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y3) =>
            eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x1 x2 x3) (f x1 y y3)))
        (H1 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A3)
                x3 y3) =>
         match____eq cupicef.prop
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A3)
           x3
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
            __ :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y) =>
            eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x1 x2 x3) (f x1 x2 y))
           (eq__refl
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x1 x2 x3))
           y3 H1)
        y2 H0)
     y1 H.

thm f__equal4 :
  A1 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A2 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A3 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A4 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
     __1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
     __2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
  y1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
  x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
  y2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
  x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
  y3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
  x4 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 ->
  y4 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 ->
  __ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A1)
         x1 y1) ->
  __0 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A2)
         x2 y2) ->
  __1 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A3)
         x3 y3) ->
  __2 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A4)
         x4 y4) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I B)
       (f x1 x2 x3 x4) (f y1 y2 y3 y4))

:= A1 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A2 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A3 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A4 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
      __1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
      __2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
   y1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
   x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
   y2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
   x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
   y3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
   x4 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 =>
   y4 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 =>
   H :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A1)
          x1 y1) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A1)
     x1
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
      __ :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A1)
             x1 y) =>
      cupicef.prod cupicef.prop
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule cupicef.prop
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A2)
           x2 y2)
        (__0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A2)
                x2 y2) =>
         cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A3)
              x3 y3)
           (__1 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y3) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A4)
                 x4 y4)
              (__2 :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A4)
                      x4 y4) =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I B)
                 (f x1 x2 x3 x4) (f y y2 y3 y4)))))
     (H0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A2)
             x2 y2) =>
      match____eq cupicef.prop
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A2)
        x2
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
         __ :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A2)
                x2 y) =>
         cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A3)
              x3 y3)
           (__0 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y3) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A4)
                 x4 y4)
              (__1 :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A4)
                      x4 y4) =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I B)
                 (f x1 x2 x3 x4) (f x1 y y3 y4))))
        (H1 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A3)
                x3 y3) =>
         match____eq cupicef.prop
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A3)
           x3
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
            __ :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A4)
                 x4 y4)
              (__0 :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A4)
                      x4 y4) =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I B)
                 (f x1 x2 x3 x4) (f x1 x2 y y4)))
           (H2 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A4)
                   x4 y4) =>
            match____eq cupicef.prop
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A4)
              x4
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 =>
               __ :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A4)
                      x4 y) =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I B)
                 (f x1 x2 x3 x4) (f x1 x2 x3 y))
              (eq__refl
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I B)
                 (f x1 x2 x3 x4))
              y4 H2)
           y3 H1)
        y2 H0)
     y1 H.

thm f__equal5 :
  A1 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A2 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A3 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A4 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  A5 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
     __1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
     __2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 ->
     __3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A5 ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
  y1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
  x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
  y2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
  x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
  y3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
  x4 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 ->
  y4 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 ->
  x5 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A5 ->
  y5 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A5 ->
  __ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A1)
         x1 y1) ->
  __0 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A2)
         x2 y2) ->
  __1 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A3)
         x3 y3) ->
  __2 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A4)
         x4 y4) ->
  __3 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A5)
         x5 y5) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I B)
       (f x1 x2 x3 x4 x5) (f y1 y2 y3 y4 y5))

:= A1 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A2 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A3 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A4 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   A5 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 ->
      __1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 ->
      __2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 ->
      __3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A5 ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
   y1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
   x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
   y2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
   x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
   y3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
   x4 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 =>
   y4 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 =>
   x5 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A5 =>
   y5 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A5 =>
   H :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A1)
          x1 y1) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A1)
     x1
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A1 =>
      __ :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A1)
             x1 y) =>
      cupicef.prod cupicef.prop
        (cupicef.rule cupicef.prop
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        (cupicef.rule cupicef.prop
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))))
        cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A2)
           x2 y2)
        (__0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A2)
                x2 y2) =>
         cupicef.prod cupicef.prop
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A3)
              x3 y3)
           (__1 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y3) =>
            cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A4)
                 x4 y4)
              (__2 :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A4)
                      x4 y4) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A5)
                    x5 y5)
                 (__3 :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A5)
                         x5 y5) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I B)
                    (f x1 x2 x3 x4 x5) (f y y2 y3 y4 y5))))))
     (H0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A2)
             x2 y2) =>
      match____eq cupicef.prop
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A2)
        x2
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A2 =>
         __ :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A2)
                x2 y) =>
         cupicef.prod cupicef.prop
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A3)
              x3 y3)
           (__0 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y3) =>
            cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A4)
                 x4 y4)
              (__1 :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A4)
                      x4 y4) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A5)
                    x5 y5)
                 (__2 :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A5)
                         x5 y5) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I B)
                    (f x1 x2 x3 x4 x5) (f x1 y y3 y4 y5)))))
        (H1 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A3)
                x3 y3) =>
         match____eq cupicef.prop
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A3)
           x3
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A3 =>
            __ :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A3)
                   x3 y) =>
            cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A4)
                 x4 y4)
              (__0 :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A4)
                      x4 y4) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A5)
                    x5 y5)
                 (__1 :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A5)
                         x5 y5) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I B)
                    (f x1 x2 x3 x4 x5) (f x1 x2 y y4 y5))))
           (H2 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A4)
                   x4 y4) =>
            match____eq cupicef.prop
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A4)
              x4
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A4 =>
               __ :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A4)
                      x4 y) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A5)
                    x5 y5)
                 (__0 :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A5)
                         x5 y5) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I B)
                    (f x1 x2 x3 x4 x5) (f x1 x2 x3 y y5)))
              (H3 :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A5)
                      x5 y5) =>
               match____eq cupicef.prop
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A5)
                 x5
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A5 =>
                  __ :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A5)
                         x5 y) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I B)
                    (f x1 x2 x3 x4 x5) (f x1 x2 x3 x4 y))
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I B)
                    (f x1 x2 x3 x4 x5))
                 y5 H3)
              y4 H2)
           y3 H1)
        y2 H0)
     y1 H.

def f__equal__compose :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  C : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  b : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  g :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) C) ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         a b) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I C)
             (g (f a)) (g (f b))))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I B)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I C)
          g (f a) (f b)
          (f__equal
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I B)
             f a b e))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I C)
          (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           g (f a0))
          a b e))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   C : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   b : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   g :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) C) =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          a b) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     a
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             a y) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I C)
              (g (f a)) (g (f y))))
        (f__equal
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I C)
           g (f a) (f y)
           (f__equal
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              f a y e0))
        (f__equal
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I C)
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            g (f a0))
           a y e0))
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I C)
              (g (f a)) (g (f a))))
        (f__equal
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I C)
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            g (f a0))
           a a
           (eq__refl
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              a)))
     b e.

def eq__trans__refl__l :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y))
       (eq__trans
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x x y
          (eq__refl
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x)
          e)
       e)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x x y0
           (eq__refl
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x)
           e0)
        e0)
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x))
     y e.

def eq__trans__refl__r :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y))
       (eq__trans
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y y e
          (eq__refl
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             y))
       e)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x y0 y0 e0
           (eq__refl
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              y0))
        e0)
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x))
     y e.

def eq__sym__involutive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y))
       (eq__sym
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y x
          (eq__sym
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y e))
       e)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0))
        (eq__sym
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           y0 x
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0 e0))
        e0)
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x))
     y e.

def eq__trans__sym__inv__l :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             y y))
       (eq__trans
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y x y
          (eq__sym
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y e)
          e)
       (eq__refl
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              y0 y0))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           y0 x y0
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0 e0)
           e0)
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           y0))
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x))
     y e.

def eq__trans__sym__inv__r :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x x))
       (eq__trans
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y x e
          (eq__sym
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y e))
       (eq__refl
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x y0 x e0
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0 e0))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x))
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x))
     y e.

def eq__trans__assoc :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  t : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  e_27_ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         y z) ->
  e_27__27_ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         z t) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x t))
       (eq__trans
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y t e
          (eq__trans
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             y z t e_27_ e_27__27_))
       (eq__trans
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x z t
          (eq__trans
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y z e e_27_)
          e_27__27_))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   t : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   e_27_ :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y z) =>
   e_27__27_ :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          z t) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     z
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             z y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x y y0 e
           (eq__trans
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              y z y0 e_27_ e0))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x z y0
           (eq__trans
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y z e e_27_)
           e0))
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x z))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x z z
           (eq__trans
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y z e e_27_)
           (eq__refl
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              z)))
     t e_27__27_.

def let__e :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          a (f a))) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I A)
       a (f a))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           a (f a))) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   Hf a.

def let__a0 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          a (f a))) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           a (f a))) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   f a.

def let__e0 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          a (f a))) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I A)
       a (f a))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           a (f a))) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   Hf a.

def let__a1 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          a (f a))) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           a (f a))) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   f a.

def eq__id__comm__l :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          a (f a))) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             (f a) (f (f a))))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          f a (f a) (Hf a))
       (Hf (f a)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           a (f a))) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   cupicef.cast cupicef.prop cupicef.prop
     ((e :
         cupicef.Term cupicef.prop
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (f a) (f a)) =>
       eq
         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I
            (eq
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               (f a) (f (f a))))
         (match____eq cupicef.prop
            (cupicef.cast
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  cupicef.I)
               cupicef.I A)
            a
            (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
             __ :
               cupicef.Term cupicef.prop
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    a y) =>
             eq
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               (f a) (f y))
            e (f a) (Hf a))
         (Hf (f a)))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a)))
     (eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (f a) (f (f a))))
        (f__equal
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           f a (f a) (Hf a))
        (Hf (f a)))
     cupicef.I
     (eq__ind
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (f a) (f a)))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a) a (f a)
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              a (f a) (Hf a))
           (Hf a))
        (e :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                (f a) (f a)) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 (f a) (f (f a))))
           (match____eq cupicef.prop
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              a
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               __ :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      a y) =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 (f a) (f y))
              e (f a) (Hf a))
           (Hf (f a)))
        (match____eq cupicef.prop
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           a
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            e0 :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A)
                   a y) =>
            eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    y (f y)))
              (match____eq cupicef.prop
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 a
                 (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  __ :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         a y0) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    y (f y0))
                 (eq__trans
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    y a (f a)
                    (eq__sym
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       a y e0)
                    (Hf a))
                 y e0)
              (Hf y))
           (match____eq cupicef.prop
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              a
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               e0 :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      a y) =>
               eq
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I
                    (eq
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       a y))
                 (eq__trans
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    a a y
                    (eq__sym
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       a a
                       (eq__refl
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          a))
                    e0)
                 e0)
              (eq__refl
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I
                    (eq
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       a a))
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    a))
              (f a) (let__e0 A f Hf a))
           (f a) (let__e A f Hf a))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a))
        (eq__trans__sym__inv__l A a (f a) (Hf a))).

def let__Hfsymf :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (f a) a)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I A)
       a0 (f a0))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a) a)) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   eq__sym
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     (f a0) a0 (Hf a0).

def let__e1 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (f a) a)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             (f (f a)) (f (f (f a)))))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          f (f a) (f (f a)) (let__Hfsymf A f Hf a (f a)))
       (let__Hfsymf A f Hf a (f (f a))))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a) a)) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   eq__id__comm__l A f (let__Hfsymf A f Hf a) (f a).

def let__e2 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (f a) a)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I A)
       (f (f a)) (f (f (f a))))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a) a)) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   let__Hfsymf A f Hf a (f (f a)).

def let__e3 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (f a) a)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             (f a) (f (f a))))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          f a (f a) (let__Hfsymf A f Hf a a))
       (let__Hfsymf A f Hf a (f a)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a) a)) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   eq__id__comm__l A f (let__Hfsymf A f Hf a) a.

def let__e4 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (f a) a)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I A)
       (f a) (f (f a)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a) a)) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   let__Hfsymf A f Hf a (f a).

def let__e5 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (f a) a)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I A)
       (f a) a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a) a)) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   Hf a.

def eq__id__comm__r :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) ->
  Hf :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (f a) a)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             (f (f a)) (f a)))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          f (f a) a (Hf a))
       (Hf (f a)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A) =>
   Hf :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f a) a)) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   cupicef.cast cupicef.prop cupicef.prop
     ((e :
         cupicef.Term cupicef.prop
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (f (f a)) (f (f a))) =>
       eq
         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I
            (eq
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               (f (f a)) (f a)))
         (match____eq cupicef.prop
            (cupicef.cast
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  cupicef.I)
               cupicef.I A)
            (f a)
            (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
             __ :
               cupicef.Term cupicef.prop
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f a) y) =>
             eq
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               (f (f a)) (f y))
            e a (Hf a))
         (Hf (f a)))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f (f a))))
     (eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (f (f a)) (f a)))
        (f__equal
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           f (f a) a (Hf a))
        (Hf (f a)))
     cupicef.I
     (eq__ind
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (f (f a)) (f (f a))))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f (f a)) (f (f (f a))) (f (f a))
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (f (f (f a))) (f (f a)) (Hf (f (f a))))
           (Hf (f (f a))))
        (e :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                (f (f a)) (f (f a))) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 (f (f a)) (f a)))
           (match____eq cupicef.prop
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (f a)
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               __ :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      (f a) y) =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 (f (f a)) (f y))
              e a (Hf a))
           (Hf (f a)))
        (cupicef.cast cupicef.prop cupicef.prop
           (eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f (f a)) (f a)))
              (match____eq cupicef.prop
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 (f a)
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  __ :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         (f a) y) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f (f a)) (f y))
                 (eq__trans
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f (f a)) (f (f (f a))) (f (f a))
                    (let__Hfsymf A f Hf a (f (f a))) (Hf (f (f a))))
                 a (Hf a))
              (Hf (f a)))
           (eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f (f a)) (f a)))
              (match____eq cupicef.prop
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 (f a)
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  __ :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         (f a) y) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f (f a)) (f y))
                 (eq__trans
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f (f a)) (f (f (f a))) (f (f a))
                    (let__Hfsymf A f Hf a (f (f a))) (Hf (f (f a))))
                 a (Hf a))
              (Hf (f a)))
           cupicef.I
           (match____eq cupicef.prop
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f (f a)) (f (f (f a)))))
              (f__equal
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 f (f a) (f (f a)) (let__Hfsymf A f Hf a (f a)))
              (y :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      (f (f a)) (f (f (f a)))) =>
               __ :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I
                         (eq
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  cupicef.I)
                               cupicef.I A)
                            (f (f a)) (f (f (f a)))))
                      (f__equal
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         f (f a) (f (f a)) (let__Hfsymf A f Hf a (f a)))
                      y) =>
               eq
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I
                    (eq
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       (f (f a)) (f a)))
                 (match____eq cupicef.prop
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (f a)
                    (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     __0 :
                       cupicef.Term cupicef.prop
                         (eq
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  cupicef.I)
                               cupicef.I A)
                            (f a) y0) =>
                     eq
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       (f (f a)) (f y0))
                    (eq__trans
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       (f (f a)) (f (f (f a))) (f (f a)) y (Hf (f (f a))))
                    a (Hf a))
                 (Hf (f a)))
              (match____eq cupicef.prop
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I
                    (eq
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       (f a) (f (f a))))
                 (f__equal
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    f a (f a) (let__Hfsymf A f Hf a a))
                 (y :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         (f a) (f (f a))) =>
                  __ :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I
                            (eq
                               (cupicef.cast
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z))))
                                     cupicef.I)
                                  cupicef.I A)
                               (f a) (f (f a))))
                         (f__equal
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  cupicef.I)
                               cupicef.I A)
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  cupicef.I)
                               cupicef.I A)
                            f a (f a) (let__Hfsymf A f Hf a a))
                         y) =>
                  eq
                    (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I
                       (eq
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          (f (f a)) (f a)))
                    (match____eq cupicef.prop
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       (f a)
                       (y0 :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        __0 :
                          cupicef.Term cupicef.prop
                            (eq
                               (cupicef.cast
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z))))
                                     cupicef.I)
                                  cupicef.I A)
                               (f a) y0) =>
                        eq
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          (f (f a)) (f y0))
                       (eq__trans
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          (f (f a)) (f (f (f a))) (f (f a))
                          (f__equal
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             f (f a) (f (f a)) y)
                          (Hf (f (f a))))
                       a (Hf a))
                    (Hf (f a)))
                 (cupicef.cast cupicef.prop cupicef.prop
                    (eq
                       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I
                          (eq
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             (f (f a)) (f a)))
                       (match____eq cupicef.prop
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          (f a)
                          (y :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           __ :
                             cupicef.Term cupicef.prop
                               (eq
                                  (cupicef.cast
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z))))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z))))
                                        cupicef.I)
                                     cupicef.I A)
                                  (f a) y) =>
                           eq
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             (f (f a)) (f y))
                          (eq__trans
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             (f (f a)) (f (f (f a))) (f (f a))
                             (f__equal
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                f (f a) (f (f a))
                                (f__equal
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   f a (f a)
                                   (eq__sym
                                      (cupicef.cast
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            cupicef.I)
                                         cupicef.I A)
                                      (f a) a (Hf a))))
                             (Hf (f (f a))))
                          a (Hf a))
                       (Hf (f a)))
                    (eq
                       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I
                          (eq
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             (f (f a)) (f a)))
                       (match____eq cupicef.prop
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          (f a)
                          (y :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           __ :
                             cupicef.Term cupicef.prop
                               (eq
                                  (cupicef.cast
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z))))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z))))
                                        cupicef.I)
                                     cupicef.I A)
                                  (f a) y) =>
                           eq
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             (f (f a)) (f y))
                          (eq__trans
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             (f (f a)) (f (f (f a))) (f (f a))
                             (f__equal
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                f (f a) (f (f a))
                                (f__equal
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   f a (f a) (let__Hfsymf A f Hf a a)))
                             (Hf (f (f a))))
                          a (Hf a))
                       (Hf (f a)))
                    cupicef.I
                    (match____eq cupicef.prop
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       (f a)
                       (y :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        e1 :
                          cupicef.Term cupicef.prop
                            (eq
                               (cupicef.cast
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z))))
                                     cupicef.I)
                                  cupicef.I A)
                               (f a) y) =>
                        eq
                          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I
                             (eq
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                (f (f y)) (f y)))
                          (match____eq cupicef.prop
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             (f a)
                             (y0 :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              __ :
                                cupicef.Term cupicef.prop
                                  (eq
                                     (cupicef.cast
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z))))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z))))
                                           cupicef.I)
                                        cupicef.I A)
                                     (f a) y0) =>
                              eq
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                (f (f y)) (f y0))
                             (eq__trans
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                (f (f y)) (f (f (f a))) (f (f a))
                                (f__equal
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   f (f y) (f (f a))
                                   (f__equal
                                      (cupicef.cast
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            cupicef.I)
                                         cupicef.I A)
                                      (cupicef.cast
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            cupicef.I)
                                         cupicef.I A)
                                      f y (f a)
                                      (eq__sym
                                         (cupicef.cast
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s
                                                        (cupicef.s cupicef.z))))
                                               cupicef.I)
                                            cupicef.I A)
                                         (f a) y e1)))
                                (Hf (f (f a))))
                             y e1)
                          (Hf (f y)))
                       (cupicef.cast cupicef.prop cupicef.prop
                          ((e1 :
                              cupicef.Term cupicef.prop
                                (eq
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (f (f (f a))) (f (f a))) =>
                            eq
                              (cupicef.cast
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (cupicef.axiom
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z))))
                                 (cupicef.univ cupicef.prop
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.I)
                                 (cupicef.univ
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z))))
                                    cupicef.I)
                                 cupicef.I
                                 (eq
                                    (cupicef.cast
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z))))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z))))
                                          cupicef.I)
                                       cupicef.I A)
                                    (f (f (f a))) (f (f a))))
                              e1 (Hf (f (f a))))
                             (eq__trans
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                (f (f (f a))) (f (f (f a))) (f (f a))
                                (eq__refl
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (f (f (f a))))
                                (Hf (f (f a)))))
                          (eq
                             (cupicef.cast
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I
                                (eq
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (f (f (f a))) (f (f a))))
                             (eq__trans
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                (f (f (f a))) (f (f (f a))) (f (f a))
                                (f__equal
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   f (f (f a)) (f (f a))
                                   (f__equal
                                      (cupicef.cast
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            cupicef.I)
                                         cupicef.I A)
                                      (cupicef.cast
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            cupicef.I)
                                         cupicef.I A)
                                      f (f a) (f a)
                                      (eq__sym
                                         (cupicef.cast
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s
                                                        (cupicef.s cupicef.z))))
                                               cupicef.I)
                                            cupicef.I A)
                                         (f a) (f a)
                                         (eq__refl
                                            (cupicef.cast
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s
                                                        (cupicef.s cupicef.z))))
                                               (cupicef.univ
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z))
                                                  (cupicef.axiom
                                                     (cupicef.type
                                                        (cupicef.s cupicef.z)))
                                                  cupicef.I)
                                               (cupicef.univ
                                                  (cupicef.type
                                                     (cupicef.s
                                                        (cupicef.s cupicef.z)))
                                                  (cupicef.axiom
                                                     (cupicef.type
                                                        (cupicef.s
                                                           (cupicef.s
                                                              cupicef.z))))
                                                  cupicef.I)
                                               cupicef.I A)
                                            (f a)))))
                                (Hf (f (f a))))
                             (Hf (f (f a))))
                          cupicef.I
                          (eq__ind__r
                             (cupicef.cast
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (eq
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (f (f (f a))) (f (f a))))
                             (Hf (f (f a)))
                             (e1 :
                                cupicef.Term cupicef.prop
                                  (eq
                                     (cupicef.cast
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z))))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z))))
                                           cupicef.I)
                                        cupicef.I A)
                                     (f (f (f a))) (f (f a))) =>
                              eq
                                (cupicef.cast
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I
                                   (eq
                                      (cupicef.cast
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            cupicef.I)
                                         cupicef.I A)
                                      (f (f (f a))) (f (f a))))
                                e1 (Hf (f (f a))))
                             (eq__refl
                                (cupicef.cast
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I
                                   (eq
                                      (cupicef.cast
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            cupicef.I)
                                         cupicef.I A)
                                      (f (f (f a))) (f (f a))))
                                (Hf (f (f a))))
                             (eq__trans
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                (f (f (f a))) (f (f (f a))) (f (f a))
                                (eq__refl
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   (f (f (f a))))
                                (Hf (f (f a))))
                             (eq__trans__refl__l A (f (f (f a))) (f (f a))
                                (Hf (f (f a))))))
                       a (let__e5 A f Hf a)))
                 (let__Hfsymf A f Hf a (f a)) (let__e3 A f Hf a))
              (let__Hfsymf A f Hf a (f (f a))) (let__e1 A f Hf a)))
        (eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (f (f a)))
        (eq__trans__sym__inv__l A (f (f (f a))) (f (f a)) (Hf (f (f a))))).

thm eq__refl__map__distr :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I B)
             (f x) (f x)))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I B)
          f x x
          (eq__refl
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x))
       (eq__refl
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I B)
          (f x)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   eq__refl
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x) (f x)))
     (eq__refl
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I B)
        (f x)).

def eq__trans__map__distr :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  e_27_ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         y z) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I B)
             (f x) (f z)))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I B)
          f x z
          (eq__trans
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y z e e_27_))
       (eq__trans
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I B)
          (f x) (f y) (f z)
          (f__equal
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I B)
             f x y e)
          (f__equal
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I B)
             f y z e_27_)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   e_27_ :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y z) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     y
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             y y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x) (f y0)))
        (f__equal
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           f x y0
           (eq__trans
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y y0 e e0))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x) (f y) (f y0)
           (f__equal
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              f x y e)
           (f__equal
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              f y y0 e0)))
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x) (f y)))
        (eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x) (f y) (f y)
           (f__equal
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              f x y e)
           (f__equal
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              f y y
              (eq__refl
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 y))))
     z e_27_.

def eq__sym__map__distr :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I B)
             (f y) (f x)))
       (eq__sym
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I B)
          (f x) (f y)
          (f__equal
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I B)
             f x y e))
       (f__equal
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I B)
          f y x
          (eq__sym
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y e)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f y0) (f x)))
        (eq__sym
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x) (f y0)
           (f__equal
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              f x y0 e0))
        (f__equal
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           f y0 x
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0 e0)))
     (eq__refl
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x) (f x)))
        (f__equal
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           f x x
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x
              (eq__refl
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x))))
     y e.

def eq__trans__sym__distr :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  e_27_ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         y z) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             z x))
       (eq__sym
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x z
          (eq__trans
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y z e e_27_))
       (eq__trans
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          z y x
          (eq__sym
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             y z e_27_)
          (eq__sym
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y e)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           y0 z)
        (e_27_ :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                y0 z) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 z x))
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x z
              (eq__trans
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x y0 z e0 e_27_))
           (eq__trans
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              z y0 x
              (eq__sym
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 y0 z e_27_)
              (eq__sym
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x y0 e0))))
     (e_27_ :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x z) =>
      match____eq cupicef.prop
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A)
        x
        (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         e0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x y0) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 y0 x))
           (eq__sym
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x y0
              (eq__trans
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x y0
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x)
                 e0))
           (eq__trans
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              y0 x x
              (eq__sym
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x y0 e0)
              (eq__sym
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x))))
        (eq__refl
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x))
           (eq__trans
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x x
              (eq__sym
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x))
              (eq__sym
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x))))
        z e_27_)
     y e.

thm eq__trans__rew__distr :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  e_27_ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         y z) ->
  k : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (P z))
       (eq__rect
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x P k z
          (eq__trans
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y z e e_27_))
       (eq__rect
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          y P
          (eq__rect
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x P k y e)
          z e_27_))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      cupicef.prod cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        (cupicef.rule cupicef.prop
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop))
        cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           y0 z)
        (e_27_ :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                y0 z) =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           cupicef.I (P x)
           (k : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
            eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I (P z))
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x P k z
                 (eq__trans
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x y0 z e0 e_27_))
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 y0 P
                 (eq__rect
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x P k y0 e0)
                 z e_27_))))
     (e_27_ :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x z) =>
      match____eq cupicef.prop
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A)
        x
        (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         e0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x y0) =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           cupicef.I (P x)
           (k : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
            eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I (P y0))
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x P k y0
                 (eq__trans
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x x y0
                    (eq__refl
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x)
                    e0))
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x P
                 (eq__rect
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x P k x
                    (eq__refl
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x))
                 y0 e0)))
        (k : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
         eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (P x))
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x P
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x P k x
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x))
              x
              (eq__refl
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x)))
        z e_27_)
     y e.

thm rew__const :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  e :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  k : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I P)
       (eq__rect
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P) k
          y e)
       k)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   e :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e0 :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        cupicef.I P
        (k : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P =>
         eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I P)
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x
              (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P)
              k y0 e0)
           k))
     (k : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) P =>
      eq__refl
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I P)
        k)
     y e.

def subrelation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  R_27_ :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      cupicef.Univ cupicef.prop) =>
   R_27_ :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      cupicef.Univ cupicef.prop) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)))
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop)
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        cupicef.I B
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B =>
         cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (R x y)
           (__ : cupicef.Term cupicef.prop (R x y) => R_27_ x y))).

def unique :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   and (P x)
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop)
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        cupicef.I A
        (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x_27_)
           (__ : cupicef.Term cupicef.prop (P x_27_) =>
            eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x_27_))).

def uniqueness :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I A
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I (P x)
           (__ : cupicef.Term cupicef.prop (P x) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P y)
              (__0 : cupicef.Term cupicef.prop (P y) =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x y)))).

thm unique__existence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Term cupicef.prop
    (iff
       (and
          (ex A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))
          (uniqueness A P))
       (ex A
          (unique A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   conj
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (and
           (ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))
           (uniqueness A P))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (ex A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    P x))
                (uniqueness A P)) =>
         ex A
           (unique A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
        (ex A
           (unique A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)))
        (__ :
           cupicef.Term cupicef.prop
             (ex A
                (unique A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    P x))) =>
         and
           (ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))
           (uniqueness A P)))
     (H :
        cupicef.Term cupicef.prop
          (and
             (ex A
                (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 P x))
             (uniqueness A P)) =>
      match____and cupicef.prop
        (ex A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))
        (uniqueness A P)
        (__ :
           cupicef.Term cupicef.prop
             (and
                (ex A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    P x))
                (uniqueness A P)) =>
         ex A
           (unique A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)))
        (H0 :
           cupicef.Term cupicef.prop
             (ex A
                (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 P x)) =>
         match____ex cupicef.prop A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)
           (__ :
              cupicef.Term cupicef.prop
                (ex A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    P x)) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (uniqueness A P)
              (__0 : cupicef.Term cupicef.prop (uniqueness A P) =>
               ex A
                 (unique A
                    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     P x))))
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            Hx : cupicef.Term cupicef.prop (P x) =>
            Huni : cupicef.Term cupicef.prop (uniqueness A P) =>
            ex__intro A
              (unique A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  P x0))
              x
              (cupicef.cast cupicef.prop cupicef.prop
                 (and (P x)
                    (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop cupicef.prop)
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop))
                       cupicef.I A
                       (x_27_ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        cupicef.prod cupicef.prop cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                          (P x_27_)
                          (__ : cupicef.Term cupicef.prop (P x_27_) =>
                           eq
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             x x_27_))))
                 (unique A
                    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     P x0)
                    x)
                 cupicef.I
                 (conj (P x)
                    (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop cupicef.prop)
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop))
                       cupicef.I A
                       (x_27_ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        cupicef.prod cupicef.prop cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                          (P x_27_)
                          (__ : cupicef.Term cupicef.prop (P x_27_) =>
                           eq
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             x x_27_)))
                    Hx
                    (x_27_ :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     H1 : cupicef.Term cupicef.prop (P x_27_) =>
                     Huni x x_27_ Hx H1))))
           H0)
        H)
     (H :
        cupicef.Term cupicef.prop
          (ex A
             (unique A
                (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 P x))) =>
      match____ex cupicef.prop A
        (unique A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))
        (__ :
           cupicef.Term cupicef.prop
             (ex A
                (unique A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    P x))) =>
         and
           (ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))
           (uniqueness A P))
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         H0 :
           cupicef.Term cupicef.prop
             (unique A
                (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 P x0)
                x) =>
         match____and cupicef.prop
           ((x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x0)
              x)
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 ((x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                   P x0) x_27_)
                 (__ :
                    cupicef.Term cupicef.prop
                      ((x0 :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        P x0) x_27_) =>
                  eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x x_27_)))
           (__ :
              cupicef.Term cupicef.prop
                (and (P x)
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop)
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule cupicef.prop cupicef.prop))
                      cupicef.I A
                      (x_27_ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.prod cupicef.prop cupicef.prop
                         (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                         (P x_27_)
                         (__ : cupicef.Term cupicef.prop (P x_27_) =>
                          eq
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  cupicef.I)
                               cupicef.I A)
                            x x_27_)))) =>
            and
              (ex A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  P x0))
              (uniqueness A P))
           (Hx : cupicef.Term cupicef.prop (P x) =>
            Huni :
              (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               __ : cupicef.Term cupicef.prop (P x_27_) ->
               cupicef.Term cupicef.prop
                 (eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x x_27_)) =>
            conj
              (ex A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  P x0))
              (uniqueness A P)
              (ex__intro A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  P x0)
                 x Hx)
              (cupicef.cast
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))))
                 cupicef.prop
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop
                             (cupicef.rule cupicef.prop cupicef.prop))))
                    cupicef.I A
                    (x_27_ :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop
                             (cupicef.rule cupicef.prop cupicef.prop)))
                       cupicef.I A
                       (x_27__27_ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        cupicef.prod cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)
                          (cupicef.rule cupicef.prop
                             (cupicef.rule cupicef.prop cupicef.prop))
                          cupicef.I (P x_27_)
                          (Hx_27_ : cupicef.Term cupicef.prop (P x_27_) =>
                           cupicef.prod cupicef.prop cupicef.prop
                             (cupicef.rule cupicef.prop cupicef.prop)
                             cupicef.I (P x_27__27_)
                             (Hx_27__27_ :
                                cupicef.Term cupicef.prop (P x_27__27_) =>
                              eq
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                x_27_ x_27__27_)))))
                 (uniqueness A P) cupicef.I
                 (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  x_27__27_ :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  Hx_27_ : cupicef.Term cupicef.prop (P x_27_) =>
                  Hx_27__27_ : cupicef.Term cupicef.prop (P x_27__27_) =>
                  eq__trans
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x_27_ x x_27__27_
                    (eq__sym
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x x_27_ (Huni x_27_ Hx_27_))
                    (Huni x_27__27_ Hx_27__27_))))
           H0)
        H).

def let__H :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  H :
    cupicef.Term cupicef.prop
      (ex A
         (unique A
            (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H0 :
    cupicef.Term cupicef.prop
      (unique A
         (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x0) x) ->
  Hp : cupicef.Term cupicef.prop (P x) ->
  Huniq :
    (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (P x_27_) ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x x_27_)) ->
  Q :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  H1 :
    cupicef.Term cupicef.prop
      (ex A
         (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
          and (P x0) (Q x0))) ->
  x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H2 : cupicef.Term cupicef.prop (and (P x0) (Q x0)) ->
  HPx0 : cupicef.Term cupicef.prop (P x0) ->
  HQx0 : cupicef.Term cupicef.prop (Q x0) ->
  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  HPx1 : cupicef.Term cupicef.prop (P x1) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I A)
       x0 x1)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   H :
     cupicef.Term cupicef.prop
       (ex A
          (unique A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 :
     cupicef.Term cupicef.prop
       (unique A
          (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x0)
          x) =>
   Hp : cupicef.Term cupicef.prop (P x) =>
   Huniq :
     (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (P x_27_) ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x x_27_)) =>
   Q :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   H1 :
     cupicef.Term cupicef.prop
       (ex A
          (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           and (P x0) (Q x0))) =>
   x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H2 : cupicef.Term cupicef.prop (and (P x0) (Q x0)) =>
   HPx0 : cupicef.Term cupicef.prop (P x0) =>
   HQx0 : cupicef.Term cupicef.prop (Q x0) =>
   x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   HPx1 : cupicef.Term cupicef.prop (P x1) =>
   eq__trans
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x0 x x1
     (eq__sym
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A)
        x x0 (Huniq x0 HPx0))
     (Huniq x1 HPx1).

thm forall__exists__unique__domain__coincide :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  __ :
    cupicef.Term cupicef.prop
      (ex A
         (unique A
            (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))) ->
  Q :
    (__0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Term cupicef.prop
    (iff
       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
          (cupicef.rule cupicef.prop cupicef.prop)
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule cupicef.prop cupicef.prop))
          cupicef.I A
          (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           cupicef.prod cupicef.prop cupicef.prop
             (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x)
             (__0 : cupicef.Term cupicef.prop (P x) => Q x)))
       (ex A
          (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           and (P x) (Q x))))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   H :
     cupicef.Term cupicef.prop
       (ex A
          (unique A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))) =>
   match____ex cupicef.prop A
     (unique A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x))
     (__ :
        cupicef.Term cupicef.prop
          (ex A
             (unique A
                (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 P x))) =>
      cupicef.prod
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s cupicef.z)))
        cupicef.prop
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           cupicef.prop)
        cupicef.I
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           cupicef.I A
           (__0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I))
        (Q :
           (__0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            cupicef.Univ cupicef.prop) =>
         iff
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 P x) (__0 : cupicef.Term cupicef.prop (P x) => Q x)))
           (ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               and (P x) (Q x)))))
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      H0 :
        cupicef.Term cupicef.prop
          (unique A
             (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              P x0)
             x) =>
      match____and cupicef.prop
        ((x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x0) x)
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I A
           (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              ((x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                P x0) x_27_)
              (__ :
                 cupicef.Term cupicef.prop
                   ((x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     P x0) x_27_) =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x_27_)))
        (__ :
           cupicef.Term cupicef.prop
             (and (P x)
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop)
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop))
                   cupicef.I A
                   (x_27_ :
                      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                      (P x_27_)
                      (__ : cupicef.Term cupicef.prop (P x_27_) =>
                       eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         x x_27_)))) =>
         cupicef.prod
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           cupicef.prop
           (cupicef.rule
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.prop)
           cupicef.I
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I A
              (__0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           (Q :
              (__0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               cupicef.Univ cupicef.prop) =>
            iff
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                    P x0) (__0 : cupicef.Term cupicef.prop (P x0) => Q x0)))
              (ex A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  and (P x0) (Q x0)))))
        (Hp : cupicef.Term cupicef.prop (P x) =>
         Huniq :
           (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            __ : cupicef.Term cupicef.prop (P x_27_) ->
            cupicef.Term cupicef.prop
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x_27_)) =>
         Q :
           (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            cupicef.Univ cupicef.prop) =>
         conj
           (cupicef.prod
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.prop
              (cupicef.rule
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.prop)
              cupicef.I
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                    P x0) (__ : cupicef.Term cupicef.prop (P x0) => Q x0)))
              (__ :
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                  __ : cupicef.Term cupicef.prop (P x0) ->
                  cupicef.Term cupicef.prop (Q x0)) =>
               ex A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  and (P x0) (Q x0))))
           (cupicef.prod cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I
              (ex A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  and (P x0) (Q x0)))
              (__ :
                 cupicef.Term cupicef.prop
                   (ex A
                      (x0 :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       and (P x0) (Q x0))) =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                    P x0) (__0 : cupicef.Term cupicef.prop (P x0) => Q x0))))
           (H1 :
              (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               __ : cupicef.Term cupicef.prop (P x0) ->
               cupicef.Term cupicef.prop (Q x0)) =>
            ex__intro A
              (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               and (P x0) (Q x0))
              x (conj (P x) (Q x) Hp (H1 x Hp)))
           (H1 :
              cupicef.Term cupicef.prop
                (ex A
                   (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    and (P x0) (Q x0))) =>
            match____ex cupicef.prop A
              (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               and (P x0) (Q x0))
              (__ :
                 cupicef.Term cupicef.prop
                   (ex A
                      (x0 :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       and (P x0) (Q x0))) =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                    P x0) (__0 : cupicef.Term cupicef.prop (P x0) => Q x0)))
              (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               H2 : cupicef.Term cupicef.prop (and (P x0) (Q x0)) =>
               match____and cupicef.prop (P x0) (Q x0)
                 (__ : cupicef.Term cupicef.prop (and (P x0) (Q x0)) =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop cupicef.prop))
                    cupicef.I A
                    (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (P x1)
                       (__0 : cupicef.Term cupicef.prop (P x1) => Q x1)))
                 (HPx0 : cupicef.Term cupicef.prop (P x0) =>
                  HQx0 : cupicef.Term cupicef.prop (Q x0) =>
                  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  HPx1 : cupicef.Term cupicef.prop (P x1) =>
                  match____eq cupicef.prop
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x0
                    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     __ :
                       cupicef.Term cupicef.prop
                         (eq
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  cupicef.I)
                               cupicef.I A)
                            x0 y) =>
                     cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (P y) (HPx2 : cupicef.Term cupicef.prop (P y) => Q y))
                    (HPx2 : cupicef.Term cupicef.prop (P x0) => HQx0) x1
                    (let__H A P H x H0 Hp Huniq Q H1 x0 H2 HPx0 HQx0 x1 HPx1)
                    HPx1)
                 H2)
              H1))
        H0)
     H.

def let__i :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  H :
    (Q :
       (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
        cupicef.Univ cupicef.prop) ->
     cupicef.Term cupicef.prop
       (iff
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule cupicef.prop cupicef.prop)
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule cupicef.prop cupicef.prop))
             cupicef.I A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x)
                (__ : cupicef.Term cupicef.prop (P x) => Q x)))
          (ex A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              and (P x) (Q x))))) ->
  cupicef.Term cupicef.prop
    (iff
       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
          (cupicef.rule cupicef.prop cupicef.prop)
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule cupicef.prop cupicef.prop))
          cupicef.I A
          (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           cupicef.prod cupicef.prop cupicef.prop
             (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x)
             (__ : cupicef.Term cupicef.prop (P x) => P x)))
       (ex A
          (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           and (P x) (P x))))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   H :
     (Q :
        (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
         cupicef.Univ cupicef.prop) ->
      cupicef.Term cupicef.prop
        (iff
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 P x) (__ : cupicef.Term cupicef.prop (P x) => Q x)))
           (ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               and (P x) (Q x))))) =>
   H P.

def let__i0 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  H :
    (Q :
       (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
        cupicef.Univ cupicef.prop) ->
     cupicef.Term cupicef.prop
       (iff
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule cupicef.prop cupicef.prop)
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule cupicef.prop cupicef.prop))
             cupicef.I A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x)
                (__ : cupicef.Term cupicef.prop (P x) => Q x)))
          (ex A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              and (P x) (Q x))))) ->
  H0 :
    (__ :
       (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
        __ : cupicef.Term cupicef.prop (P x) ->
        cupicef.Term cupicef.prop (P x)) ->
     cupicef.Term cupicef.prop
       (ex A
          (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           and (P x) (P x)))) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H1 : cupicef.Term cupicef.prop (and (P x) (P x)) ->
  Hx : cupicef.Term cupicef.prop (P x) ->
  __tmp : cupicef.Term cupicef.prop (P x) ->
  __tmp0 :
    (__ :
       cupicef.Term cupicef.prop
         (ex A
            (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
             and (P x0) (P x0))) ->
     x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term cupicef.prop (P x0) ->
     cupicef.Term cupicef.prop (P x0)) ->
  cupicef.Term cupicef.prop
    (iff
       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
          (cupicef.rule cupicef.prop cupicef.prop)
          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule cupicef.prop cupicef.prop))
          cupicef.I A
          (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           cupicef.prod cupicef.prop cupicef.prop
             (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x0)
             (__ : cupicef.Term cupicef.prop (P x0) =>
              (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x_27_)
                x0)))
       (ex A
          (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
           and (P x0)
             ((x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x x_27_)
                x0))))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   H :
     (Q :
        (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
         cupicef.Univ cupicef.prop) ->
      cupicef.Term cupicef.prop
        (iff
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 P x) (__ : cupicef.Term cupicef.prop (P x) => Q x)))
           (ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               and (P x) (Q x))))) =>
   H0 :
     (__ :
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
         __ : cupicef.Term cupicef.prop (P x) ->
         cupicef.Term cupicef.prop (P x)) ->
      cupicef.Term cupicef.prop
        (ex A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            and (P x) (P x)))) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H1 : cupicef.Term cupicef.prop (and (P x) (P x)) =>
   Hx : cupicef.Term cupicef.prop (P x) =>
   __tmp : cupicef.Term cupicef.prop (P x) =>
   __tmp0 :
     (__ :
        cupicef.Term cupicef.prop
          (ex A
             (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              and (P x0) (P x0))) ->
      x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term cupicef.prop (P x0) ->
      cupicef.Term cupicef.prop (P x0)) =>
   H
     (x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      eq
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A)
        x x_27_).

thm forall__exists__coincide__unique__domain :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  __ :
    (Q :
       (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
        cupicef.Univ cupicef.prop) ->
     cupicef.Term cupicef.prop
       (iff
          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.rule cupicef.prop cupicef.prop)
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule cupicef.prop cupicef.prop))
             cupicef.I A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x)
                (__ : cupicef.Term cupicef.prop (P x) => Q x)))
          (ex A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              and (P x) (Q x))))) ->
  cupicef.Term cupicef.prop
    (ex A
       (unique A
          (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   H :
     (Q :
        (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
         cupicef.Univ cupicef.prop) ->
      cupicef.Term cupicef.prop
        (iff
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 P x) (__ : cupicef.Term cupicef.prop (P x) => Q x)))
           (ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               and (P x) (Q x))))) =>
   match____and cupicef.prop
     (cupicef.prod
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        cupicef.prop
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.prop)
        cupicef.I
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x)
              (__ : cupicef.Term cupicef.prop (P x) => P x)))
        (__ :
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            __ : cupicef.Term cupicef.prop (P x) ->
            cupicef.Term cupicef.prop (P x)) =>
         ex A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            and (P x) (P x))))
     (cupicef.prod cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule cupicef.prop
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I
        (ex A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            and (P x) (P x)))
        (__ :
           cupicef.Term cupicef.prop
             (ex A
                (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 and (P x) (P x))) =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (P x)
              (__0 : cupicef.Term cupicef.prop (P x) => P x))))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop))
                cupicef.prop
                (cupicef.rule
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop))
                   cupicef.prop)
                cupicef.I
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop)
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop))
                   cupicef.I A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                      (P x) (__ : cupicef.Term cupicef.prop (P x) => P x)))
                (__ :
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                    __ : cupicef.Term cupicef.prop (P x) ->
                    cupicef.Term cupicef.prop (P x)) =>
                 ex A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    and (P x) (P x))))
             (cupicef.prod cupicef.prop
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop))
                (cupicef.rule cupicef.prop
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop)))
                cupicef.I
                (ex A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    and (P x) (P x)))
                (__ :
                   cupicef.Term cupicef.prop
                     (ex A
                        (x :
                           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                             A =>
                         and (P x) (P x))) =>
                 cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop)
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop))
                   cupicef.I A
                   (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                      (P x) (__0 : cupicef.Term cupicef.prop (P x) => P x))))) =>
      ex A
        (unique A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)))
     (H0 :
        (__ :
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            __ : cupicef.Term cupicef.prop (P x) ->
            cupicef.Term cupicef.prop (P x)) ->
         cupicef.Term cupicef.prop
           (ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               and (P x) (P x)))) =>
      match____ex cupicef.prop A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         and (P x) (P x))
        (__ :
           cupicef.Term cupicef.prop
             (ex A
                (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 and (P x) (P x))) =>
         cupicef.prod
           (cupicef.rule cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.prop
           (cupicef.rule
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.prop)
           cupicef.I
           (cupicef.prod cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I
              (ex A
                 (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  and (P x) (P x)))
              (__0 :
                 cupicef.Term cupicef.prop
                   (ex A
                      (x :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       and (P x) (P x))) =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                    P x) (__1 : cupicef.Term cupicef.prop (P x) => P x))))
           (__0 :
              (__0 :
                 cupicef.Term cupicef.prop
                   (ex A
                      (x :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       and (P x) (P x))) ->
               x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               __1 : cupicef.Term cupicef.prop (P x) ->
               cupicef.Term cupicef.prop (P x)) =>
            ex A
              (unique A
                 (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  P x))))
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         H1 : cupicef.Term cupicef.prop (and (P x) (P x)) =>
         match____and cupicef.prop (P x) (P x)
           (__ : cupicef.Term cupicef.prop (and (P x) (P x)) =>
            cupicef.prod
              (cupicef.rule cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.prop
              (cupicef.rule
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop cupicef.prop)))
                 cupicef.prop)
              cupicef.I
              (cupicef.prod cupicef.prop
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop cupicef.prop)))
                 cupicef.I
                 (ex A
                    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     and (P x0) (P x0)))
                 (__0 :
                    cupicef.Term cupicef.prop
                      (ex A
                         (x0 :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          and (P x0) (P x0))) =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop cupicef.prop))
                    cupicef.I A
                    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (P x0)
                       (__1 : cupicef.Term cupicef.prop (P x0) => P x0))))
              (__0 :
                 (__0 :
                    cupicef.Term cupicef.prop
                      (ex A
                         (x0 :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          and (P x0) (P x0))) ->
                  x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                  __1 : cupicef.Term cupicef.prop (P x0) ->
                  cupicef.Term cupicef.prop (P x0)) =>
               ex A
                 (unique A
                    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     P x0))))
           (Hx : cupicef.Term cupicef.prop (P x) =>
            __tmp : cupicef.Term cupicef.prop (P x) =>
            __tmp0 :
              (__ :
                 cupicef.Term cupicef.prop
                   (ex A
                      (x0 :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       and (P x0) (P x0))) ->
               x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               __0 : cupicef.Term cupicef.prop (P x0) ->
               cupicef.Term cupicef.prop (P x0)) =>
            ex__intro A
              (unique A
                 (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  P x0))
              x
              (conj (P x)
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop cupicef.prop))
                    cupicef.I A
                    (x_27_ :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (P x_27_)
                       (__ : cupicef.Term cupicef.prop (P x_27_) =>
                        eq
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          x x_27_)))
                 Hx
                 (match____and cupicef.prop
                    (cupicef.prod
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop))
                       cupicef.prop
                       (cupicef.rule
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop))
                          cupicef.prop)
                       cupicef.I
                       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop)
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop))
                          cupicef.I A
                          (x0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.prod cupicef.prop cupicef.prop
                             (cupicef.rule cupicef.prop cupicef.prop)
                             cupicef.I (P x0)
                             (__ : cupicef.Term cupicef.prop (P x0) =>
                              (x_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z)) A =>
                               eq
                                 (cupicef.cast
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z))))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z))))
                                       cupicef.I)
                                    cupicef.I A)
                                 x x_27_)
                                x0)))
                       (__ :
                          (x0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A ->
                           __ : cupicef.Term cupicef.prop (P x0) ->
                           cupicef.Term cupicef.prop
                             ((x_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z)) A =>
                               eq
                                 (cupicef.cast
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z))))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z))))
                                       cupicef.I)
                                    cupicef.I A)
                                 x x_27_)
                                x0)) =>
                        ex A
                          (x0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           and (P x0)
                             ((x_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z)) A =>
                               eq
                                 (cupicef.cast
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z))))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z))))
                                       cupicef.I)
                                    cupicef.I A)
                                 x x_27_)
                                x0))))
                    (cupicef.prod cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop)))
                       cupicef.I
                       (ex A
                          (x0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           and (P x0)
                             ((x_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z)) A =>
                               eq
                                 (cupicef.cast
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z))))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z))))
                                       cupicef.I)
                                    cupicef.I A)
                                 x x_27_)
                                x0)))
                       (__ :
                          cupicef.Term cupicef.prop
                            (ex A
                               (x0 :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z)) A =>
                                and (P x0)
                                  ((x_27_ :
                                      cupicef.Term
                                        (cupicef.type (cupicef.s cupicef.z))
                                        A =>
                                    eq
                                      (cupicef.cast
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z))))
                                            cupicef.I)
                                         cupicef.I A)
                                      x x_27_)
                                     x0))) =>
                        cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop)
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop))
                          cupicef.I A
                          (x0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.prod cupicef.prop cupicef.prop
                             (cupicef.rule cupicef.prop cupicef.prop)
                             cupicef.I (P x0)
                             (__0 : cupicef.Term cupicef.prop (P x0) =>
                              (x_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z)) A =>
                               eq
                                 (cupicef.cast
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z))))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z))))
                                       cupicef.I)
                                    cupicef.I A)
                                 x x_27_)
                                x0))))
                    (__ :
                       cupicef.Term cupicef.prop
                         (and
                            (cupicef.prod
                               (cupicef.rule
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.rule cupicef.prop cupicef.prop))
                               cupicef.prop
                               (cupicef.rule
                                  (cupicef.rule
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.rule cupicef.prop cupicef.prop))
                                  cupicef.prop)
                               cupicef.I
                               (cupicef.prod
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.rule cupicef.prop cupicef.prop)
                                  (cupicef.rule
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.rule cupicef.prop cupicef.prop))
                                  cupicef.I A
                                  (x0 :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z)) A =>
                                   cupicef.prod cupicef.prop cupicef.prop
                                     (cupicef.rule cupicef.prop cupicef.prop)
                                     cupicef.I (P x0)
                                     (__ : cupicef.Term cupicef.prop (P x0) =>
                                      eq
                                        (cupicef.cast
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z))))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z))))
                                              cupicef.I)
                                           cupicef.I A)
                                        x x0)))
                               (__ :
                                  (x0 :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z)) A ->
                                   __ : cupicef.Term cupicef.prop (P x0) ->
                                   cupicef.Term cupicef.prop
                                     (eq
                                        (cupicef.cast
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z))))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z))))
                                              cupicef.I)
                                           cupicef.I A)
                                        x x0)) =>
                                ex A
                                  (x0 :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z)) A =>
                                   and (P x0)
                                     (eq
                                        (cupicef.cast
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z))))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z))))
                                              cupicef.I)
                                           cupicef.I A)
                                        x x0))))
                            (cupicef.prod cupicef.prop
                               (cupicef.rule
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.rule cupicef.prop cupicef.prop))
                               (cupicef.rule cupicef.prop
                                  (cupicef.rule
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.rule cupicef.prop cupicef.prop)))
                               cupicef.I
                               (ex A
                                  (x0 :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z)) A =>
                                   and (P x0)
                                     (eq
                                        (cupicef.cast
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z))))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z))))
                                              cupicef.I)
                                           cupicef.I A)
                                        x x0)))
                               (__ :
                                  cupicef.Term cupicef.prop
                                    (ex A
                                       (x0 :
                                          cupicef.Term
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            A =>
                                        and (P x0)
                                          (eq
                                             (cupicef.cast
                                                (cupicef.axiom
                                                   (cupicef.type
                                                      (cupicef.s cupicef.z)))
                                                (cupicef.axiom
                                                   (cupicef.type
                                                      (cupicef.s
                                                         (cupicef.s cupicef.z))))
                                                (cupicef.univ
                                                   (cupicef.type
                                                      (cupicef.s cupicef.z))
                                                   (cupicef.axiom
                                                      (cupicef.type
                                                         (cupicef.s cupicef.z)))
                                                   cupicef.I)
                                                (cupicef.univ
                                                   (cupicef.type
                                                      (cupicef.s
                                                         (cupicef.s cupicef.z)))
                                                   (cupicef.axiom
                                                      (cupicef.type
                                                         (cupicef.s
                                                            (cupicef.s
                                                               cupicef.z))))
                                                   cupicef.I)
                                                cupicef.I A)
                                             x x0))) =>
                                cupicef.prod
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.rule cupicef.prop cupicef.prop)
                                  (cupicef.rule
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.rule cupicef.prop cupicef.prop))
                                  cupicef.I A
                                  (x0 :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z)) A =>
                                   cupicef.prod cupicef.prop cupicef.prop
                                     (cupicef.rule cupicef.prop cupicef.prop)
                                     cupicef.I (P x0)
                                     (__0 : cupicef.Term cupicef.prop (P x0) =>
                                      eq
                                        (cupicef.cast
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z))))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z))))
                                              cupicef.I)
                                           cupicef.I A)
                                        x x0))))) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop cupicef.prop)
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop))
                       cupicef.I A
                       (x_27_ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        cupicef.prod cupicef.prop cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                          (P x_27_)
                          (__0 : cupicef.Term cupicef.prop (P x_27_) =>
                           eq
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             x x_27_)))
                    (__tmp1 :
                       (__ :
                          (x0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A ->
                           __ : cupicef.Term cupicef.prop (P x0) ->
                           cupicef.Term cupicef.prop
                             (eq
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                x x0)) ->
                        cupicef.Term cupicef.prop
                          (ex A
                             (x0 :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              and (P x0)
                                (eq
                                   (cupicef.cast
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z))))
                                         cupicef.I)
                                      cupicef.I A)
                                   x x0)))) =>
                     Huniq :
                       (__ :
                          cupicef.Term cupicef.prop
                            (ex A
                               (x0 :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z)) A =>
                                and (P x0)
                                  (eq
                                     (cupicef.cast
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z))))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z))))
                                           cupicef.I)
                                        cupicef.I A)
                                     x x0))) ->
                        x0 :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        __0 : cupicef.Term cupicef.prop (P x0) ->
                        cupicef.Term cupicef.prop
                          (eq
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             x x0)) =>
                     Huniq
                       (ex__intro A
                          (x0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           and (P x0)
                             (eq
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                x x0))
                          x
                          (conj (P x)
                             (eq
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                x x)
                             Hx
                             (eq__refl
                                (cupicef.cast
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z))))
                                      cupicef.I)
                                   cupicef.I A)
                                x))))
                    (let__i0 A P H H0 x H1 Hx __tmp __tmp0))))
           H1)
        (H0
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H1 : cupicef.Term cupicef.prop (P x) =>
            H1)))
     (let__i A P H).

def inhabited :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Univ cupicef.prop.

def inhabits :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (inhabited A).

[ ] cupicef.code_guarded? _ (inhabits _ _) --> cupicef.guarded.

def match____inhabited :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P : (cupicef.Term cupicef.prop (inhabited A) -> cupicef.Univ s) ->
  case__inhabits :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term s (P (inhabits A __))) ->
  x : cupicef.Term cupicef.prop (inhabited A) ->
  cupicef.Term s (P x).

[ s, A, P, case__inhabits, __]
  match____inhabited s A P case__inhabits (inhabits A __)
  -->
  case__inhabits __.

[ s, A, P, s']
  match____inhabited s A
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____inhabited s' A (x => P x).

def inhabited__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P : cupicef.Univ cupicef.prop ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop P) ->
  i : cupicef.Term cupicef.prop (inhabited A) ->
  cupicef.Term cupicef.prop P

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P : cupicef.Univ cupicef.prop =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop P) =>
   i : cupicef.Term cupicef.prop (inhabited A) =>
   match____inhabited cupicef.prop A
     (__ : cupicef.Term cupicef.prop (inhabited A) => P) f i.

thm exists__inhabited :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  __ :
    cupicef.Term cupicef.prop
      (ex A (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)) ->
  cupicef.Term cupicef.prop (inhabited A)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   H :
     cupicef.Term cupicef.prop
       (ex A (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)) =>
   match____ex cupicef.prop A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)
     (__ :
        cupicef.Term cupicef.prop
          (ex A
             (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => P x)) =>
      inhabited A)
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      H0 : cupicef.Term cupicef.prop (P x) =>
      inhabits A x)
     H.

thm inhabited__covariant :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  __ :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  __0 : cupicef.Term cupicef.prop (inhabited A) ->
  cupicef.Term cupicef.prop (inhabited B)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   H : cupicef.Term cupicef.prop (inhabited A) =>
   match____inhabited cupicef.prop A
     (__ : cupicef.Term cupicef.prop (inhabited A) => inhabited B)
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      inhabits B (f x))
     H.

thm eq__stepl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  __0 :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x z) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I A)
       z y)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H1 :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   H2 :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x z) =>
   eq__ind
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      eq
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A)
        z0 y)
     H1 z H2.

thm iff__stepl :
  A : cupicef.Univ cupicef.prop ->
  B : cupicef.Univ cupicef.prop ->
  C : cupicef.Univ cupicef.prop ->
  __ : cupicef.Term cupicef.prop (iff A B) ->
  __0 : cupicef.Term cupicef.prop (iff A C) ->
  cupicef.Term cupicef.prop (iff C B)

:= A : cupicef.Univ cupicef.prop =>
   B : cupicef.Univ cupicef.prop =>
   C : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (iff A B) =>
   match____and cupicef.prop
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
        (__ : cupicef.Term cupicef.prop A => B))
     (cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
        (__ : cupicef.Term cupicef.prop B => A))
     (__ :
        cupicef.Term cupicef.prop
          (and
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                (__ : cupicef.Term cupicef.prop A => B))
             (cupicef.prod cupicef.prop cupicef.prop
                (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
                (__ : cupicef.Term cupicef.prop B => A))) =>
      cupicef.prod cupicef.prop cupicef.prop
        (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (iff A C)
        (__0 : cupicef.Term cupicef.prop (iff A C) => iff C B))
     (H0 : (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop B) =>
      H1 : (__ : cupicef.Term cupicef.prop B -> cupicef.Term cupicef.prop A) =>
      H2 : cupicef.Term cupicef.prop (iff A C) =>
      match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
           (__ : cupicef.Term cupicef.prop A => C))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
           (__ : cupicef.Term cupicef.prop C => A))
        (__ :
           cupicef.Term cupicef.prop
             (and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I A
                   (__ : cupicef.Term cupicef.prop A => C))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
                   (__ : cupicef.Term cupicef.prop C => A))) =>
         iff C B)
        (H3 :
           (__ : cupicef.Term cupicef.prop A -> cupicef.Term cupicef.prop C) =>
         H4 :
           (__ : cupicef.Term cupicef.prop C -> cupicef.Term cupicef.prop A) =>
         conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I C
              (__ : cupicef.Term cupicef.prop C => B))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I B
              (__ : cupicef.Term cupicef.prop B => C))
           (H5 : cupicef.Term cupicef.prop C => H0 (H1 (H0 (H4 H5))))
           (H5 : cupicef.Term cupicef.prop B => H3 (H1 H5)))
        H2)
     H.

thm eq__ex__uncurried :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  u2 : cupicef.Term cupicef.prop (P u1) ->
  v2 : cupicef.Term cupicef.prop (P v1) ->
  pq :
    cupicef.Term cupicef.prop
      (ex
         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (eq
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               u1 v1))
         (p :
            cupicef.Term cupicef.prop
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 u1 v1) =>
          eq
            (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  cupicef.I)
               cupicef.I (P v1))
            (eq__rect
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               u1
               (cupicef.cast
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                  (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I A
                     (__ :
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                      cupicef.univ cupicef.prop
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                  (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                     cupicef.I A
                     (__ :
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                      cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I))
                  cupicef.I P)
               u2 v1 p)
            v2)) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (ex A P))
       (ex__intro A P u1 u2) (ex__intro A P v1 v2))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   u2 : cupicef.Term cupicef.prop (P u1) =>
   v2 : cupicef.Term cupicef.prop (P v1) =>
   pq :
     cupicef.Term cupicef.prop
       (ex
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1 v1))
          (p :
             cupicef.Term cupicef.prop
               (eq
                  (cupicef.cast
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     (cupicef.univ
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                        (cupicef.axiom
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                        cupicef.I)
                     cupicef.I A)
                  u1 v1) =>
           eq
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I (P v1))
             (eq__rect
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1
                (cupicef.cast
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I))
                   cupicef.I P)
                u2 v1 p)
             v2)) =>
   match____ex cupicef.prop
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1 v1))
     (p :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             u1 v1) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (P v1))
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I P)
           u2 v1 p)
        v2)
     (__ :
        cupicef.Term cupicef.prop
          (ex
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A)
                   u1 v1))
             (p :
                cupicef.Term cupicef.prop
                  (eq
                     (cupicef.cast
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        (cupicef.axiom
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.I)
                        (cupicef.univ
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                           cupicef.I)
                        cupicef.I A)
                     u1 v1) =>
              eq
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I (P v1))
                (eq__rect
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A)
                   u1
                   (cupicef.cast
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z))))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I))
                      cupicef.I P)
                   u2 v1 p)
                v2)) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (ex A P))
        (ex__intro A P u1 u2) (ex__intro A P v1 v2))
     (p :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             u1 v1) =>
      q :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I (P v1))
             (eq__rect
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1
                (cupicef.cast
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I))
                   cupicef.I P)
                u2 v1 p)
             v2) =>
      match____eq cupicef.prop
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (P v1))
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I P)
           u2 v1 p)
        (y : cupicef.Term cupicef.prop (P v1) =>
         __ :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I (P v1))
                (eq__rect
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A)
                   u1
                   (cupicef.cast
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z))))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I))
                      cupicef.I P)
                   u2 v1 p)
                y) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (ex A P))
           (ex__intro A P u1 u2) (ex__intro A P v1 y))
        (cupicef.cast cupicef.prop cupicef.prop
           (eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I (ex A P))
              (ex__intro A P u1 u2)
              (ex__intro A P v1
                 (eq__rect
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    u1
                    (cupicef.cast
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I A
                          (__ :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z))))
                          cupicef.I A
                          (__ :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I))
                       cupicef.I P)
                    u2 v1 p)))
           (eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I (ex A P))
              (ex__intro A P u1 u2)
              (ex__intro A P v1
                 (eq__rect
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    u1
                    (cupicef.cast
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I A
                          (__ :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z))))
                          cupicef.I A
                          (__ :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I))
                       cupicef.I P)
                    u2 v1 p)))
           cupicef.I
           (match____eq cupicef.prop
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              u1
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               e :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      u1 y) =>
               eq
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I (ex A P))
                 (ex__intro A P u1 u2)
                 (ex__intro A P y
                    (eq__rect
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       u1
                       (cupicef.cast
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z))))
                          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I A
                             (__ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z))))
                             cupicef.I A
                             (__ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I))
                          cupicef.I P)
                       u2 y e)))
              (eq__refl
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I (ex A P))
                 (ex__intro A P u1
                    (eq__rect
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       u1
                       (cupicef.cast
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z))))
                          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I A
                             (__ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z))))
                             cupicef.I A
                             (__ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I))
                          cupicef.I P)
                       u2 u1
                       (eq__refl
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          u1))))
              v1 p))
        v2 q)
     pq.

def eq__ex :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  u2 : cupicef.Term cupicef.prop (P u1) ->
  v2 : cupicef.Term cupicef.prop (P v1) ->
  p :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         u1 v1) ->
  q :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I (P v1))
         (eq__rect
            (cupicef.cast
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  cupicef.I)
               cupicef.I A)
            u1
            (cupicef.cast
               (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
               (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I A
                  (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                   cupicef.univ cupicef.prop
                     (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
               (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                  cupicef.I A
                  (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                   cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I))
               cupicef.I P)
            u2 v1 p)
         v2) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (ex A P))
       (ex__intro A P u1 u2) (ex__intro A P v1 v2))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   u2 : cupicef.Term cupicef.prop (P u1) =>
   v2 : cupicef.Term cupicef.prop (P v1) =>
   p :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          u1 v1) =>
   q :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I (P v1))
          (eq__rect
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             u1
             (cupicef.cast
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I A
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   cupicef.I A
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I))
                cupicef.I P)
             u2 v1 p)
          v2) =>
   eq__ex__uncurried A P u1 v1 u2 v2
     (ex__intro
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              u1 v1))
        (p0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1 v1) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (P v1))
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              u1
              (cupicef.cast
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I))
                 cupicef.I P)
              u2 v1 p0)
           v2)
        p q).

def eq__ex__hprop :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  P__hprop :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     p : cupicef.Term cupicef.prop (P x) ->
     q : cupicef.Term cupicef.prop (P x) ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I (P x))
          p q)) ->
  u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  u2 : cupicef.Term cupicef.prop (P u1) ->
  v2 : cupicef.Term cupicef.prop (P v1) ->
  p :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         u1 v1) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (ex A P))
       (ex__intro A P u1 u2) (ex__intro A P v1 v2))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   P__hprop :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      p : cupicef.Term cupicef.prop (P x) ->
      q : cupicef.Term cupicef.prop (P x) ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (P x))
           p q)) =>
   u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   u2 : cupicef.Term cupicef.prop (P u1) =>
   v2 : cupicef.Term cupicef.prop (P v1) =>
   p :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          u1 v1) =>
   eq__ex A P u1 v1 u2 v2 p
     (P__hprop v1
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I P)
           u2 v1 p)
        v2).

thm rew__ex :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  Q :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) ->
     cupicef.Univ cupicef.prop) ->
  u :
    cupicef.Term cupicef.prop
      (ex (P x)
         (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
          Q x p)) ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (ex (P y)
             (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y) =>
              Q y p)))
       (eq__rect
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x
          (cupicef.cast
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
             (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I A
                (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                cupicef.I A
                (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I))
             cupicef.I
             (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              ex (P a)
                (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) =>
                 Q a p)))
          u y H)
       (match____ex cupicef.prop (P x)
          (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
           Q x p)
          (u0 :
             cupicef.Term cupicef.prop
               (ex (P x)
                  (p :
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                   Q x p)) =>
           ex (P y)
             (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y) =>
              Q y p))
          (u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
           u2 : cupicef.Term cupicef.prop (Q x u1) =>
           ex__intro (P y) (Q y)
             (eq__rect
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x P u1 y H)
             (match____eq cupicef.prop
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x
                (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 x0 :
                   cupicef.Term cupicef.prop
                     (eq
                        (cupicef.cast
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              cupicef.I)
                           (cupicef.univ
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                              (cupicef.axiom
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z))))
                              cupicef.I)
                           cupicef.I A)
                        x a) =>
                 Q a
                   (eq__rect
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      x P u1 a x0))
                u2 y H))
          u))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   Q :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) ->
      cupicef.Univ cupicef.prop) =>
   u :
     cupicef.Term cupicef.prop
       (ex (P x)
          (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
           Q x p)) =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (ex (P y0)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y0) =>
               Q y0 p)))
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I
              (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               ex (P a)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) =>
                  Q a p)))
           u y0 e)
        (match____ex cupicef.prop (P x)
           (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
            Q x p)
           (u0 :
              cupicef.Term cupicef.prop
                (ex (P x)
                   (p :
                      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                    Q x p)) =>
            ex (P y0)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y0) =>
               Q y0 p))
           (u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
            u2 : cupicef.Term cupicef.prop (Q x u1) =>
            ex__intro (P y0) (Q y0)
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x P u1 y0 e)
              (match____eq cupicef.prop
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  x0 :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         x a) =>
                  Q a
                    (eq__rect
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x P u1 a x0))
                 u2 y0 e))
           u))
     (match____ex cupicef.prop (P x)
        (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) => Q x p)
        (e :
           cupicef.Term cupicef.prop
             (ex (P x)
                (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                 Q x p)) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (ex (P x)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  Q x p)))
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x
              (cupicef.cast
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I A
                    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I))
                 cupicef.I
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  ex (P a)
                    (p :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                         (P a) =>
                     Q a p)))
              e x
              (eq__refl
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x))
           (match____ex cupicef.prop (P x)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
               Q x p)
              (u0 :
                 cupicef.Term cupicef.prop
                   (ex (P x)
                      (p :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                           (P x) =>
                       Q x p)) =>
               ex (P x)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  Q x p))
              (u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
               u2 : cupicef.Term cupicef.prop (Q x u1) =>
               ex__intro (P x) (Q x)
                 (eq__rect
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x P u1 x
                    (eq__refl
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x))
                 u2)
              e))
        (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
         q : cupicef.Term cupicef.prop (Q x x0) =>
         eq__refl
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (ex (P x)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  Q x p)))
           (ex__intro (P x) (Q x)
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x P x0 x
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x))
              q))
        u)
     y H.

thm eq__ex2__uncurried :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  Q :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  u2 : cupicef.Term cupicef.prop (P u1) ->
  v2 : cupicef.Term cupicef.prop (P v1) ->
  u3 : cupicef.Term cupicef.prop (Q u1) ->
  v3 : cupicef.Term cupicef.prop (Q v1) ->
  pq :
    cupicef.Term cupicef.prop
      (ex2
         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (eq
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               u1 v1))
         (p :
            cupicef.Term cupicef.prop
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 u1 v1) =>
          eq
            (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  cupicef.I)
               cupicef.I (P v1))
            (eq__rect
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               u1
               (cupicef.cast
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                  (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I A
                     (__ :
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                      cupicef.univ cupicef.prop
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                  (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                     cupicef.I A
                     (__ :
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                      cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I))
                  cupicef.I P)
               u2 v1 p)
            v2)
         (p :
            cupicef.Term cupicef.prop
              (eq
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 u1 v1) =>
          eq
            (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  cupicef.I)
               cupicef.I (Q v1))
            (eq__rect
               (cupicef.cast
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  (cupicef.univ
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     cupicef.I)
                  cupicef.I A)
               u1
               (cupicef.cast
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                  (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I A
                     (__ :
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                      cupicef.univ cupicef.prop
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                  (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                     cupicef.I A
                     (__ :
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                      cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I))
                  cupicef.I Q)
               u3 v1 p)
            v3)) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (ex2 A P Q))
       (ex__intro2 A P Q u1 u2 u3) (ex__intro2 A P Q v1 v2 v3))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   Q :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   u2 : cupicef.Term cupicef.prop (P u1) =>
   v2 : cupicef.Term cupicef.prop (P v1) =>
   u3 : cupicef.Term cupicef.prop (Q u1) =>
   v3 : cupicef.Term cupicef.prop (Q v1) =>
   pq :
     cupicef.Term cupicef.prop
       (ex2
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1 v1))
          (p :
             cupicef.Term cupicef.prop
               (eq
                  (cupicef.cast
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     (cupicef.univ
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                        (cupicef.axiom
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                        cupicef.I)
                     cupicef.I A)
                  u1 v1) =>
           eq
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I (P v1))
             (eq__rect
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1
                (cupicef.cast
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I))
                   cupicef.I P)
                u2 v1 p)
             v2)
          (p :
             cupicef.Term cupicef.prop
               (eq
                  (cupicef.cast
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.axiom
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     (cupicef.univ
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                        (cupicef.axiom
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                        cupicef.I)
                     cupicef.I A)
                  u1 v1) =>
           eq
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I (Q v1))
             (eq__rect
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1
                (cupicef.cast
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I))
                   cupicef.I Q)
                u3 v1 p)
             v3)) =>
   match____ex2 cupicef.prop
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (eq
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1 v1))
     (p :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             u1 v1) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (P v1))
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I P)
           u2 v1 p)
        v2)
     (p :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             u1 v1) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (Q v1))
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I Q)
           u3 v1 p)
        v3)
     (__ :
        cupicef.Term cupicef.prop
          (ex2
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (eq
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A)
                   u1 v1))
             (p :
                cupicef.Term cupicef.prop
                  (eq
                     (cupicef.cast
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        (cupicef.axiom
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.I)
                        (cupicef.univ
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                           cupicef.I)
                        cupicef.I A)
                     u1 v1) =>
              eq
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I (P v1))
                (eq__rect
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A)
                   u1
                   (cupicef.cast
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z))))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I))
                      cupicef.I P)
                   u2 v1 p)
                v2)
             (p :
                cupicef.Term cupicef.prop
                  (eq
                     (cupicef.cast
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        (cupicef.axiom
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.I)
                        (cupicef.univ
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                           cupicef.I)
                        cupicef.I A)
                     u1 v1) =>
              eq
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I (Q v1))
                (eq__rect
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A)
                   u1
                   (cupicef.cast
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z))))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I))
                      cupicef.I Q)
                   u3 v1 p)
                v3)) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (ex2 A P Q))
        (ex__intro2 A P Q u1 u2 u3) (ex__intro2 A P Q v1 v2 v3))
     (p :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             u1 v1) =>
      q :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I (P v1))
             (eq__rect
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1
                (cupicef.cast
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I))
                   cupicef.I P)
                u2 v1 p)
             v2) =>
      r :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I (Q v1))
             (eq__rect
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1
                (cupicef.cast
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      cupicef.I A
                      (__ :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I))
                   cupicef.I Q)
                u3 v1 p)
             v3) =>
      match____eq cupicef.prop
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I (Q v1))
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I Q)
           u3 v1 p)
        (y : cupicef.Term cupicef.prop (Q v1) =>
         __ :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I (Q v1))
                (eq__rect
                   (cupicef.cast
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I A)
                   u1
                   (cupicef.cast
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z))))
                         cupicef.I A
                         (__ :
                            cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                              A =>
                          cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I))
                      cupicef.I Q)
                   u3 v1 p)
                y) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (ex2 A P Q))
           (ex__intro2 A P Q u1 u2 u3) (ex__intro2 A P Q v1 v2 y))
        (match____eq cupicef.prop
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (P v1))
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              u1
              (cupicef.cast
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I))
                 cupicef.I P)
              u2 v1 p)
           (y : cupicef.Term cupicef.prop (P v1) =>
            __ :
              cupicef.Term cupicef.prop
                (eq
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         cupicef.I)
                      cupicef.I (P v1))
                   (eq__rect
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      u1
                      (cupicef.cast
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z))))
                         (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.rule
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I A
                            (__ :
                               cupicef.Term
                                 (cupicef.type (cupicef.s cupicef.z)) A =>
                             cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                         (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.rule
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z))))
                            cupicef.I A
                            (__ :
                               cupicef.Term
                                 (cupicef.type (cupicef.s cupicef.z)) A =>
                             cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I))
                         cupicef.I P)
                      u2 v1 p)
                   y) =>
            eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I (ex2 A P Q))
              (ex__intro2 A P Q u1 u2 u3)
              (ex__intro2 A P Q v1 y
                 (eq__rect
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    u1
                    (cupicef.cast
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I A
                          (__0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z))))
                          cupicef.I A
                          (__0 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I))
                       cupicef.I Q)
                    u3 v1 p)))
           (match____eq cupicef.prop
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              u1
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               e :
                 cupicef.Term cupicef.prop
                   (eq
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      u1 y) =>
               eq
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I (ex2 A P Q))
                 (ex__intro2 A P Q u1 u2 u3)
                 (ex__intro2 A P Q y
                    (eq__rect
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       u1
                       (cupicef.cast
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z))))
                          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I A
                             (__ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z))))
                             cupicef.I A
                             (__ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I))
                          cupicef.I P)
                       u2 y e)
                    (eq__rect
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       u1
                       (cupicef.cast
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z))))
                          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I A
                             (__ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z))))
                             cupicef.I A
                             (__ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I))
                          cupicef.I Q)
                       u3 y e)))
              (cupicef.cast cupicef.prop cupicef.prop
                 (eq
                    (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I (ex2 A P Q))
                    (ex__intro2 A P Q u1 u2 u3) (ex__intro2 A P Q u1 u2 u3))
                 (eq
                    (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I (ex2 A P Q))
                    (ex__intro2 A P Q u1 u2 u3)
                    (ex__intro2 A P Q u1
                       (eq__rect
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          u1
                          (cupicef.cast
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z))))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I A
                                (__ :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A =>
                                 cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z))))
                                cupicef.I A
                                (__ :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A =>
                                 cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I))
                             cupicef.I P)
                          u2 u1
                          (eq__refl
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             u1))
                       (eq__rect
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          u1
                          (cupicef.cast
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z))))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I A
                                (__ :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A =>
                                 cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z))))
                                cupicef.I A
                                (__ :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A =>
                                 cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I))
                             cupicef.I Q)
                          u3 u1
                          (eq__refl
                             (cupicef.cast
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z))))
                                   cupicef.I)
                                cupicef.I A)
                             u1))))
                 cupicef.I
                 (eq__refl
                    (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I (ex2 A P Q))
                    (ex__intro2 A P Q u1 u2 u3)))
              v1 p)
           v2 q)
        v3 r)
     pq.

def eq__ex2 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  Q :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  u2 : cupicef.Term cupicef.prop (P u1) ->
  v2 : cupicef.Term cupicef.prop (P v1) ->
  u3 : cupicef.Term cupicef.prop (Q u1) ->
  v3 : cupicef.Term cupicef.prop (Q v1) ->
  p :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         u1 v1) ->
  q :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I (P v1))
         (eq__rect
            (cupicef.cast
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  cupicef.I)
               cupicef.I A)
            u1
            (cupicef.cast
               (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
               (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I A
                  (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                   cupicef.univ cupicef.prop
                     (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
               (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                  cupicef.I A
                  (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                   cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I))
               cupicef.I P)
            u2 v1 p)
         v2) ->
  r :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I (Q v1))
         (eq__rect
            (cupicef.cast
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                  (cupicef.axiom
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                  cupicef.I)
               cupicef.I A)
            u1
            (cupicef.cast
               (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
               (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I A
                  (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                   cupicef.univ cupicef.prop
                     (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
               (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                  cupicef.I A
                  (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                   cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I))
               cupicef.I Q)
            u3 v1 p)
         v3) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (ex2 A P Q))
       (ex__intro2 A P Q u1 u2 u3) (ex__intro2 A P Q v1 v2 v3))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   Q :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   u2 : cupicef.Term cupicef.prop (P u1) =>
   v2 : cupicef.Term cupicef.prop (P v1) =>
   u3 : cupicef.Term cupicef.prop (Q u1) =>
   v3 : cupicef.Term cupicef.prop (Q v1) =>
   p :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          u1 v1) =>
   q :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I (P v1))
          (eq__rect
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             u1
             (cupicef.cast
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I A
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   cupicef.I A
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I))
                cupicef.I P)
             u2 v1 p)
          v2) =>
   r :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I (Q v1))
          (eq__rect
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             u1
             (cupicef.cast
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I A
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                   cupicef.I A
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I))
                cupicef.I Q)
             u3 v1 p)
          v3) =>
   eq__ex2__uncurried A P Q u1 v1 u2 v2 u3 v3
     (ex__intro2
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cupicef.I
           (eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              u1 v1))
        (p0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1 v1) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (P v1))
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              u1
              (cupicef.cast
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I))
                 cupicef.I P)
              u2 v1 p0)
           v2)
        (p0 :
           cupicef.Term cupicef.prop
             (eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                u1 v1) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (Q v1))
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              u1
              (cupicef.cast
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I))
                 cupicef.I Q)
              u3 v1 p0)
           v3)
        p q r).

def eq__ex2__hprop :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  Q :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  P__hprop :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     p : cupicef.Term cupicef.prop (P x) ->
     q : cupicef.Term cupicef.prop (P x) ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I (P x))
          p q)) ->
  Q__hprop :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     p : cupicef.Term cupicef.prop (Q x) ->
     q : cupicef.Term cupicef.prop (Q x) ->
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I (Q x))
          p q)) ->
  u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  u2 : cupicef.Term cupicef.prop (P u1) ->
  v2 : cupicef.Term cupicef.prop (P v1) ->
  u3 : cupicef.Term cupicef.prop (Q u1) ->
  v3 : cupicef.Term cupicef.prop (Q v1) ->
  p :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         u1 v1) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (ex2 A P Q))
       (ex__intro2 A P Q u1 u2 u3) (ex__intro2 A P Q v1 v2 v3))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   Q :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   P__hprop :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      p : cupicef.Term cupicef.prop (P x) ->
      q : cupicef.Term cupicef.prop (P x) ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (P x))
           p q)) =>
   Q__hprop :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      p : cupicef.Term cupicef.prop (Q x) ->
      q : cupicef.Term cupicef.prop (Q x) ->
      cupicef.Term cupicef.prop
        (eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I (Q x))
           p q)) =>
   u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   v1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   u2 : cupicef.Term cupicef.prop (P u1) =>
   v2 : cupicef.Term cupicef.prop (P v1) =>
   u3 : cupicef.Term cupicef.prop (Q u1) =>
   v3 : cupicef.Term cupicef.prop (Q v1) =>
   p :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          u1 v1) =>
   eq__ex2 A P Q u1 v1 u2 v2 u3 v3 p
     (P__hprop v1
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I P)
           u2 v1 p)
        v2)
     (Q__hprop v1
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           u1
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I Q)
           u3 v1 p)
        v3).

thm rew__ex2 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  Q :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) ->
     cupicef.Univ cupicef.prop) ->
  R :
    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) ->
     cupicef.Univ cupicef.prop) ->
  u :
    cupicef.Term cupicef.prop
      (ex2 (P x)
         (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
          Q x p)
         (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
          R x p)) ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H :
    cupicef.Term cupicef.prop
      (eq
         (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
               cupicef.I)
            cupicef.I A)
         x y) ->
  cupicef.Term cupicef.prop
    (eq
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I
          (ex2 (P y)
             (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y) =>
              Q y p)
             (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y) =>
              R y p)))
       (eq__rect
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x
          (cupicef.cast
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
             (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I A
                (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                cupicef.I A
                (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I))
             cupicef.I
             (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
              ex2 (P a)
                (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) =>
                 Q a p)
                (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) =>
                 R a p)))
          u y H)
       (match____ex2 cupicef.prop (P x)
          (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
           Q x p)
          (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
           R x p)
          (u0 :
             cupicef.Term cupicef.prop
               (ex2 (P x)
                  (p :
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                   Q x p)
                  (p :
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                   R x p)) =>
           ex2 (P y)
             (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y) =>
              Q y p)
             (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y) =>
              R y p))
          (u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
           u2 : cupicef.Term cupicef.prop (Q x u1) =>
           u3 : cupicef.Term cupicef.prop (R x u1) =>
           ex__intro2 (P y) (Q y) (R y)
             (eq__rect
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x P u1 y H)
             (match____eq cupicef.prop
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x
                (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 x0 :
                   cupicef.Term cupicef.prop
                     (eq
                        (cupicef.cast
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              cupicef.I)
                           (cupicef.univ
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                              (cupicef.axiom
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z))))
                              cupicef.I)
                           cupicef.I A)
                        x a) =>
                 Q a
                   (eq__rect
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      x P u1 a x0))
                u2 y H)
             (match____eq cupicef.prop
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x
                (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 x0 :
                   cupicef.Term cupicef.prop
                     (eq
                        (cupicef.cast
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              cupicef.I)
                           (cupicef.univ
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                              (cupicef.axiom
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z))))
                              cupicef.I)
                           cupicef.I A)
                        x a) =>
                 R a
                   (eq__rect
                      (cupicef.cast
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.axiom
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            cupicef.I)
                         cupicef.I A)
                      x P u1 a x0))
                u3 y H))
          u))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   Q :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) ->
      cupicef.Univ cupicef.prop) =>
   R :
     (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) ->
      cupicef.Univ cupicef.prop) =>
   u :
     cupicef.Term cupicef.prop
       (ex2 (P x)
          (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
           Q x p)
          (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
           R x p)) =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H :
     cupicef.Term cupicef.prop
       (eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)
          x y) =>
   match____eq cupicef.prop
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A)
     x
     (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      e :
        cupicef.Term cupicef.prop
          (eq
             (cupicef.cast
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                (cupicef.univ
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   cupicef.I)
                cupicef.I A)
             x y0) =>
      eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I
           (ex2 (P y0)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y0) =>
               Q y0 p)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y0) =>
               R y0 p)))
        (eq__rect
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x
           (cupicef.cast
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I A
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
              (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I A
                 (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I))
              cupicef.I
              (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               ex2 (P a)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) =>
                  Q a p)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P a) =>
                  R a p)))
           u y0 e)
        (match____ex2 cupicef.prop (P x)
           (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
            Q x p)
           (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
            R x p)
           (u0 :
              cupicef.Term cupicef.prop
                (ex2 (P x)
                   (p :
                      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                    Q x p)
                   (p :
                      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                    R x p)) =>
            ex2 (P y0)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y0) =>
               Q y0 p)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P y0) =>
               R y0 p))
           (u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
            u2 : cupicef.Term cupicef.prop (Q x u1) =>
            u3 : cupicef.Term cupicef.prop (R x u1) =>
            ex__intro2 (P y0) (Q y0) (R y0)
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x P u1 y0 e)
              (match____eq cupicef.prop
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  x0 :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         x a) =>
                  Q a
                    (eq__rect
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x P u1 a x0))
                 u2 y0 e)
              (match____eq cupicef.prop
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  x0 :
                    cupicef.Term cupicef.prop
                      (eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         x a) =>
                  R a
                    (eq__rect
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x P u1 a x0))
                 u3 y0 e))
           u))
     (match____ex2 cupicef.prop (P x)
        (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) => Q x p)
        (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) => R x p)
        (e :
           cupicef.Term cupicef.prop
             (ex2 (P x)
                (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                 Q x p)
                (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                 R x p)) =>
         eq
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (ex2 (P x)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  Q x p)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  R x p)))
           (eq__rect
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x
              (cupicef.cast
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I A
                    (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I A
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I))
                 cupicef.I
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  ex2 (P a)
                    (p :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                         (P a) =>
                     Q a p)
                    (p :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                         (P a) =>
                     R a p)))
              e x
              (eq__refl
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x))
           (match____ex2 cupicef.prop (P x)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
               Q x p)
              (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
               R x p)
              (u0 :
                 cupicef.Term cupicef.prop
                   (ex2 (P x)
                      (p :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                           (P x) =>
                       Q x p)
                      (p :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                           (P x) =>
                       R x p)) =>
               ex2 (P x)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  Q x p)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  R x p))
              (u1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
               u2 : cupicef.Term cupicef.prop (Q x u1) =>
               u3 : cupicef.Term cupicef.prop (R x u1) =>
               ex__intro2 (P x) (Q x) (R x)
                 (eq__rect
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x P u1 x
                    (eq__refl
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x))
                 u2 u3)
              e))
        (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
         q : cupicef.Term cupicef.prop (Q x x0) =>
         r : cupicef.Term cupicef.prop (R x x0) =>
         eq__refl
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I
              (ex2 (P x)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  Q x p)
                 (p : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P x) =>
                  R x p)))
           (ex__intro2 (P x) (Q x) (R x)
              (eq__rect
                 (cupicef.cast
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       cupicef.I)
                    cupicef.I A)
                 x P x0 x
                 (eq__refl
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x))
              q r))
        u)
     y H.

(; End of translation. ;)
