(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

def DefaultRelation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop.

#TYPE_CLASS DefaultRelation.

def Build__DefaultRelation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Term cupicef.prop (DefaultRelation A R).

[ ] cupicef.code_guarded? _ (Build__DefaultRelation _ _) --> cupicef.guarded.

def match____DefaultRelation :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P : (cupicef.Term cupicef.prop (DefaultRelation A R) -> cupicef.Univ s) ->
  case__Build__DefaultRelation :
    cupicef.Term s (P (Build__DefaultRelation A R)) ->
  x : cupicef.Term cupicef.prop (DefaultRelation A R) ->
  cupicef.Term s (P x).

[ s, A, R, P, case__Build__DefaultRelation]
  match____DefaultRelation s A R P case__Build__DefaultRelation
    (Build__DefaultRelation A R)
  -->
  case__Build__DefaultRelation.

[ s, A, R, P, s']
  match____DefaultRelation s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____DefaultRelation s' A R (x => P x).

def default__relation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (DefaultRelation A R) ->
  cupicef.Term
    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
       (cupicef.type (cupicef.s cupicef.z)))
    (Coq__Relations__Relation__Definitions.relation A)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (DefaultRelation A R) =>
   R.

def equivalence__default :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H :
    cupicef.Term cupicef.prop (Coq__Classes__RelationClasses.Equivalence A R) ->
  cupicef.Term cupicef.prop (DefaultRelation A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H :
     cupicef.Term cupicef.prop
       (Coq__Classes__RelationClasses.Equivalence A R) =>
   Build__DefaultRelation A R.

#TYPE_CLASS_INSTANCE equivalence__default.

(; End of translation. ;)
