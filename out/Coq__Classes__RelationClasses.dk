(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

def Reflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => R x x).

#TYPE_CLASS Reflexive.

def reflexivity :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (R x x)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) =>
   Reflexive0.

def complement :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Term
    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
       (cupicef.type (cupicef.s cupicef.z)))
    (Coq__Relations__Relation__Definitions.relation A)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   cupicef.prod cupicef.prop cupicef.prop
     (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (R x y)
     (__ : cupicef.Term cupicef.prop (R x y) => Coq__Init__Logic.False).

thm complement__inverse :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.eq
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
          (cupicef.univ
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             cupicef.I)
          cupicef.I (Coq__Relations__Relation__Definitions.relation A))
       (complement A
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R))
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          (complement A R)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Logic.eq__refl
     (cupicef.cast
        (cupicef.axiom
           (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ
           (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I (Coq__Relations__Relation__Definitions.relation A))
     (Coq__Program__Basics.flip A A
        (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cupicef.I
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I))
        (complement A R)).

def Irreflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Reflexive A (complement A R).

#TYPE_CLASS Irreflexive.

def irreflexivity :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Irreflexive0 : cupicef.Term cupicef.prop (Irreflexive A R) ->
  cupicef.Term cupicef.prop (Reflexive A (complement A R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Irreflexive0 : cupicef.Term cupicef.prop (Irreflexive A R) =>
   Irreflexive0.

def Symmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)))
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop)
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        cupicef.I A
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (R x y)
           (__ : cupicef.Term cupicef.prop (R x y) => R y x))).

#TYPE_CLASS Symmetric.

def symmetry :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  cupicef.Term cupicef.prop (R y x)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) =>
   Symmetric0.

def Asymmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I A
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I (R x y)
           (__ : cupicef.Term cupicef.prop (R x y) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (R y x)
              (__0 : cupicef.Term cupicef.prop (R y x) =>
               Coq__Init__Logic.False)))).

#TYPE_CLASS Asymmetric.

def asymmetry :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Asymmetric0 : cupicef.Term cupicef.prop (Asymmetric A R) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  __0 : cupicef.Term cupicef.prop (R y x) ->
  cupicef.Term cupicef.prop Coq__Init__Logic.False

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Asymmetric0 : cupicef.Term cupicef.prop (Asymmetric A R) =>
   Asymmetric0.

def Transitive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))))
        cupicef.I A
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I (R x y)
              (__ : cupicef.Term cupicef.prop (R x y) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 R y z) (__0 : cupicef.Term cupicef.prop (R y z) => R x z))))).

#TYPE_CLASS Transitive.

def transitivity :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  __0 : cupicef.Term cupicef.prop (R y z) ->
  cupicef.Term cupicef.prop (R x z)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
   Transitive0.

def PreOrder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop.

#TYPE_CLASS PreOrder.

def Build__PreOrder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  PreOrder__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) ->
  PreOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
  cupicef.Term cupicef.prop (PreOrder A R).

[ ] cupicef.code_guarded? _ (Build__PreOrder _ _ _ _) --> cupicef.guarded.

def match____PreOrder :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P : (cupicef.Term cupicef.prop (PreOrder A R) -> cupicef.Univ s) ->
  case__Build__PreOrder :
    (PreOrder__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) ->
     PreOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
     cupicef.Term s
       (P (Build__PreOrder A R PreOrder__Reflexive0 PreOrder__Transitive0))) ->
  x : cupicef.Term cupicef.prop (PreOrder A R) ->
  cupicef.Term s (P x).

[ s, A, R, P, case__Build__PreOrder, PreOrder__Reflexive0, PreOrder__Transitive0]
  match____PreOrder s A R P case__Build__PreOrder
    (Build__PreOrder A R PreOrder__Reflexive0 PreOrder__Transitive0)
  -->
  case__Build__PreOrder PreOrder__Reflexive0 PreOrder__Transitive0.

[ s, A, R, P, s']
  match____PreOrder s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____PreOrder s' A R (x => P x).

def PreOrder__Reflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  PreOrder0 : cupicef.Term cupicef.prop (PreOrder A R) ->
  cupicef.Term cupicef.prop (Reflexive A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   PreOrder0 : cupicef.Term cupicef.prop (PreOrder A R) =>
   match____PreOrder cupicef.prop A R
     (PreOrder1 : cupicef.Term cupicef.prop (PreOrder A R) => Reflexive A R)
     (PreOrder__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) =>
      PreOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      PreOrder__Reflexive0)
     PreOrder0.

#TYPE_CLASS_INSTANCE PreOrder__Reflexive.

def PreOrder__Transitive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  PreOrder0 : cupicef.Term cupicef.prop (PreOrder A R) ->
  cupicef.Term cupicef.prop (Transitive A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   PreOrder0 : cupicef.Term cupicef.prop (PreOrder A R) =>
   match____PreOrder cupicef.prop A R
     (PreOrder1 : cupicef.Term cupicef.prop (PreOrder A R) => Transitive A R)
     (PreOrder__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) =>
      PreOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      PreOrder__Transitive0)
     PreOrder0.

#TYPE_CLASS_INSTANCE PreOrder__Transitive.

def StrictOrder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop.

#TYPE_CLASS StrictOrder.

def Build__StrictOrder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  StrictOrder__Irreflexive0 : cupicef.Term cupicef.prop (Irreflexive A R) ->
  StrictOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
  cupicef.Term cupicef.prop (StrictOrder A R).

[ ] cupicef.code_guarded? _ (Build__StrictOrder _ _ _ _) --> cupicef.guarded.

def match____StrictOrder :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P : (cupicef.Term cupicef.prop (StrictOrder A R) -> cupicef.Univ s) ->
  case__Build__StrictOrder :
    (StrictOrder__Irreflexive0 : cupicef.Term cupicef.prop (Irreflexive A R) ->
     StrictOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
     cupicef.Term s
       (P
          (Build__StrictOrder A R StrictOrder__Irreflexive0
             StrictOrder__Transitive0))) ->
  x : cupicef.Term cupicef.prop (StrictOrder A R) ->
  cupicef.Term s (P x).

[ s, A, R, P, case__Build__StrictOrder, StrictOrder__Irreflexive0, StrictOrder__Transitive0]
  match____StrictOrder s A R P case__Build__StrictOrder
    (Build__StrictOrder A R StrictOrder__Irreflexive0
       StrictOrder__Transitive0)
  -->
  case__Build__StrictOrder StrictOrder__Irreflexive0 StrictOrder__Transitive0.

[ s, A, R, P, s']
  match____StrictOrder s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____StrictOrder s' A R (x => P x).

def StrictOrder__Irreflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  StrictOrder0 : cupicef.Term cupicef.prop (StrictOrder A R) ->
  cupicef.Term cupicef.prop (Irreflexive A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   StrictOrder0 : cupicef.Term cupicef.prop (StrictOrder A R) =>
   match____StrictOrder cupicef.prop A R
     (StrictOrder1 : cupicef.Term cupicef.prop (StrictOrder A R) =>
      Irreflexive A R)
     (StrictOrder__Irreflexive0 : cupicef.Term cupicef.prop (Irreflexive A R) =>
      StrictOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      StrictOrder__Irreflexive0)
     StrictOrder0.

#TYPE_CLASS_INSTANCE StrictOrder__Irreflexive.

def StrictOrder__Transitive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  StrictOrder0 : cupicef.Term cupicef.prop (StrictOrder A R) ->
  cupicef.Term cupicef.prop (Transitive A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   StrictOrder0 : cupicef.Term cupicef.prop (StrictOrder A R) =>
   match____StrictOrder cupicef.prop A R
     (StrictOrder1 : cupicef.Term cupicef.prop (StrictOrder A R) =>
      Transitive A R)
     (StrictOrder__Irreflexive0 : cupicef.Term cupicef.prop (Irreflexive A R) =>
      StrictOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      StrictOrder__Transitive0)
     StrictOrder0.

#TYPE_CLASS_INSTANCE StrictOrder__Transitive.

thm StrictOrder__Asymmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (StrictOrder A R) ->
  cupicef.Term cupicef.prop (Asymmetric A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (StrictOrder A R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))))
     cupicef.prop
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))))
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I (R x y)
              (H0 : cupicef.Term cupicef.prop (R x y) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 R y x)
                 (H1 : cupicef.Term cupicef.prop (R y x) =>
                  Coq__Init__Logic.False)))))
     (Asymmetric A R) cupicef.I
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      H0 : cupicef.Term cupicef.prop (R x y) =>
      H1 : cupicef.Term cupicef.prop (R y x) =>
      match____StrictOrder cupicef.prop A R
        (__ : cupicef.Term cupicef.prop (StrictOrder A R) =>
         Coq__Init__Logic.False)
        (StrictOrder__Irreflexive0 :
           cupicef.Term cupicef.prop (Irreflexive A R) =>
         StrictOrder__Transitive0 :
           cupicef.Term cupicef.prop (Transitive A R) =>
         (H2 :
            (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
             z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
             __ : cupicef.Term cupicef.prop (R y y0) ->
             __0 : cupicef.Term cupicef.prop (R y0 z) ->
             cupicef.Term cupicef.prop (R y z)) =>
          (H3 : cupicef.Term cupicef.prop (complement A R y y) =>
           (H4 :
              (z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
               __ : cupicef.Term cupicef.prop (R y x) ->
               __0 : cupicef.Term cupicef.prop (R x z) ->
               cupicef.Term cupicef.prop (R y z)) =>
            H3 (H4 y H1 H0)) (H2 x)) (StrictOrder__Irreflexive0 y))
           (StrictOrder__Transitive0 y))
        H).

#TYPE_CLASS_INSTANCE StrictOrder__Asymmetric.

def PER :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop.

#TYPE_CLASS PER.

def Build__PER :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  PER__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) ->
  PER__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
  cupicef.Term cupicef.prop (PER A R).

[ ] cupicef.code_guarded? _ (Build__PER _ _ _ _) --> cupicef.guarded.

def match____PER :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P : (cupicef.Term cupicef.prop (PER A R) -> cupicef.Univ s) ->
  case__Build__PER :
    (PER__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) ->
     PER__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
     cupicef.Term s (P (Build__PER A R PER__Symmetric0 PER__Transitive0))) ->
  x : cupicef.Term cupicef.prop (PER A R) ->
  cupicef.Term s (P x).

[ s, A, R, P, case__Build__PER, PER__Symmetric0, PER__Transitive0]
  match____PER s A R P case__Build__PER
    (Build__PER A R PER__Symmetric0 PER__Transitive0)
  -->
  case__Build__PER PER__Symmetric0 PER__Transitive0.

[ s, A, R, P, s']
  match____PER s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____PER s' A R (x => P x).

def PER__Symmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  PER0 : cupicef.Term cupicef.prop (PER A R) ->
  cupicef.Term cupicef.prop (Symmetric A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   PER0 : cupicef.Term cupicef.prop (PER A R) =>
   match____PER cupicef.prop A R
     (PER1 : cupicef.Term cupicef.prop (PER A R) => Symmetric A R)
     (PER__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) =>
      PER__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      PER__Symmetric0)
     PER0.

#TYPE_CLASS_INSTANCE PER__Symmetric.

def PER__Transitive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  PER0 : cupicef.Term cupicef.prop (PER A R) ->
  cupicef.Term cupicef.prop (Transitive A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   PER0 : cupicef.Term cupicef.prop (PER A R) =>
   match____PER cupicef.prop A R
     (PER1 : cupicef.Term cupicef.prop (PER A R) => Transitive A R)
     (PER__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) =>
      PER__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      PER__Transitive0)
     PER0.

#TYPE_CLASS_INSTANCE PER__Transitive.

def Equivalence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop.

#TYPE_CLASS Equivalence.

def Build__Equivalence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Equivalence__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) ->
  Equivalence__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) ->
  Equivalence__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
  cupicef.Term cupicef.prop (Equivalence A R).

[ ] cupicef.code_guarded? _ (Build__Equivalence _ _ _ _ _) --> cupicef.guarded.

def match____Equivalence :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P : (cupicef.Term cupicef.prop (Equivalence A R) -> cupicef.Univ s) ->
  case__Build__Equivalence :
    (Equivalence__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) ->
     Equivalence__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) ->
     Equivalence__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) ->
     cupicef.Term s
       (P
          (Build__Equivalence A R Equivalence__Reflexive0
             Equivalence__Symmetric0 Equivalence__Transitive0))) ->
  x : cupicef.Term cupicef.prop (Equivalence A R) ->
  cupicef.Term s (P x).

[ s, A, R, P, case__Build__Equivalence, Equivalence__Reflexive0, Equivalence__Symmetric0, Equivalence__Transitive0]
  match____Equivalence s A R P case__Build__Equivalence
    (Build__Equivalence A R Equivalence__Reflexive0 Equivalence__Symmetric0
       Equivalence__Transitive0)
  -->
  case__Build__Equivalence Equivalence__Reflexive0 Equivalence__Symmetric0
    Equivalence__Transitive0.

[ s, A, R, P, s']
  match____Equivalence s A R
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____Equivalence s' A R (x => P x).

def Equivalence__Reflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Equivalence0 : cupicef.Term cupicef.prop (Equivalence A R) ->
  cupicef.Term cupicef.prop (Reflexive A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Equivalence0 : cupicef.Term cupicef.prop (Equivalence A R) =>
   match____Equivalence cupicef.prop A R
     (Equivalence1 : cupicef.Term cupicef.prop (Equivalence A R) =>
      Reflexive A R)
     (Equivalence__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) =>
      Equivalence__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) =>
      Equivalence__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      Equivalence__Reflexive0)
     Equivalence0.

#TYPE_CLASS_INSTANCE Equivalence__Reflexive.

def Equivalence__Symmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Equivalence0 : cupicef.Term cupicef.prop (Equivalence A R) ->
  cupicef.Term cupicef.prop (Symmetric A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Equivalence0 : cupicef.Term cupicef.prop (Equivalence A R) =>
   match____Equivalence cupicef.prop A R
     (Equivalence1 : cupicef.Term cupicef.prop (Equivalence A R) =>
      Symmetric A R)
     (Equivalence__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) =>
      Equivalence__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) =>
      Equivalence__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      Equivalence__Symmetric0)
     Equivalence0.

#TYPE_CLASS_INSTANCE Equivalence__Symmetric.

def Equivalence__Transitive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Equivalence0 : cupicef.Term cupicef.prop (Equivalence A R) ->
  cupicef.Term cupicef.prop (Transitive A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Equivalence0 : cupicef.Term cupicef.prop (Equivalence A R) =>
   match____Equivalence cupicef.prop A R
     (Equivalence1 : cupicef.Term cupicef.prop (Equivalence A R) =>
      Transitive A R)
     (Equivalence__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) =>
      Equivalence__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) =>
      Equivalence__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      Equivalence__Transitive0)
     Equivalence0.

#TYPE_CLASS_INSTANCE Equivalence__Transitive.

def Equivalence__PER :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  E : cupicef.Term cupicef.prop (Equivalence A R) ->
  cupicef.Term cupicef.prop (PER A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   E : cupicef.Term cupicef.prop (Equivalence A R) =>
   Build__PER A R (Equivalence__Symmetric A R E)
     (Equivalence__Transitive A R E).

#TYPE_CLASS_INSTANCE Equivalence__PER.

def Equivalence__PreOrder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  E : cupicef.Term cupicef.prop (Equivalence A R) ->
  cupicef.Term cupicef.prop (PreOrder A R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   E : cupicef.Term cupicef.prop (Equivalence A R) =>
   Build__PreOrder A R (Equivalence__Reflexive A R E)
     (Equivalence__Transitive A R E).

#TYPE_CLASS_INSTANCE Equivalence__PreOrder.

def Antisymmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))))
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I A
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod cupicef.prop (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I (R x y)
           (__ : cupicef.Term cupicef.prop (R x y) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (R y x)
              (__0 : cupicef.Term cupicef.prop (R y x) => eqA x y)))).

#TYPE_CLASS Antisymmetric.

def antisymmetry :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Antisymmetric0 : cupicef.Term cupicef.prop (Antisymmetric A eqA equ R) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  __0 : cupicef.Term cupicef.prop (R y x) ->
  cupicef.Term cupicef.prop (eqA x y)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Antisymmetric0 : cupicef.Term cupicef.prop (Antisymmetric A eqA equ R) =>
   Antisymmetric0.

def subrelation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  R_27_ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   R_27_ :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   cupicef.prod (cupicef.type (cupicef.s cupicef.z))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop))
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)))
     cupicef.I A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule cupicef.prop cupicef.prop)
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        cupicef.I A
        (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (R x y)
           (__ : cupicef.Term cupicef.prop (R x y) => R_27_ x y))).

#TYPE_CLASS subrelation.

def is__subrelation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  R_27_ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  subrelation0 : cupicef.Term cupicef.prop (subrelation A R R_27_) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  cupicef.Term cupicef.prop (R_27_ x y)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   R_27_ :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   subrelation0 : cupicef.Term cupicef.prop (subrelation A R R_27_) =>
   subrelation0.

thm subrelation__symmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Symmetric A R) ->
  cupicef.Term cupicef.prop
    (subrelation A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R)
       R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Symmetric A R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)))
     cupicef.prop
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I A
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R x y)
              (H0 :
                 cupicef.Term cupicef.prop
                   (Coq__Program__Basics.flip A A
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      R x y) =>
               R x y))))
     (subrelation A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R)
        R)
     cupicef.I
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      H0 :
        cupicef.Term cupicef.prop
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R x y) =>
      symmetry A R H y x H0).

thm flip__Reflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Reflexive A R) ->
  cupicef.Term cupicef.prop
    (Reflexive A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Reflexive A R) =>
   H.

def flip__Irreflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Irreflexive A R) ->
  cupicef.Term cupicef.prop
    (Irreflexive A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Irreflexive A R) =>
   irreflexivity A R H.

def flip__Symmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Symmetric A R) ->
  cupicef.Term cupicef.prop
    (Symmetric A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Symmetric A R) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 :
     cupicef.Term cupicef.prop
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R x y) =>
   symmetry A R H y x H0.

def flip__Asymmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Asymmetric A R) ->
  cupicef.Term cupicef.prop
    (Asymmetric A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Asymmetric A R) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 :
     cupicef.Term cupicef.prop
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R x y) =>
   H_27_ :
     cupicef.Term cupicef.prop
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R y x) =>
   asymmetry A R H y x H0 H_27_.

def flip__Transitive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Transitive A R) ->
  cupicef.Term cupicef.prop
    (Transitive A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Transitive A R) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 :
     cupicef.Term cupicef.prop
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R x y) =>
   H_27_ :
     cupicef.Term cupicef.prop
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R y z) =>
   transitivity A R H z y x H_27_ H0.

thm flip__Antisymmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Antisymmetric A eqA equ R) ->
  cupicef.Term cupicef.prop
    (Antisymmetric A eqA equ
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Antisymmetric A eqA equ R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))))
     cupicef.prop
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))))
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R x y)
              (H0 :
                 cupicef.Term cupicef.prop
                   (Coq__Program__Basics.flip A A
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      R x y) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    R y x)
                 (H1 :
                    cupicef.Term cupicef.prop
                      (Coq__Program__Basics.flip A A
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                         R y x) =>
                  eqA x y)))))
     (Antisymmetric A eqA equ
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R))
     cupicef.I
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      H0 :
        cupicef.Term cupicef.prop
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R x y) =>
      H1 :
        cupicef.Term cupicef.prop
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R y x) =>
      (H2 :
         (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
          __ : cupicef.Term cupicef.prop (R y y0) ->
          __0 : cupicef.Term cupicef.prop (R y0 y) ->
          cupicef.Term cupicef.prop (eqA y y0)) =>
       (H3 :
          (__ : cupicef.Term cupicef.prop (R y x) ->
           __0 : cupicef.Term cupicef.prop (R x y) ->
           cupicef.Term cupicef.prop (eqA y x)) =>
        (H4 :
           (__ : cupicef.Term cupicef.prop (R x y) ->
            cupicef.Term cupicef.prop (eqA y x)) =>
         (H5 : cupicef.Term cupicef.prop (eqA y x) =>
          (H6 :
             (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
              __ : cupicef.Term cupicef.prop (R x y0) ->
              __0 : cupicef.Term cupicef.prop (R y0 x) ->
              cupicef.Term cupicef.prop (eqA x y0)) =>
           H x y H1 H0) (H x)) (H4 H1))
          (H3 H0))
         (H2 x))
        (H y)).

thm flip__PreOrder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (PreOrder A R) ->
  cupicef.Term cupicef.prop
    (PreOrder A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (PreOrder A R) =>
   match____PreOrder cupicef.prop A R
     (__ : cupicef.Term cupicef.prop (PreOrder A R) =>
      PreOrder A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R))
     (PreOrder__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) =>
      PreOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      Build__PreOrder A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R)
        PreOrder__Reflexive0
        (cupicef.cast
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))))
           cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))
                    cupicef.I A
                    (z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.prod cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))
                       cupicef.I
                       (Coq__Program__Basics.flip A A
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          R x y)
                       (H0 :
                          cupicef.Term cupicef.prop
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R x y) =>
                        cupicef.prod cupicef.prop cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R y z)
                          (H1 :
                             cupicef.Term cupicef.prop
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R y z) =>
                           R z x))))))
           (Transitive A
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H0 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R x y) =>
            H1 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R y z) =>
            (H2 :
               (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                __ : cupicef.Term cupicef.prop (R z y0) ->
                __0 : cupicef.Term cupicef.prop (R y0 z0) ->
                cupicef.Term cupicef.prop (R z z0)) =>
             (H3 :
                (z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 __ : cupicef.Term cupicef.prop (R z y) ->
                 __0 : cupicef.Term cupicef.prop (R y z0) ->
                 cupicef.Term cupicef.prop (R z z0)) =>
              (H4 :
                 (__ : cupicef.Term cupicef.prop (R z y) ->
                  __0 : cupicef.Term cupicef.prop (R y x) ->
                  cupicef.Term cupicef.prop (R z x)) =>
               (H5 :
                  (__ : cupicef.Term cupicef.prop (R y x) ->
                   cupicef.Term cupicef.prop (R z x)) =>
                (H6 : cupicef.Term cupicef.prop (R z x) => H6) (H5 H0))
                 (H4 H1))
                (H3 x))
               (H2 y))
              (PreOrder__Transitive0 z))))
     H.

thm flip__StrictOrder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (StrictOrder A R) ->
  cupicef.Term cupicef.prop
    (StrictOrder A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (StrictOrder A R) =>
   match____StrictOrder cupicef.prop A R
     (__ : cupicef.Term cupicef.prop (StrictOrder A R) =>
      StrictOrder A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R))
     (StrictOrder__Irreflexive0 : cupicef.Term cupicef.prop (Irreflexive A R) =>
      StrictOrder__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      Build__StrictOrder A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R)
        StrictOrder__Irreflexive0
        (cupicef.cast
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))))
           cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))
                    cupicef.I A
                    (z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.prod cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))
                       cupicef.I
                       (Coq__Program__Basics.flip A A
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          R x y)
                       (H0 :
                          cupicef.Term cupicef.prop
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R x y) =>
                        cupicef.prod cupicef.prop cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R y z)
                          (H1 :
                             cupicef.Term cupicef.prop
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R y z) =>
                           R z x))))))
           (Transitive A
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H0 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R x y) =>
            H1 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R y z) =>
            (H2 :
               (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                __ : cupicef.Term cupicef.prop (R z y0) ->
                __0 : cupicef.Term cupicef.prop (R y0 z0) ->
                cupicef.Term cupicef.prop (R z z0)) =>
             (H3 :
                (z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 __ : cupicef.Term cupicef.prop (R z y) ->
                 __0 : cupicef.Term cupicef.prop (R y z0) ->
                 cupicef.Term cupicef.prop (R z z0)) =>
              (H4 :
                 (__ : cupicef.Term cupicef.prop (R z y) ->
                  __0 : cupicef.Term cupicef.prop (R y x) ->
                  cupicef.Term cupicef.prop (R z x)) =>
               (H5 :
                  (__ : cupicef.Term cupicef.prop (R y x) ->
                   cupicef.Term cupicef.prop (R z x)) =>
                (H6 : cupicef.Term cupicef.prop (R z x) => H6) (H5 H0))
                 (H4 H1))
                (H3 x))
               (H2 y))
              (StrictOrder__Transitive0 z))))
     H.

thm flip__PER :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (PER A R) ->
  cupicef.Term cupicef.prop
    (PER A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (PER A R) =>
   match____PER cupicef.prop A R
     (__ : cupicef.Term cupicef.prop (PER A R) =>
      PER A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R))
     (PER__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) =>
      PER__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      Build__PER A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R)
        (cupicef.cast
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       R x y)
                    (H0 :
                       cupicef.Term cupicef.prop
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R x y) =>
                     R x y))))
           (Symmetric A
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H0 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R x y) =>
            (H1 :
               (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                __ : cupicef.Term cupicef.prop (R y y0) ->
                __0 : cupicef.Term cupicef.prop (R y0 z) ->
                cupicef.Term cupicef.prop (R y z)) =>
             (H2 :
                (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 __ : cupicef.Term cupicef.prop (R y y0) ->
                 cupicef.Term cupicef.prop (R y0 y)) =>
              (H3 :
                 (__ : cupicef.Term cupicef.prop (R y x) ->
                  cupicef.Term cupicef.prop (R x y)) =>
               (H4 : cupicef.Term cupicef.prop (R x y) => H4) (H3 H0)) (
                H2 x))
               (PER__Symmetric0 y))
              (PER__Transitive0 y)))
        (cupicef.cast
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))))
           cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))
                    cupicef.I A
                    (z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.prod cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))
                       cupicef.I
                       (Coq__Program__Basics.flip A A
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          R x y)
                       (H0 :
                          cupicef.Term cupicef.prop
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R x y) =>
                        cupicef.prod cupicef.prop cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R y z)
                          (H1 :
                             cupicef.Term cupicef.prop
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R y z) =>
                           R z x))))))
           (Transitive A
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H0 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R x y) =>
            H1 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R y z) =>
            (H2 :
               (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                __ : cupicef.Term cupicef.prop (R z y0) ->
                __0 : cupicef.Term cupicef.prop (R y0 z0) ->
                cupicef.Term cupicef.prop (R z z0)) =>
             (H3 :
                (z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 __ : cupicef.Term cupicef.prop (R z y) ->
                 __0 : cupicef.Term cupicef.prop (R y z0) ->
                 cupicef.Term cupicef.prop (R z z0)) =>
              (H4 :
                 (__ : cupicef.Term cupicef.prop (R z y) ->
                  __0 : cupicef.Term cupicef.prop (R y x) ->
                  cupicef.Term cupicef.prop (R z x)) =>
               (H5 :
                  (__ : cupicef.Term cupicef.prop (R y x) ->
                   cupicef.Term cupicef.prop (R z x)) =>
                (H6 : cupicef.Term cupicef.prop (R z x) => H6) (H5 H0))
                 (H4 H1))
                (H3 x))
               (H2 y))
              (PER__Transitive0 z))))
     H.

thm flip__Equivalence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Equivalence A R) ->
  cupicef.Term cupicef.prop
    (Equivalence A
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Equivalence A R) =>
   match____Equivalence cupicef.prop A R
     (__ : cupicef.Term cupicef.prop (Equivalence A R) =>
      Equivalence A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R))
     (Equivalence__Reflexive0 : cupicef.Term cupicef.prop (Reflexive A R) =>
      Equivalence__Symmetric0 : cupicef.Term cupicef.prop (Symmetric A R) =>
      Equivalence__Transitive0 : cupicef.Term cupicef.prop (Transitive A R) =>
      Build__Equivalence A
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R)
        Equivalence__Reflexive0
        (cupicef.cast
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       R x y)
                    (H0 :
                       cupicef.Term cupicef.prop
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R x y) =>
                     R x y))))
           (Symmetric A
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H0 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R x y) =>
            (H1 :
               (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                __ : cupicef.Term cupicef.prop (R y y0) ->
                __0 : cupicef.Term cupicef.prop (R y0 z) ->
                cupicef.Term cupicef.prop (R y z)) =>
             (H2 :
                (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 __ : cupicef.Term cupicef.prop (R y y0) ->
                 cupicef.Term cupicef.prop (R y0 y)) =>
              (H3 :
                 (__ : cupicef.Term cupicef.prop (R y x) ->
                  cupicef.Term cupicef.prop (R x y)) =>
               (H4 : cupicef.Term cupicef.prop (R x y) => H4) (H3 H0)) (
                H2 x))
               (Equivalence__Symmetric0 y))
              (Equivalence__Transitive0 y)))
        (cupicef.cast
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))))
           cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop)))
                    cupicef.I A
                    (z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     cupicef.prod cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)
                       (cupicef.rule cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop))
                       cupicef.I
                       (Coq__Program__Basics.flip A A
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          R x y)
                       (H0 :
                          cupicef.Term cupicef.prop
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R x y) =>
                        cupicef.prod cupicef.prop cupicef.prop
                          (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R y z)
                          (H1 :
                             cupicef.Term cupicef.prop
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R y z) =>
                           R z x))))))
           (Transitive A
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R))
           cupicef.I
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H0 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R x y) =>
            H1 :
              cupicef.Term cupicef.prop
                (Coq__Program__Basics.flip A A
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                   R y z) =>
            (H2 :
               (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                __ : cupicef.Term cupicef.prop (R z y0) ->
                __0 : cupicef.Term cupicef.prop (R y0 z0) ->
                cupicef.Term cupicef.prop (R z z0)) =>
             (H3 :
                (z0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 __ : cupicef.Term cupicef.prop (R z y) ->
                 __0 : cupicef.Term cupicef.prop (R y z0) ->
                 cupicef.Term cupicef.prop (R z z0)) =>
              (H4 :
                 (__ : cupicef.Term cupicef.prop (R z y) ->
                  __0 : cupicef.Term cupicef.prop (R y x) ->
                  cupicef.Term cupicef.prop (R z x)) =>
               (H5 :
                  (__ : cupicef.Term cupicef.prop (R y x) ->
                   cupicef.Term cupicef.prop (R z x)) =>
                (H6 : cupicef.Term cupicef.prop (R z x) => H6) (H5 H0))
                 (H4 H1))
                (H3 x))
               (H2 y))
              (Equivalence__Transitive0 z))))
     H.

thm complement__Irreflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Reflexive A R) ->
  cupicef.Term cupicef.prop (Irreflexive A (complement A R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Reflexive A R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
     cupicef.prop
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         complement A (complement A R) x x))
     (Irreflexive A (complement A R)) cupicef.I
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.cast (cupicef.rule cupicef.prop cupicef.prop) cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
           (complement A R x x)
           (H0 : cupicef.Term cupicef.prop (complement A R x x) =>
            Coq__Init__Logic.False))
        (complement A (complement A R) x x) cupicef.I
        (H0 : cupicef.Term cupicef.prop (complement A R x x) =>
         (H1 : cupicef.Term cupicef.prop (R x x) =>
          (H2 : cupicef.Term cupicef.prop Coq__Init__Logic.False => H2)
            (H0 H1))
           (H x))).

thm complement__Symmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Symmetric A R) ->
  cupicef.Term cupicef.prop (Symmetric A (complement A R))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Symmetric A R) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)))
     cupicef.prop
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I A
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (complement A R x y)
              (H0 : cupicef.Term cupicef.prop (complement A R x y) =>
               complement A R y x))))
     (Symmetric A (complement A R)) cupicef.I
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      H0 : cupicef.Term cupicef.prop (complement A R x y) =>
      cupicef.cast (cupicef.rule cupicef.prop cupicef.prop) cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (R y x)
           (H1 : cupicef.Term cupicef.prop (R y x) => Coq__Init__Logic.False))
        (complement A R y x) cupicef.I
        (H1 : cupicef.Term cupicef.prop (R y x) =>
         (H2 :
            (y0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
             __ : cupicef.Term cupicef.prop (R y y0) ->
             cupicef.Term cupicef.prop (R y0 y)) =>
          (H3 :
             (__ : cupicef.Term cupicef.prop (R y y) ->
              cupicef.Term cupicef.prop (R y y)) =>
           (H4 :
              (__ : cupicef.Term cupicef.prop (R y x) ->
               cupicef.Term cupicef.prop (R x y)) =>
            (H5 : cupicef.Term cupicef.prop (R x y) =>
             (H6 : cupicef.Term cupicef.prop Coq__Init__Logic.False => H6)
               (H0 H5))
              (H4 H1))
             (H2 x))
            (H2 y))
           (H y))).

def RewriteRelation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  RA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop.

#TYPE_CLASS RewriteRelation.

def Build__RewriteRelation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  RA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Term cupicef.prop (RewriteRelation A RA).

[ ] cupicef.code_guarded? _ (Build__RewriteRelation _ _) --> cupicef.guarded.

def match____RewriteRelation :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  RA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P : (cupicef.Term cupicef.prop (RewriteRelation A RA) -> cupicef.Univ s) ->
  case__Build__RewriteRelation :
    cupicef.Term s (P (Build__RewriteRelation A RA)) ->
  x : cupicef.Term cupicef.prop (RewriteRelation A RA) ->
  cupicef.Term s (P x).

[ s, A, RA, P, case__Build__RewriteRelation]
  match____RewriteRelation s A RA P case__Build__RewriteRelation
    (Build__RewriteRelation A RA)
  -->
  case__Build__RewriteRelation.

[ s, A, RA, P, s']
  match____RewriteRelation s A RA
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____RewriteRelation s' A RA (x => P x).

def equivalence__rewrite__relation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  H : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  cupicef.Term cupicef.prop (RewriteRelation A eqA)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   H : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   Build__RewriteRelation A eqA.

#TYPE_CLASS_INSTANCE equivalence__rewrite__relation.

def eq__Reflexive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (Reflexive A
       (Coq__Init__Logic.eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   Coq__Init__Logic.eq__refl
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A).

#TYPE_CLASS_INSTANCE eq__Reflexive.

def eq__Symmetric :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (Symmetric A
       (Coq__Init__Logic.eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   Coq__Init__Logic.eq__sym
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A).

#TYPE_CLASS_INSTANCE eq__Symmetric.

def eq__Transitive :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (Transitive A
       (Coq__Init__Logic.eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   Coq__Init__Logic.eq__trans
     (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           cupicef.I)
        cupicef.I A).

#TYPE_CLASS_INSTANCE eq__Transitive.

def eq__equivalence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (Equivalence A
       (Coq__Init__Logic.eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   Build__Equivalence A
     (Coq__Init__Logic.eq
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A))
     (eq__Reflexive A) (eq__Symmetric A) (eq__Transitive A).

#TYPE_CLASS_INSTANCE eq__equivalence.

def RewriteRelation__instance__0 :
  cupicef.Term cupicef.prop
    (RewriteRelation
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       Coq__Program__Basics.impl)

:= Build__RewriteRelation
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I))
     Coq__Program__Basics.impl.

#TYPE_CLASS_INSTANCE RewriteRelation__instance__0.

def RewriteRelation__instance__1 :
  cupicef.Term cupicef.prop
    (RewriteRelation
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       Coq__Init__Logic.iff)

:= Build__RewriteRelation
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I))
     Coq__Init__Logic.iff.

#TYPE_CLASS_INSTANCE RewriteRelation__instance__1.

def impl__Reflexive__obligation__1 :
  x : cupicef.Univ cupicef.prop ->
  cupicef.Term cupicef.prop (Coq__Program__Basics.impl x x)

:= x : cupicef.Univ cupicef.prop => H : cupicef.Term cupicef.prop x => H.

def impl__Reflexive :
  cupicef.Term cupicef.prop
    (Reflexive
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       Coq__Program__Basics.impl)

:= x : cupicef.Univ cupicef.prop => impl__Reflexive__obligation__1 x.

#TYPE_CLASS_INSTANCE impl__Reflexive.

def impl__Transitive__obligation__1 :
  x : cupicef.Univ cupicef.prop ->
  y : cupicef.Univ cupicef.prop ->
  z : cupicef.Univ cupicef.prop ->
  H : cupicef.Term cupicef.prop (Coq__Program__Basics.impl x y) ->
  H0 : cupicef.Term cupicef.prop (Coq__Program__Basics.impl y z) ->
  cupicef.Term cupicef.prop (Coq__Program__Basics.impl x z)

:= x : cupicef.Univ cupicef.prop =>
   y : cupicef.Univ cupicef.prop =>
   z : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (Coq__Program__Basics.impl x y) =>
   H0 : cupicef.Term cupicef.prop (Coq__Program__Basics.impl y z) =>
   H1 : cupicef.Term cupicef.prop x =>
   H0 (H H1).

def impl__Transitive :
  cupicef.Term cupicef.prop
    (Transitive
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       Coq__Program__Basics.impl)

:= x : cupicef.Univ cupicef.prop =>
   y : cupicef.Univ cupicef.prop =>
   z : cupicef.Univ cupicef.prop =>
   H : cupicef.Term cupicef.prop (Coq__Program__Basics.impl x y) =>
   H0 : cupicef.Term cupicef.prop (Coq__Program__Basics.impl y z) =>
   impl__Transitive__obligation__1 x y z H H0.

#TYPE_CLASS_INSTANCE impl__Transitive.

def iff__Reflexive :
  cupicef.Term cupicef.prop
    (Reflexive
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       Coq__Init__Logic.iff)

:= Coq__Init__Logic.iff__refl.

#TYPE_CLASS_INSTANCE iff__Reflexive.

def iff__Symmetric :
  cupicef.Term cupicef.prop
    (Symmetric
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       Coq__Init__Logic.iff)

:= Coq__Init__Logic.iff__sym.

#TYPE_CLASS_INSTANCE iff__Symmetric.

def iff__Transitive :
  cupicef.Term cupicef.prop
    (Transitive
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       Coq__Init__Logic.iff)

:= Coq__Init__Logic.iff__trans.

#TYPE_CLASS_INSTANCE iff__Transitive.

def iff__equivalence :
  cupicef.Term cupicef.prop
    (Equivalence
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I))
       Coq__Init__Logic.iff)

:= Build__Equivalence
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I))
     Coq__Init__Logic.iff iff__Reflexive iff__Symmetric iff__Transitive.

#TYPE_CLASS_INSTANCE iff__equivalence.

def Tlist :
  cupicef.Univ
    (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
       cupicef.set).

Tlist' :
  cupicef.Univ cupicef.sinf.

[ ]
  cupicef.code (cupicef.cU _) Tlist
  -->
  Tlist'.

def Tnil :
  cupicef.Term
    (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
       cupicef.set)
    Tlist.

def Tcons :
  __ : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  __0 :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term
    (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
       cupicef.set)
    Tlist.

[ ] cupicef.code_guarded? _ Tnil --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (Tcons _ _) --> cupicef.guarded.

def match____Tlist :
  s : cupicef.Sort ->
  P :
    (cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist ->
     cupicef.Univ s) ->
  case__Tnil : cupicef.Term s (P Tnil) ->
  case__Tcons :
    (__ : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
     __0 :
       cupicef.Term
         (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            cupicef.set)
         Tlist ->
     cupicef.Term s (P (Tcons __ __0))) ->
  x :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term s (P x).

[ s, P, case__Tnil, case__Tcons]
  match____Tlist s P case__Tnil case__Tcons Tnil
  -->
  case__Tnil.

[ s, P, case__Tnil, case__Tcons, __, __0]
  match____Tlist s P case__Tnil case__Tcons (Tcons __ __0)
  -->
  case__Tcons __ __0.

[ s, P, s']
  match____Tlist s
    (x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P x)))
  -->
  match____Tlist s' (x => P x).

def Tlist__rect :
  P :
    (t :
       cupicef.Term
         (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            cupicef.set)
         Tlist ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  f : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P Tnil) ->
  f0 :
    (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
     t :
       cupicef.Term
         (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            cupicef.set)
         Tlist ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P t) ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P (Tcons T t))) ->
  t :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P t)

:= P :
     (t :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   f : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P Tnil) =>
   f0 :
     (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
      t :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P t) ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (P (Tcons T t))) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.0
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set))
           (cupicef.prod
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I Tlist
              (t :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               P t))))
     (c =>
      c
        (F =>
         t :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         match____Tlist (cupicef.type (cupicef.s cupicef.z))
           (t0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            P t0)
           f
           (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            t0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            f0 T t0 (F t0))
           t))
     cupicef.0.

def Tlist__ind :
  P :
    (t :
       cupicef.Term
         (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            cupicef.set)
         Tlist ->
     cupicef.Univ cupicef.prop) ->
  f : cupicef.Term cupicef.prop (P Tnil) ->
  f0 :
    (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
     t :
       cupicef.Term
         (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            cupicef.set)
         Tlist ->
     __ : cupicef.Term cupicef.prop (P t) ->
     cupicef.Term cupicef.prop (P (Tcons T t))) ->
  t :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.prop (P t)

:= P :
     (t :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist ->
      cupicef.Univ cupicef.prop) =>
   f : cupicef.Term cupicef.prop (P Tnil) =>
   f0 :
     (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
      t :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist ->
      __ : cupicef.Term cupicef.prop (P t) ->
      cupicef.Term cupicef.prop (P (Tcons T t))) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.0 cupicef.prop
           (cupicef.prod
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              cupicef.prop
              (cupicef.rule
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 cupicef.prop)
              cupicef.I Tlist
              (t :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               P t))))
     (c =>
      c
        (F =>
         t :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         match____Tlist cupicef.prop
           (t0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            P t0)
           f
           (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            t0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            f0 T t0 (F t0))
           t))
     cupicef.0.

def Tlist__rec :
  P :
    (t :
       cupicef.Term
         (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            cupicef.set)
         Tlist ->
     cupicef.Univ cupicef.set) ->
  f : cupicef.Term cupicef.set (P Tnil) ->
  f0 :
    (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
     t :
       cupicef.Term
         (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            cupicef.set)
         Tlist ->
     __ : cupicef.Term cupicef.set (P t) ->
     cupicef.Term cupicef.set (P (Tcons T t))) ->
  t :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.set (P t)

:= P :
     (t :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist ->
      cupicef.Univ cupicef.set) =>
   Tlist__rect
     (cupicef.cast
        (cupicef.rule
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.rule
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
        (cupicef.prod
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              (cupicef.type (cupicef.s cupicef.z)))
           cupicef.I Tlist
           (t :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I))
        (cupicef.prod
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.rule
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
           cupicef.I Tlist
           (t :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I))
        cupicef.I P).

def arrows :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  r : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Univ (cupicef.type (cupicef.s cupicef.z))

:= cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.0
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)))
           (cupicef.prod
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              (cupicef.rule
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.rule
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 (cupicef.rule
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))))
              cupicef.I Tlist
              (l :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               cupicef.prod
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (r : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                  cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)))))
     (c =>
      c
        (arrows0 =>
         l :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         r : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
         match____Tlist (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (l0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           r
           (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            l_27_ :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I A
              (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               arrows0 l_27_ r))
           l))
     cupicef.0.

def unary__operation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Univ (cupicef.type (cupicef.s cupicef.z))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   arrows (Tcons A Tnil) A.

def binary__operation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Univ (cupicef.type (cupicef.s cupicef.z))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   arrows (Tcons A (Tcons A Tnil)) A.

def ternary__operation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Univ (cupicef.type (cupicef.s cupicef.z))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   arrows (Tcons A (Tcons A (Tcons A Tnil))) A.

def unary__predicate :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Univ (cupicef.type (cupicef.s cupicef.z))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   arrows (Tcons A Tnil)
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)).

def binary__relation :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Univ (cupicef.type (cupicef.s cupicef.z))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   arrows (Tcons A (Tcons A Tnil))
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)).

def predicate__all :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  __ :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows l
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  cupicef.Univ cupicef.prop

:= cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.0
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))))
           (cupicef.prod
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z))))
              cupicef.I Tlist
              (l :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I
                 (arrows l
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                 (__ :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (arrows l
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))))
     (c =>
      c
        (predicate__all0 =>
         l :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         match____Tlist
           (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           (l0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I
              (arrows l0
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
              (__ :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (arrows l0
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           (f :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows Tnil
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            f)
           (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            tl :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            f :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows (Tcons A tl)
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               predicate__all0 tl (f x)))
           l))
     cupicef.0.

def predicate__exists :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  __ :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows l
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  cupicef.Univ cupicef.prop

:= cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.0
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))))
           (cupicef.prod
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z))))
              cupicef.I Tlist
              (l :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I
                 (arrows l
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                 (__ :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (arrows l
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                  cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))))
     (c =>
      c
        (predicate__exists0 =>
         l :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         match____Tlist
           (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           (l0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I
              (arrows l0
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
              (__ :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (arrows l0
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           (f :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows Tnil
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            f)
           (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            tl :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            f :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows (Tcons A tl)
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            Coq__Init__Logic.ex A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               predicate__exists0 tl (f x)))
           l))
     cupicef.0.

def pointwise__extension :
  T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  op :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (binary__operation T) ->
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z))
    (binary__operation (arrows l T))

:= cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.2
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)))
           (cupicef.prod (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.set)
                    (cupicef.type (cupicef.s cupicef.z))))
              (cupicef.rule
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z)))))
              cupicef.I
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.set)
                    (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z))))
                 cupicef.I (binary__operation T)
                 (op :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (binary__operation T) =>
                  cupicef.prod
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.set)
                    (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I Tlist
                    (l :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     binary__operation (arrows l T)))))))
     (c =>
      c
        (pointwise__extension0 =>
         T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
         op :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (binary__operation T) =>
         l :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         match____Tlist (cupicef.type (cupicef.s cupicef.z))
           (l0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            binary__operation (arrows l0 T))
           (R :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows Tnil T) =>
            R_27_ :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows Tnil T) =>
            op R R_27_)
           (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            tl :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            R :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows (Tcons A tl) T) =>
            R_27_ :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows (Tcons A tl) T) =>
            x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            pointwise__extension0 T op tl (R x) (R_27_ x))
           l))
     cupicef.0.

def pointwise__lifting :
  op :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (binary__relation
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z))
    (binary__relation
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))))

:= cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.1
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set))
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.set)
                    (cupicef.type (cupicef.s cupicef.z))))
              cupicef.I
              (binary__relation
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
              (op :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (binary__relation
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               cupicef.prod
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.set)
                    (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I Tlist
                 (l :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  binary__relation
                    (arrows l
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))))))
     (c =>
      c
        (pointwise__lifting0 =>
         op :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (binary__relation
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
         l :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         match____Tlist (cupicef.type (cupicef.s cupicef.z))
           (l0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            binary__relation
              (arrows l0
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
           (R :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows Tnil
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            R_27_ :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows Tnil
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            op R R_27_)
           (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            tl :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            R :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows (Tcons A tl)
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            R_27_ :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows (Tcons A tl)
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               pointwise__lifting0 op tl (R x) (R_27_ x)))
           l))
     cupicef.0.

def predicate__equivalence :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z))
    (binary__relation
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   pointwise__lifting Coq__Init__Logic.iff l.

def predicate__implication :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z))
    (binary__relation
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   pointwise__lifting Coq__Program__Basics.impl l.

def predicate__intersection :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z))
    (binary__operation
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))))

:= pointwise__extension
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I))
     Coq__Init__Logic.and.

def predicate__union :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z))
    (binary__operation
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))))

:= pointwise__extension
     (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I
        (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
           cupicef.I))
     Coq__Init__Logic.or.

def true__predicate :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z))
    (arrows l
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)))

:= cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.0
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set))
           (cupicef.prod
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I Tlist
              (l :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               arrows l
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))))
     (c =>
      c
        (true__predicate0 =>
         l :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         match____Tlist (cupicef.type (cupicef.s cupicef.z))
           (l0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            arrows l0
              (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
           Coq__Init__Logic.True
           (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            tl :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            true__predicate0 tl)
           l))
     cupicef.0.

def false__predicate :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z))
    (arrows l
       (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I
          (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)))

:= cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.0
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set))
           (cupicef.prod
              (cupicef.sup
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.set)
              (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.set)
                 (cupicef.type (cupicef.s cupicef.z)))
              cupicef.I Tlist
              (l :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               arrows l
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))))
     (c =>
      c
        (false__predicate0 =>
         l :
           cupicef.Term
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.set)
             Tlist =>
         match____Tlist (cupicef.type (cupicef.s cupicef.z))
           (l0 :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            arrows l0
              (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
           Coq__Init__Logic.False
           (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
            tl :
              cupicef.Term
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.set)
                Tlist =>
            __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            false__predicate0 tl)
           l))
     cupicef.0.

thm predicate__equivalence__equivalence__obligation__1 :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.prop
    (Reflexive
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)))
       (predicate__equivalence l))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   x :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   Tlist__ind
     (l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        cupicef.I
        (arrows l0
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
         cupicef.fixproj cupicef.1
           (c =>
            c
              (cupicef.SA cupicef.1
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                       cupicef.set))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I
                    (binary__relation
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                    (op :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                         (binary__relation
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))) =>
                     cupicef.prod
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I Tlist
                       (l1 :
                          cupicef.Term
                            (cupicef.sup
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.set)
                            Tlist =>
                        binary__relation
                          (arrows l1
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))))))))
           (c =>
            c
              (pointwise__lifting0 =>
               op :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (binary__relation
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               l1 :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               match____Tlist (cupicef.type (cupicef.s cupicef.z))
                 (l2 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  binary__relation
                    (arrows l2
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
                 (R : cupicef.Univ cupicef.prop =>
                  R_27_ : cupicef.Univ cupicef.prop =>
                  op R R_27_)
                 (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                  tl :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  R :
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                       (arrows tl
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))) =>
                  R_27_ :
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                       (arrows tl
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))) =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop)
                    cupicef.I A
                    (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                 l1))
           cupicef.0 Coq__Init__Logic.iff l0 x0 x0))
     (x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      Coq__Init__Logic.conj
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I x0
           (__ : cupicef.Term cupicef.prop x0 => x0))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I x0
           (__ : cupicef.Term cupicef.prop x0 => x0))
        (H : cupicef.Term cupicef.prop x0 => H)
        (H : cupicef.Term cupicef.prop x0 => H))
     (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
      l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      IHl :
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         cupicef.Term cupicef.prop
           (cupicef.fixproj cupicef.1
              (c =>
               c
                 (cupicef.SA cupicef.1
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                          cupicef.set))
                    (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z))))
                       cupicef.I
                       (binary__relation
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))
                       (op :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                            (binary__relation
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))) =>
                        cupicef.prod
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I Tlist
                          (l1 :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           binary__relation
                             (arrows l1
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))))))))
              (c =>
               c
                 (pointwise__lifting0 =>
                  op :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (binary__relation
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                  l1 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  match____Tlist (cupicef.type (cupicef.s cupicef.z))
                    (l2 :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     binary__relation
                       (arrows l2
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))))
                    (R : cupicef.Univ cupicef.prop =>
                     R_27_ : cupicef.Univ cupicef.prop =>
                     op R R_27_)
                    (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                     tl :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     R :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     R_27_ :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop)
                       cupicef.I A
                       (x1 :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                    l1))
              cupicef.0 Coq__Init__Logic.iff l0 x0 x0)) =>
      x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T =>
      IHl (x0 x1))
     l x.

thm predicate__equivalence__equivalence__obligation__2 :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.prop
    (Symmetric
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)))
       (predicate__equivalence l))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   x :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   y :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   H : cupicef.Term cupicef.prop (predicate__equivalence l x y) =>
   Tlist__ind
     (l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.I
        (arrows l0
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop cupicef.prop)
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           cupicef.I
           (arrows l0
              (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
           (y0 :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows l0
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (predicate__equivalence l0 x0 y0)
              (H0 :
                 cupicef.Term cupicef.prop (predicate__equivalence l0 x0 y0) =>
               cupicef.fixproj cupicef.1
                 (c =>
                  c
                    (cupicef.SA cupicef.1
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                             cupicef.set))
                       (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.sup
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.set)
                                (cupicef.type (cupicef.s cupicef.z))))
                          cupicef.I
                          (binary__relation
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))
                          (op :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z))
                               (binary__relation
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))) =>
                           cupicef.prod
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.sup
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.set)
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I Tlist
                             (l1 :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              binary__relation
                                (arrows l1
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))))))))
                 (c =>
                  c
                    (pointwise__lifting0 =>
                     op :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                         (binary__relation
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))) =>
                     l1 :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     match____Tlist (cupicef.type (cupicef.s cupicef.z))
                       (l2 :
                          cupicef.Term
                            (cupicef.sup
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.set)
                            Tlist =>
                        binary__relation
                          (arrows l2
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))))
                       (R : cupicef.Univ cupicef.prop =>
                        R_27_ : cupicef.Univ cupicef.prop =>
                        op R R_27_)
                       (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                        tl :
                          cupicef.Term
                            (cupicef.sup
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.set)
                            Tlist =>
                        R :
                          (__ :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A ->
                           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                             (arrows tl
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I)))) =>
                        R_27_ :
                          (__ :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A ->
                           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                             (arrows tl
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I)))) =>
                        cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             cupicef.prop)
                          cupicef.I A
                          (x1 :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                       l1))
                 cupicef.0 Coq__Init__Logic.iff l0 y0 x0))))
     (x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      y0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      H0 : cupicef.Term cupicef.prop (predicate__equivalence Tnil x0 y0) =>
      Coq__Init__Logic.and__ind
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I x0
           (__ : cupicef.Term cupicef.prop x0 => y0))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I y0
           (__ : cupicef.Term cupicef.prop y0 => x0))
        (Coq__Init__Logic.iff y0 x0)
        (H1 :
           (__ : cupicef.Term cupicef.prop x0 -> cupicef.Term cupicef.prop y0) =>
         H2 :
           (__ : cupicef.Term cupicef.prop y0 -> cupicef.Term cupicef.prop x0) =>
         Coq__Init__Logic.conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I y0
              (__ : cupicef.Term cupicef.prop y0 => x0))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I x0
              (__ : cupicef.Term cupicef.prop x0 => y0))
           H2 H1)
        H0)
     (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
      l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      IHl :
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         y0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         H0 : cupicef.Term cupicef.prop (predicate__equivalence l0 x0 y0) ->
         cupicef.Term cupicef.prop
           (cupicef.fixproj cupicef.1
              (c =>
               c
                 (cupicef.SA cupicef.1
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                          cupicef.set))
                    (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z))))
                       cupicef.I
                       (binary__relation
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))
                       (op :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                            (binary__relation
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))) =>
                        cupicef.prod
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I Tlist
                          (l1 :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           binary__relation
                             (arrows l1
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))))))))
              (c =>
               c
                 (pointwise__lifting0 =>
                  op :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (binary__relation
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                  l1 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  match____Tlist (cupicef.type (cupicef.s cupicef.z))
                    (l2 :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     binary__relation
                       (arrows l2
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))))
                    (R : cupicef.Univ cupicef.prop =>
                     R_27_ : cupicef.Univ cupicef.prop =>
                     op R R_27_)
                    (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                     tl :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     R :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     R_27_ :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop)
                       cupicef.I A
                       (x1 :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                    l1))
              cupicef.0 Coq__Init__Logic.iff l0 y0 x0)) =>
      x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      y0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      H0 :
        cupicef.Term cupicef.prop (predicate__equivalence (Tcons T l0) x0 y0) =>
      x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T =>
      IHl (x0 x1) (y0 x1) (H0 x1))
     l x y H.

def let__p :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  x :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows l
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  y :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows l
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  z :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows l
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  H : cupicef.Term cupicef.prop (predicate__equivalence l x y) ->
  H0 : cupicef.Term cupicef.prop (predicate__equivalence l y z) ->
  T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  l0 :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  IHl :
    (x0 :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (arrows l0
            (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
     y0 :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (arrows l0
            (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
     z0 :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (arrows l0
            (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
     H1 : cupicef.Term cupicef.prop (predicate__equivalence l0 x0 y0) ->
     H2 : cupicef.Term cupicef.prop (predicate__equivalence l0 y0 z0) ->
     cupicef.Term cupicef.prop
       (cupicef.fixproj cupicef.1
          (c =>
           c
             (cupicef.SA cupicef.1
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                      cupicef.set))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         (cupicef.type (cupicef.s cupicef.z))))
                   cupicef.I
                   (binary__relation
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                   (op :
                      cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                        (binary__relation
                           (cupicef.cast
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              (cupicef.univ
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z)))
                                 cupicef.I)
                              (cupicef.univ
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 cupicef.I)
                              cupicef.I
                              (cupicef.univ cupicef.prop
                                 (cupicef.type (cupicef.s cupicef.z))
                                 cupicef.I))) =>
                    cupicef.prod
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I Tlist
                      (l1 :
                         cupicef.Term
                           (cupicef.sup
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              cupicef.set)
                           Tlist =>
                       binary__relation
                         (arrows l1
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))))))))
          (c =>
           c
             (pointwise__lifting0 =>
              op :
                cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                  (binary__relation
                     (cupicef.cast
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                           cupicef.I)
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.I)
                        cupicef.I
                        (cupicef.univ cupicef.prop
                           (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
              l1 :
                cupicef.Term
                  (cupicef.sup
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.set)
                  Tlist =>
              match____Tlist (cupicef.type (cupicef.s cupicef.z))
                (l2 :
                   cupicef.Term
                     (cupicef.sup
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.set)
                     Tlist =>
                 binary__relation
                   (arrows l2
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
                (R : cupicef.Univ cupicef.prop =>
                 R_27_ : cupicef.Univ cupicef.prop =>
                 op R R_27_)
                (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                 tl :
                   cupicef.Term
                     (cupicef.sup
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.set)
                     Tlist =>
                 R :
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (arrows tl
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))) =>
                 R_27_ :
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (arrows tl
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))) =>
                 cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   cupicef.prop
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      cupicef.prop)
                   cupicef.I A
                   (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                l1))
          cupicef.0 Coq__Init__Logic.iff l0 x0 z0)) ->
  x0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows (Tcons T l0)
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  y0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows (Tcons T l0)
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  z0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows (Tcons T l0)
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  H1 : cupicef.Term cupicef.prop (predicate__equivalence (Tcons T l0) x0 y0) ->
  H2 : cupicef.Term cupicef.prop (predicate__equivalence (Tcons T l0) y0 z0) ->
  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T ->
  H3 : cupicef.Term cupicef.prop (predicate__equivalence l0 (x0 x1) (y0 x1)) ->
  H4 : cupicef.Term cupicef.prop (predicate__equivalence l0 (y0 x1) (z0 x1)) ->
  cupicef.Term cupicef.prop
    (cupicef.fixproj cupicef.1
       (c =>
        c
          (cupicef.SA cupicef.1
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set))
             (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      (cupicef.type (cupicef.s cupicef.z))))
                cupicef.I
                (binary__relation
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                (op :
                   cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                     (binary__relation
                        (cupicef.cast
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                              cupicef.I)
                           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              cupicef.I)
                           cupicef.I
                           (cupicef.univ cupicef.prop
                              (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                 cupicef.prod
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I Tlist
                   (l1 :
                      cupicef.Term
                        (cupicef.sup
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.set)
                        Tlist =>
                    binary__relation
                      (arrows l1
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))))))
       (c =>
        c
          (pointwise__lifting0 =>
           op :
             cupicef.Term (cupicef.type (cupicef.s cupicef.z))
               (binary__relation
                  (cupicef.cast
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                        cupicef.I)
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     cupicef.I
                     (cupicef.univ cupicef.prop
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
           l1 :
             cupicef.Term
               (cupicef.sup
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.set)
               Tlist =>
           match____Tlist (cupicef.type (cupicef.s cupicef.z))
             (l2 :
                cupicef.Term
                  (cupicef.sup
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.set)
                  Tlist =>
              binary__relation
                (arrows l2
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
             (R : cupicef.Univ cupicef.prop =>
              R_27_ : cupicef.Univ cupicef.prop =>
              op R R_27_)
             (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
              tl :
                cupicef.Term
                  (cupicef.sup
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.set)
                  Tlist =>
              R :
                (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (arrows tl
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))) =>
              R_27_ :
                (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (arrows tl
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))) =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   cupicef.prop)
                cupicef.I A
                (x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 pointwise__lifting0 op tl (R x2) (R_27_ x2)))
             l1))
       cupicef.0 Coq__Init__Logic.iff l0 (x0 x1) (z0 x1))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   x :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   y :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   z :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   H : cupicef.Term cupicef.prop (predicate__equivalence l x y) =>
   H0 : cupicef.Term cupicef.prop (predicate__equivalence l y z) =>
   T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   l0 :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   IHl :
     (x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows l0
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
      y0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows l0
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
      z0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows l0
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
      H1 : cupicef.Term cupicef.prop (predicate__equivalence l0 x0 y0) ->
      H2 : cupicef.Term cupicef.prop (predicate__equivalence l0 y0 z0) ->
      cupicef.Term cupicef.prop
        (cupicef.fixproj cupicef.1
           (c =>
            c
              (cupicef.SA cupicef.1
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                       cupicef.set))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I
                    (binary__relation
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                    (op :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                         (binary__relation
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))) =>
                     cupicef.prod
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I Tlist
                       (l1 :
                          cupicef.Term
                            (cupicef.sup
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.set)
                            Tlist =>
                        binary__relation
                          (arrows l1
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))))))))
           (c =>
            c
              (pointwise__lifting0 =>
               op :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (binary__relation
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               l1 :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               match____Tlist (cupicef.type (cupicef.s cupicef.z))
                 (l2 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  binary__relation
                    (arrows l2
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
                 (R : cupicef.Univ cupicef.prop =>
                  R_27_ : cupicef.Univ cupicef.prop =>
                  op R R_27_)
                 (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                  tl :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  R :
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                       (arrows tl
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))) =>
                  R_27_ :
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                       (arrows tl
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))) =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop)
                    cupicef.I A
                    (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                 l1))
           cupicef.0 Coq__Init__Logic.iff l0 x0 z0)) =>
   x0 :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows (Tcons T l0)
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   y0 :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows (Tcons T l0)
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   z0 :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows (Tcons T l0)
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   H1 : cupicef.Term cupicef.prop (predicate__equivalence (Tcons T l0) x0 y0) =>
   H2 : cupicef.Term cupicef.prop (predicate__equivalence (Tcons T l0) y0 z0) =>
   x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T =>
   IHl (x0 x1) (y0 x1) (z0 x1).

thm predicate__equivalence__equivalence__obligation__3 :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.prop
    (Transitive
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)))
       (predicate__equivalence l))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   x :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   y :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   z :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   H : cupicef.Term cupicef.prop (predicate__equivalence l x y) =>
   H0 : cupicef.Term cupicef.prop (predicate__equivalence l y z) =>
   Tlist__ind
     (l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))))
        cupicef.I
        (arrows l0
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))))
           cupicef.I
           (arrows l0
              (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
           (y0 :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows l0
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I
              (arrows l0
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
              (z0 :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (arrows l0
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               cupicef.prod cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I (predicate__equivalence l0 x0 y0)
                 (H1 :
                    cupicef.Term cupicef.prop
                      (predicate__equivalence l0 x0 y0) =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (predicate__equivalence l0 y0 z0)
                    (H2 :
                       cupicef.Term cupicef.prop
                         (predicate__equivalence l0 y0 z0) =>
                     cupicef.fixproj cupicef.1
                       (c =>
                        c
                          (cupicef.SA cupicef.1
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.sup
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.set))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z))))
                                cupicef.I
                                (binary__relation
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I)))
                                (op :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (binary__relation
                                        (cupicef.cast
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           cupicef.I
                                           (cupicef.univ cupicef.prop
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              cupicef.I))) =>
                                 cupicef.prod
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I Tlist
                                   (l1 :
                                      cupicef.Term
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        Tlist =>
                                    binary__relation
                                      (arrows l1
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))))))))
                       (c =>
                        c
                          (pointwise__lifting0 =>
                           op :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z))
                               (binary__relation
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))) =>
                           l1 :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           match____Tlist
                             (cupicef.type (cupicef.s cupicef.z))
                             (l2 :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              binary__relation
                                (arrows l2
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))))
                             (R : cupicef.Univ cupicef.prop =>
                              R_27_ : cupicef.Univ cupicef.prop =>
                              op R R_27_)
                             (A :
                                cupicef.Univ
                                  (cupicef.type (cupicef.s cupicef.z)) =>
                              tl :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              R :
                                (__ :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A ->
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows tl
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I)))) =>
                              R_27_ :
                                (__ :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A ->
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows tl
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I)))) =>
                              cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.prop
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.prop)
                                cupicef.I A
                                (x1 :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A =>
                                 pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                             l1))
                       cupicef.0 Coq__Init__Logic.iff l0 x0 z0))))))
     (x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      y0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      z0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      H1 : cupicef.Term cupicef.prop (predicate__equivalence Tnil x0 y0) =>
      H2 : cupicef.Term cupicef.prop (predicate__equivalence Tnil y0 z0) =>
      Coq__Init__Logic.and__ind
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I y0
           (__ : cupicef.Term cupicef.prop y0 => z0))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I z0
           (__ : cupicef.Term cupicef.prop z0 => y0))
        (Coq__Init__Logic.iff x0 z0)
        (H3 :
           (__ : cupicef.Term cupicef.prop y0 -> cupicef.Term cupicef.prop z0) =>
         H4 :
           (__ : cupicef.Term cupicef.prop z0 -> cupicef.Term cupicef.prop y0) =>
         Coq__Init__Logic.and__ind
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I x0
              (__ : cupicef.Term cupicef.prop x0 => y0))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I y0
              (__ : cupicef.Term cupicef.prop y0 => x0))
           (Coq__Init__Logic.iff x0 z0)
           (H5 :
              (__ : cupicef.Term cupicef.prop x0 ->
               cupicef.Term cupicef.prop y0) =>
            H6 :
              (__ : cupicef.Term cupicef.prop y0 ->
               cupicef.Term cupicef.prop x0) =>
            Coq__Init__Logic.conj
              (cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I x0
                 (__ : cupicef.Term cupicef.prop x0 => z0))
              (cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I z0
                 (__ : cupicef.Term cupicef.prop z0 => x0))
              (H7 : cupicef.Term cupicef.prop x0 => H3 (H5 H7))
              (H7 : cupicef.Term cupicef.prop z0 => H6 (H4 H7)))
           H1)
        H2)
     (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
      l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      IHl :
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         y0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         z0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         H1 : cupicef.Term cupicef.prop (predicate__equivalence l0 x0 y0) ->
         H2 : cupicef.Term cupicef.prop (predicate__equivalence l0 y0 z0) ->
         cupicef.Term cupicef.prop
           (cupicef.fixproj cupicef.1
              (c =>
               c
                 (cupicef.SA cupicef.1
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                          cupicef.set))
                    (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z))))
                       cupicef.I
                       (binary__relation
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))
                       (op :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                            (binary__relation
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))) =>
                        cupicef.prod
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I Tlist
                          (l1 :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           binary__relation
                             (arrows l1
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))))))))
              (c =>
               c
                 (pointwise__lifting0 =>
                  op :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (binary__relation
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                  l1 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  match____Tlist (cupicef.type (cupicef.s cupicef.z))
                    (l2 :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     binary__relation
                       (arrows l2
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))))
                    (R : cupicef.Univ cupicef.prop =>
                     R_27_ : cupicef.Univ cupicef.prop =>
                     op R R_27_)
                    (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                     tl :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     R :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     R_27_ :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop)
                       cupicef.I A
                       (x1 :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                    l1))
              cupicef.0 Coq__Init__Logic.iff l0 x0 z0)) =>
      x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      y0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      z0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      H1 :
        cupicef.Term cupicef.prop (predicate__equivalence (Tcons T l0) x0 y0) =>
      H2 :
        cupicef.Term cupicef.prop (predicate__equivalence (Tcons T l0) y0 z0) =>
      x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T =>
      let__p l x y z H H0 T l0 IHl x0 y0 z0 H1 H2 x1 (H1 x1) (H2 x1))
     l x y z H H0.

def predicate__equivalence__equivalence :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.prop
    (Equivalence
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)))
       (predicate__equivalence l))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   Build__Equivalence
     (arrows l
        (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cupicef.I
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)))
     (predicate__equivalence l)
     ((l0 :
         cupicef.Term
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           Tlist =>
       predicate__equivalence__equivalence__obligation__1 l0) l)
     ((l0 :
         cupicef.Term
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           Tlist =>
       predicate__equivalence__equivalence__obligation__2 l0) l)
     ((l0 :
         cupicef.Term
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           Tlist =>
       predicate__equivalence__equivalence__obligation__3 l0) l).

#TYPE_CLASS_INSTANCE predicate__equivalence__equivalence.

thm predicate__implication__preorder__obligation__1 :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.prop
    (Reflexive
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)))
       (predicate__implication l))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   x :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   Tlist__ind
     (l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        cupicef.I
        (arrows l0
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
         cupicef.fixproj cupicef.1
           (c =>
            c
              (cupicef.SA cupicef.1
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                       cupicef.set))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I
                    (binary__relation
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                    (op :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                         (binary__relation
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))) =>
                     cupicef.prod
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I Tlist
                       (l1 :
                          cupicef.Term
                            (cupicef.sup
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.set)
                            Tlist =>
                        binary__relation
                          (arrows l1
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))))))))
           (c =>
            c
              (pointwise__lifting0 =>
               op :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (binary__relation
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               l1 :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               match____Tlist (cupicef.type (cupicef.s cupicef.z))
                 (l2 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  binary__relation
                    (arrows l2
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
                 (R : cupicef.Univ cupicef.prop =>
                  R_27_ : cupicef.Univ cupicef.prop =>
                  op R R_27_)
                 (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                  tl :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  R :
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                       (arrows tl
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))) =>
                  R_27_ :
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                       (arrows tl
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))) =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop)
                    cupicef.I A
                    (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                 l1))
           cupicef.0 Coq__Program__Basics.impl l0 x0 x0))
     (x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      H : cupicef.Term cupicef.prop x0 =>
      H)
     (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
      l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      IHl :
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         cupicef.Term cupicef.prop
           (cupicef.fixproj cupicef.1
              (c =>
               c
                 (cupicef.SA cupicef.1
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                          cupicef.set))
                    (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z))))
                       cupicef.I
                       (binary__relation
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))
                       (op :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                            (binary__relation
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))) =>
                        cupicef.prod
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I Tlist
                          (l1 :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           binary__relation
                             (arrows l1
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))))))))
              (c =>
               c
                 (pointwise__lifting0 =>
                  op :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (binary__relation
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                  l1 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  match____Tlist (cupicef.type (cupicef.s cupicef.z))
                    (l2 :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     binary__relation
                       (arrows l2
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))))
                    (R : cupicef.Univ cupicef.prop =>
                     R_27_ : cupicef.Univ cupicef.prop =>
                     op R R_27_)
                    (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                     tl :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     R :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     R_27_ :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop)
                       cupicef.I A
                       (x1 :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                    l1))
              cupicef.0 Coq__Program__Basics.impl l0 x0 x0)) =>
      x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T =>
      IHl (x0 x1))
     l x.

def let__p0 :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  x :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows l
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  y :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows l
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  z :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows l
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  H : cupicef.Term cupicef.prop (predicate__implication l x y) ->
  H0 : cupicef.Term cupicef.prop (predicate__implication l y z) ->
  T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  l0 :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  IHl :
    (x0 :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (arrows l0
            (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
     y0 :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (arrows l0
            (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
     z0 :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (arrows l0
            (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I
               (cupicef.univ cupicef.prop
                  (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
     H1 : cupicef.Term cupicef.prop (predicate__implication l0 x0 y0) ->
     H2 : cupicef.Term cupicef.prop (predicate__implication l0 y0 z0) ->
     cupicef.Term cupicef.prop
       (cupicef.fixproj cupicef.1
          (c =>
           c
             (cupicef.SA cupicef.1
                (cupicef.sup
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                      cupicef.set))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         (cupicef.type (cupicef.s cupicef.z))))
                   cupicef.I
                   (binary__relation
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                   (op :
                      cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                        (binary__relation
                           (cupicef.cast
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              (cupicef.univ
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z)))
                                 cupicef.I)
                              (cupicef.univ
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 cupicef.I)
                              cupicef.I
                              (cupicef.univ cupicef.prop
                                 (cupicef.type (cupicef.s cupicef.z))
                                 cupicef.I))) =>
                    cupicef.prod
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I Tlist
                      (l1 :
                         cupicef.Term
                           (cupicef.sup
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              cupicef.set)
                           Tlist =>
                       binary__relation
                         (arrows l1
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))))))))
          (c =>
           c
             (pointwise__lifting0 =>
              op :
                cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                  (binary__relation
                     (cupicef.cast
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                           cupicef.I)
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.I)
                        cupicef.I
                        (cupicef.univ cupicef.prop
                           (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
              l1 :
                cupicef.Term
                  (cupicef.sup
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.set)
                  Tlist =>
              match____Tlist (cupicef.type (cupicef.s cupicef.z))
                (l2 :
                   cupicef.Term
                     (cupicef.sup
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.set)
                     Tlist =>
                 binary__relation
                   (arrows l2
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
                (R : cupicef.Univ cupicef.prop =>
                 R_27_ : cupicef.Univ cupicef.prop =>
                 op R R_27_)
                (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                 tl :
                   cupicef.Term
                     (cupicef.sup
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.set)
                     Tlist =>
                 R :
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (arrows tl
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))) =>
                 R_27_ :
                   (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (arrows tl
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))) =>
                 cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   cupicef.prop
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      cupicef.prop)
                   cupicef.I A
                   (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                l1))
          cupicef.0 Coq__Program__Basics.impl l0 x0 z0)) ->
  x0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows (Tcons T l0)
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  y0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows (Tcons T l0)
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  z0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (arrows (Tcons T l0)
         (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I
            (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
               cupicef.I))) ->
  H1 : cupicef.Term cupicef.prop (predicate__implication (Tcons T l0) x0 y0) ->
  H2 : cupicef.Term cupicef.prop (predicate__implication (Tcons T l0) y0 z0) ->
  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T ->
  H3 :
    cupicef.Term cupicef.prop
      (pointwise__lifting Coq__Program__Basics.impl l0 (x0 x1) (y0 x1)) ->
  H4 :
    cupicef.Term cupicef.prop
      (pointwise__lifting Coq__Program__Basics.impl l0 (y0 x1) (z0 x1)) ->
  cupicef.Term cupicef.prop
    (cupicef.fixproj cupicef.1
       (c =>
        c
          (cupicef.SA cupicef.1
             (cupicef.sup
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set))
             (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      (cupicef.type (cupicef.s cupicef.z))))
                cupicef.I
                (binary__relation
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                (op :
                   cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                     (binary__relation
                        (cupicef.cast
                           (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                              (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                              cupicef.I)
                           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                              (cupicef.axiom
                                 (cupicef.type (cupicef.s cupicef.z)))
                              cupicef.I)
                           cupicef.I
                           (cupicef.univ cupicef.prop
                              (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                 cupicef.prod
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I Tlist
                   (l1 :
                      cupicef.Term
                        (cupicef.sup
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.set)
                        Tlist =>
                    binary__relation
                      (arrows l1
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))))))
       (c =>
        c
          (pointwise__lifting0 =>
           op :
             cupicef.Term (cupicef.type (cupicef.s cupicef.z))
               (binary__relation
                  (cupicef.cast
                     (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                        cupicef.I)
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     cupicef.I
                     (cupicef.univ cupicef.prop
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
           l1 :
             cupicef.Term
               (cupicef.sup
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.set)
               Tlist =>
           match____Tlist (cupicef.type (cupicef.s cupicef.z))
             (l2 :
                cupicef.Term
                  (cupicef.sup
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.set)
                  Tlist =>
              binary__relation
                (arrows l2
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
             (R : cupicef.Univ cupicef.prop =>
              R_27_ : cupicef.Univ cupicef.prop =>
              op R R_27_)
             (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
              tl :
                cupicef.Term
                  (cupicef.sup
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.set)
                  Tlist =>
              R :
                (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (arrows tl
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))) =>
              R_27_ :
                (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (arrows tl
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))) =>
              cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   cupicef.prop)
                cupicef.I A
                (x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 pointwise__lifting0 op tl (R x2) (R_27_ x2)))
             l1))
       cupicef.0 Coq__Program__Basics.impl l0 (x0 x1) (z0 x1))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   x :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   y :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   z :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   H : cupicef.Term cupicef.prop (predicate__implication l x y) =>
   H0 : cupicef.Term cupicef.prop (predicate__implication l y z) =>
   T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   l0 :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   IHl :
     (x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows l0
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
      y0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows l0
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
      z0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows l0
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
      H1 : cupicef.Term cupicef.prop (predicate__implication l0 x0 y0) ->
      H2 : cupicef.Term cupicef.prop (predicate__implication l0 y0 z0) ->
      cupicef.Term cupicef.prop
        (cupicef.fixproj cupicef.1
           (c =>
            c
              (cupicef.SA cupicef.1
                 (cupicef.sup
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                       cupicef.set))
                 (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))))
                    cupicef.I
                    (binary__relation
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
                    (op :
                       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                         (binary__relation
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))) =>
                     cupicef.prod
                       (cupicef.sup
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.set)
                       (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I Tlist
                       (l1 :
                          cupicef.Term
                            (cupicef.sup
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.set)
                            Tlist =>
                        binary__relation
                          (arrows l1
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))))))))
           (c =>
            c
              (pointwise__lifting0 =>
               op :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (binary__relation
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               l1 :
                 cupicef.Term
                   (cupicef.sup
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.set)
                   Tlist =>
               match____Tlist (cupicef.type (cupicef.s cupicef.z))
                 (l2 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  binary__relation
                    (arrows l2
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))))
                 (R : cupicef.Univ cupicef.prop =>
                  R_27_ : cupicef.Univ cupicef.prop =>
                  op R R_27_)
                 (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                  tl :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  R :
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                       (arrows tl
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))) =>
                  R_27_ :
                    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                       (arrows tl
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))) =>
                  cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                    cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop)
                    cupicef.I A
                    (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                     pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                 l1))
           cupicef.0 Coq__Program__Basics.impl l0 x0 z0)) =>
   x0 :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows (Tcons T l0)
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   y0 :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows (Tcons T l0)
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   z0 :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows (Tcons T l0)
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   H1 : cupicef.Term cupicef.prop (predicate__implication (Tcons T l0) x0 y0) =>
   H2 : cupicef.Term cupicef.prop (predicate__implication (Tcons T l0) y0 z0) =>
   x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T =>
   IHl (x0 x1) (y0 x1) (z0 x1).

thm predicate__implication__preorder__obligation__2 :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.prop
    (Transitive
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)))
       (predicate__implication l))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   x :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   y :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   z :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))) =>
   H : cupicef.Term cupicef.prop (predicate__implication l x y) =>
   H0 : cupicef.Term cupicef.prop (predicate__implication l y z) =>
   Tlist__ind
     (l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))))
        cupicef.I
        (arrows l0
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)))
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))))
           cupicef.I
           (arrows l0
              (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I
                 (cupicef.univ cupicef.prop
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
           (y0 :
              cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                (arrows l0
                   (cupicef.cast
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I
                      (cupicef.univ cupicef.prop
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I
              (arrows l0
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)))
              (z0 :
                 cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                   (arrows l0
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
               cupicef.prod cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I (predicate__implication l0 x0 y0)
                 (H1 :
                    cupicef.Term cupicef.prop
                      (predicate__implication l0 x0 y0) =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (predicate__implication l0 y0 z0)
                    (H2 :
                       cupicef.Term cupicef.prop
                         (predicate__implication l0 y0 z0) =>
                     cupicef.fixproj cupicef.1
                       (c =>
                        c
                          (cupicef.SA cupicef.1
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.sup
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.set))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z))))
                                cupicef.I
                                (binary__relation
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I)))
                                (op :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (binary__relation
                                        (cupicef.cast
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           cupicef.I
                                           (cupicef.univ cupicef.prop
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              cupicef.I))) =>
                                 cupicef.prod
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I Tlist
                                   (l1 :
                                      cupicef.Term
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        Tlist =>
                                    binary__relation
                                      (arrows l1
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))))))))
                       (c =>
                        c
                          (pointwise__lifting0 =>
                           op :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z))
                               (binary__relation
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))) =>
                           l1 :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           match____Tlist
                             (cupicef.type (cupicef.s cupicef.z))
                             (l2 :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              binary__relation
                                (arrows l2
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))))
                             (R : cupicef.Univ cupicef.prop =>
                              R_27_ : cupicef.Univ cupicef.prop =>
                              op R R_27_)
                             (A :
                                cupicef.Univ
                                  (cupicef.type (cupicef.s cupicef.z)) =>
                              tl :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              R :
                                (__ :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A ->
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows tl
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I)))) =>
                              R_27_ :
                                (__ :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A ->
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows tl
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I)))) =>
                              cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.prop
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.prop)
                                cupicef.I A
                                (x1 :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A =>
                                 pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                             l1))
                       cupicef.0 Coq__Program__Basics.impl l0 x0 z0))))))
     (x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      y0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      z0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows Tnil
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      H1 : cupicef.Term cupicef.prop (predicate__implication Tnil x0 y0) =>
      H2 : cupicef.Term cupicef.prop (predicate__implication Tnil y0 z0) =>
      H3 : cupicef.Term cupicef.prop x0 =>
      H2 (H1 H3))
     (T : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
      l0 :
        cupicef.Term
          (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             cupicef.set)
          Tlist =>
      IHl :
        (x0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         y0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         z0 :
           cupicef.Term (cupicef.type (cupicef.s cupicef.z))
             (arrows l0
                (cupicef.cast
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I
                   (cupicef.univ cupicef.prop
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) ->
         H1 : cupicef.Term cupicef.prop (predicate__implication l0 x0 y0) ->
         H2 : cupicef.Term cupicef.prop (predicate__implication l0 y0 z0) ->
         cupicef.Term cupicef.prop
           (cupicef.fixproj cupicef.1
              (c =>
               c
                 (cupicef.SA cupicef.1
                    (cupicef.sup
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                          cupicef.set))
                    (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z))))
                       cupicef.I
                       (binary__relation
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)))
                       (op :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                            (binary__relation
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))) =>
                        cupicef.prod
                          (cupicef.sup
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.set)
                          (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.set)
                             (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I Tlist
                          (l1 :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           binary__relation
                             (arrows l1
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))))))))
              (c =>
               c
                 (pointwise__lifting0 =>
                  op :
                    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                      (binary__relation
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
                  l1 :
                    cupicef.Term
                      (cupicef.sup
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.set)
                      Tlist =>
                  match____Tlist (cupicef.type (cupicef.s cupicef.z))
                    (l2 :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     binary__relation
                       (arrows l2
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))))
                    (R : cupicef.Univ cupicef.prop =>
                     R_27_ : cupicef.Univ cupicef.prop =>
                     op R R_27_)
                    (A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
                     tl :
                       cupicef.Term
                         (cupicef.sup
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.set)
                         Tlist =>
                     R :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     R_27_ :
                       (__ :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
                        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
                          (arrows tl
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I)))) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop)
                       cupicef.I A
                       (x1 :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        pointwise__lifting0 op tl (R x1) (R_27_ x1)))
                    l1))
              cupicef.0 Coq__Program__Basics.impl l0 x0 z0)) =>
      x0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      y0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      z0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (arrows (Tcons T l0)
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))) =>
      H1 :
        cupicef.Term cupicef.prop (predicate__implication (Tcons T l0) x0 y0) =>
      H2 :
        cupicef.Term cupicef.prop (predicate__implication (Tcons T l0) y0 z0) =>
      x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) T =>
      let__p0 l x y z H H0 T l0 IHl x0 y0 z0 H1 H2 x1 (H1 x1) (H2 x1))
     l x y z H H0.

def predicate__implication__preorder :
  l :
    cupicef.Term
      (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
         cupicef.set)
      Tlist ->
  cupicef.Term cupicef.prop
    (PreOrder
       (arrows l
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)))
       (predicate__implication l))

:= l :
     cupicef.Term
       (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          cupicef.set)
       Tlist =>
   Build__PreOrder
     (arrows l
        (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cupicef.I
           (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)))
     (predicate__implication l)
     ((l0 :
         cupicef.Term
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           Tlist =>
       predicate__implication__preorder__obligation__1 l0) l)
     ((l0 :
         cupicef.Term
           (cupicef.sup (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              cupicef.set)
           Tlist =>
       predicate__implication__preorder__obligation__2 l0) l).

#TYPE_CLASS_INSTANCE predicate__implication__preorder.

def relation__equivalence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term
    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
       (cupicef.type (cupicef.s cupicef.z)))
    (Coq__Relations__Relation__Definitions.relation
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I (Coq__Relations__Relation__Definitions.relation A)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   predicate__equivalence (Tcons A (Tcons A Tnil)).

def RewriteRelation__instance__2 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (RewriteRelation
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I (Coq__Relations__Relation__Definitions.relation A))
       (relation__equivalence A))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   Build__RewriteRelation
     (cupicef.cast
        (cupicef.axiom
           (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z))))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ
           (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
              (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom
              (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s cupicef.z))))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I (Coq__Relations__Relation__Definitions.relation A))
     (relation__equivalence A).

#TYPE_CLASS_INSTANCE RewriteRelation__instance__2.

def relation__conjunction :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  R_27_ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Term
    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
       (cupicef.type (cupicef.s cupicef.z)))
    (Coq__Relations__Relation__Definitions.relation A)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   R_27_ :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   predicate__intersection (Tcons A (Tcons A Tnil)) R R_27_.

def relation__disjunction :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  R_27_ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Term
    (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
       (cupicef.type (cupicef.s cupicef.z)))
    (Coq__Relations__Relation__Definitions.relation A)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   R_27_ :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   predicate__union (Tcons A (Tcons A Tnil)) R R_27_.

thm relation__equivalence__equivalence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (Equivalence
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I (Coq__Relations__Relation__Definitions.relation A))
       (relation__equivalence A))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   predicate__equivalence__equivalence (Tcons A (Tcons A Tnil)).

#TYPE_CLASS_INSTANCE relation__equivalence__equivalence.

thm relation__implication__preorder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (PreOrder
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I (Coq__Relations__Relation__Definitions.relation A))
       (subrelation A))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   predicate__implication__preorder (Tcons A (Tcons A Tnil)).

#TYPE_CLASS_INSTANCE relation__implication__preorder.

def PartialOrder :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   relation__equivalence A eqA
     (relation__conjunction A R
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R)).

#TYPE_CLASS PartialOrder.

def partial__order__equivalence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  PartialOrder0 : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  cupicef.Term cupicef.prop
    (relation__equivalence A eqA
       (relation__conjunction A R
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   PartialOrder0 : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   PartialOrder0.

def let__poe :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H0 : cupicef.Term cupicef.prop (R x y) ->
  H1 : cupicef.Term cupicef.prop (R y x) ->
  cupicef.Term cupicef.prop
    (relation__equivalence A eqA
       (relation__conjunction A R
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 : cupicef.Term cupicef.prop (R x y) =>
   H1 : cupicef.Term cupicef.prop (R y x) =>
   partial__order__equivalence A eqA equ R preo H.

def let__H2 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H0 : cupicef.Term cupicef.prop (R x y) ->
  H1 : cupicef.Term cupicef.prop (R y x) ->
  x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.iff (eqA x0 x1)
       (relation__conjunction A R
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R)
          x0 x1))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 : cupicef.Term cupicef.prop (R x y) =>
   H1 : cupicef.Term cupicef.prop (R y x) =>
   let__poe A eqA equ R preo H x y H0 H1.

def let__a :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H0 : cupicef.Term cupicef.prop (R x y) ->
  H1 : cupicef.Term cupicef.prop (R y x) ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 : cupicef.Term cupicef.prop (R x y) =>
   H1 : cupicef.Term cupicef.prop (R y x) =>
   x.

def let__H3 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H0 : cupicef.Term cupicef.prop (R x y) ->
  H1 : cupicef.Term cupicef.prop (R y x) ->
  x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.iff (eqA (let__a A eqA equ R preo H x y H0 H1) x0)
       (relation__conjunction A R
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R)
          (let__a A eqA equ R preo H x y H0 H1) x0))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 : cupicef.Term cupicef.prop (R x y) =>
   H1 : cupicef.Term cupicef.prop (R y x) =>
   let__H2 A eqA equ R preo H x y H0 H1 (let__a A eqA equ R preo H x y H0 H1).

def let__a0 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H0 : cupicef.Term cupicef.prop (R x y) ->
  H1 : cupicef.Term cupicef.prop (R y x) ->
  cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 : cupicef.Term cupicef.prop (R x y) =>
   H1 : cupicef.Term cupicef.prop (R y x) =>
   y.

def let__H4 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  H0 : cupicef.Term cupicef.prop (R x y) ->
  H1 : cupicef.Term cupicef.prop (R y x) ->
  cupicef.Term cupicef.prop
    (Coq__Init__Logic.iff (eqA x (let__a0 A eqA equ R preo H x y H0 H1))
       (relation__conjunction A R
          (Coq__Program__Basics.flip A A
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             R)
          x (let__a0 A eqA equ R preo H x y H0 H1)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H0 : cupicef.Term cupicef.prop (R x y) =>
   H1 : cupicef.Term cupicef.prop (R y x) =>
   let__H3 A eqA equ R preo H x y H0 H1
     (let__a0 A eqA equ R preo H x y H0 H1).

thm partial__order__antisym :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  cupicef.Term cupicef.prop (Antisymmetric A eqA equ R)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))))
     cupicef.prop
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)))
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))))
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I (R x y)
              (H0 : cupicef.Term cupicef.prop (R x y) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 R y x) (H1 : cupicef.Term cupicef.prop (R y x) => eqA x y)))))
     (Antisymmetric A eqA equ R) cupicef.I
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      H0 : cupicef.Term cupicef.prop (R x y) =>
      H1 : cupicef.Term cupicef.prop (R y x) =>
      Coq__Init__Logic.match____and cupicef.prop
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
           (eqA x (let__a0 A eqA equ R preo H x y H0 H1))
           (__ :
              cupicef.Term cupicef.prop
                (eqA x (let__a0 A eqA equ R preo H x y H0 H1)) =>
            relation__conjunction A R
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R)
              x (let__a0 A eqA equ R preo H x y H0 H1)))
        (cupicef.prod cupicef.prop cupicef.prop
           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
           (relation__conjunction A R
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R)
              x (let__a0 A eqA equ R preo H x y H0 H1))
           (__ :
              cupicef.Term cupicef.prop
                (relation__conjunction A R
                   (Coq__Program__Basics.flip A A
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      R)
                   x (let__a0 A eqA equ R preo H x y H0 H1)) =>
            eqA x (let__a0 A eqA equ R preo H x y H0 H1)))
        (__ :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.and
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (eqA x y)
                   (__ : cupicef.Term cupicef.prop (eqA x y) =>
                    relation__conjunction A R
                      (Coq__Program__Basics.flip A A
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                         R)
                      x y))
                (cupicef.prod cupicef.prop cupicef.prop
                   (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                   (relation__conjunction A R
                      (Coq__Program__Basics.flip A A
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                         R)
                      x y)
                   (__ :
                      cupicef.Term cupicef.prop
                        (relation__conjunction A R
                           (Coq__Program__Basics.flip A A
                              (cupicef.cast
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z)))
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 cupicef.I
                                 (cupicef.univ cupicef.prop
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.I))
                              R)
                           x y) =>
                    eqA x y))) =>
         eqA x y)
        (__tmp :
           (__ : cupicef.Term cupicef.prop (eqA x y) ->
            cupicef.Term cupicef.prop
              (relation__conjunction A R
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    R)
                 x y)) =>
         H4 :
           (__ :
              cupicef.Term cupicef.prop
                (relation__conjunction A R
                   (Coq__Program__Basics.flip A A
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      R)
                   x y) ->
            cupicef.Term cupicef.prop (eqA x y)) =>
         H4
           (Coq__Init__Logic.conj (R x y)
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R x y)
              H0 H1))
        (let__H4 A eqA equ R preo H x y H0 H1)).

#TYPE_CLASS_INSTANCE partial__order__antisym.

thm PartialOrder__inverse :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  eqA :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  equ : cupicef.Term cupicef.prop (Equivalence A eqA) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  preo : cupicef.Term cupicef.prop (PreOrder A R) ->
  H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) ->
  cupicef.Term cupicef.prop
    (PartialOrder A eqA equ
       (Coq__Program__Basics.flip A A
          (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I
             (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                cupicef.I))
          R)
       (flip__PreOrder A R preo))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   eqA :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   equ : cupicef.Term cupicef.prop (Equivalence A eqA) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   preo : cupicef.Term cupicef.prop (PreOrder A R) =>
   H : cupicef.Term cupicef.prop (PartialOrder A eqA equ R preo) =>
   cupicef.cast
     (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
     cupicef.prop
     (cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        cupicef.I A
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         pointwise__lifting Coq__Init__Logic.iff (Tcons A Tnil) (eqA x)
           (relation__conjunction A
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R)
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    R))
              x)))
     (PartialOrder A eqA equ
        (Coq__Program__Basics.flip A A
           (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I
              (cupicef.univ cupicef.prop (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I))
           R)
        (flip__PreOrder A R preo))
     cupicef.I
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      cupicef.cast
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        cupicef.prop
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           cupicef.I A
           (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            Coq__Init__Logic.and
              (cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (eqA x x0)
                 (__ : cupicef.Term cupicef.prop (eqA x x0) =>
                  relation__conjunction A
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       R)
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       (Coq__Program__Basics.flip A A
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          R))
                    x x0))
              (cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (relation__conjunction A
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       R)
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       (Coq__Program__Basics.flip A A
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          R))
                    x x0)
                 (__ :
                    cupicef.Term cupicef.prop
                      (relation__conjunction A
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R)
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R))
                         x x0) =>
                  eqA x x0))))
        (pointwise__lifting Coq__Init__Logic.iff (Tcons A Tnil) (eqA x)
           (relation__conjunction A
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R)
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    R))
              x))
        cupicef.I
        (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         Coq__Init__Logic.conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (eqA x x0)
              (__ : cupicef.Term cupicef.prop (eqA x x0) =>
               relation__conjunction A
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    R)
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       R))
                 x x0))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
              (relation__conjunction A
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    R)
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       R))
                 x x0)
              (__ :
                 cupicef.Term cupicef.prop
                   (relation__conjunction A
                      (Coq__Program__Basics.flip A A
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                         R)
                      (Coq__Program__Basics.flip A A
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R))
                      x x0) =>
               eqA x x0))
           (H0 : cupicef.Term cupicef.prop (eqA x x0) =>
            Coq__Init__Logic.conj
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R x x0)
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    R)
                 x x0)
              ((H1 :
                  cupicef.Term cupicef.prop
                    (cupicef.fixproj cupicef.1
                       (c =>
                        c
                          (cupicef.SA cupicef.1
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.sup
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.set))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z))))
                                cupicef.I
                                (binary__relation
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I)))
                                (op :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (binary__relation
                                        (cupicef.cast
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           cupicef.I
                                           (cupicef.univ cupicef.prop
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              cupicef.I))) =>
                                 cupicef.prod
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I Tlist
                                   (l :
                                      cupicef.Term
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        Tlist =>
                                    binary__relation
                                      (arrows l
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))))))))
                       (c =>
                        c
                          (pointwise__lifting0 =>
                           op :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z))
                               (binary__relation
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))) =>
                           l :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           match____Tlist
                             (cupicef.type (cupicef.s cupicef.z))
                             (l0 :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              binary__relation
                                (arrows l0
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))))
                             (R0 :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows Tnil
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              R_27_ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows Tnil
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              op R0 R_27_)
                             (A0 :
                                cupicef.Univ
                                  (cupicef.type (cupicef.s cupicef.z)) =>
                              tl :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              R0 :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows (Tcons A0 tl)
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              R_27_ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows (Tcons A0 tl)
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.prop
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.prop)
                                cupicef.I A0
                                (x1 :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A0 =>
                                 pointwise__lifting0 op tl (R0 x1) (R_27_ x1)))
                             l))
                       cupicef.0 Coq__Init__Logic.iff (Tcons A Tnil) (
                       eqA x0)
                       (relation__conjunction A R
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R)
                          x0)) =>
                (H2 :
                   cupicef.Term cupicef.prop
                     (cupicef.fixproj cupicef.1
                        (c =>
                         c
                           (cupicef.SA cupicef.1
                              (cupicef.sup
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.sup
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.set))
                              (cupicef.prod
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (cupicef.rule
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.rule
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.rule
                                       (cupicef.sup
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.set)
                                       (cupicef.type (cupicef.s cupicef.z))))
                                 cupicef.I
                                 (binary__relation
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I)))
                                 (op :
                                    cupicef.Term
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (binary__relation
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))) =>
                                  cupicef.prod
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.rule
                                       (cupicef.sup
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.set)
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.I Tlist
                                    (l :
                                       cupicef.Term
                                         (cupicef.sup
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.set)
                                         Tlist =>
                                     binary__relation
                                       (arrows l
                                          (cupicef.cast
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.type
                                                   (cupicef.s
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.axiom
                                                   (cupicef.type
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             cupicef.I
                                             (cupicef.univ cupicef.prop
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                cupicef.I))))))))
                        (c =>
                         c
                           (pointwise__lifting0 =>
                            op :
                              cupicef.Term
                                (cupicef.type (cupicef.s cupicef.z))
                                (binary__relation
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))) =>
                            l :
                              cupicef.Term
                                (cupicef.sup
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.set)
                                Tlist =>
                            match____Tlist
                              (cupicef.type (cupicef.s cupicef.z))
                              (l0 :
                                 cupicef.Term
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   Tlist =>
                               binary__relation
                                 (arrows l0
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I))))
                              (R0 :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows Tnil
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               R_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows Tnil
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               op R0 R_27_)
                              (A0 :
                                 cupicef.Univ
                                   (cupicef.type (cupicef.s cupicef.z)) =>
                               tl :
                                 cupicef.Term
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   Tlist =>
                               R0 :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows (Tcons A0 tl)
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               R_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows (Tcons A0 tl)
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               cupicef.prod
                                 (cupicef.type (cupicef.s cupicef.z))
                                 cupicef.prop
                                 (cupicef.rule
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.prop)
                                 cupicef.I A0
                                 (x1 :
                                    cupicef.Term
                                      (cupicef.type (cupicef.s cupicef.z)) A0 =>
                                  pointwise__lifting0 op tl (R0 x1)
                                    (R_27_ x1)))
                              l))
                        cupicef.0 Coq__Init__Logic.iff (Tcons A Tnil) (
                        eqA x)
                        (relation__conjunction A R
                           (Coq__Program__Basics.flip A A
                              (cupicef.cast
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z)))
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 cupicef.I
                                 (cupicef.univ cupicef.prop
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.I))
                              R)
                           x)) =>
                 (H3 :
                    cupicef.Term cupicef.prop
                      (cupicef.fixproj cupicef.1
                         (c =>
                          c
                            (cupicef.SA cupicef.1
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.sup
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.set))
                               (cupicef.prod
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.rule
                                     (cupicef.sup
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.set)
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.rule
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.rule
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        (cupicef.type (cupicef.s cupicef.z))))
                                  cupicef.I
                                  (binary__relation
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I)))
                                  (op :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (binary__relation
                                          (cupicef.cast
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.type
                                                   (cupicef.s
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.axiom
                                                   (cupicef.type
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             cupicef.I
                                             (cupicef.univ cupicef.prop
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                cupicef.I))) =>
                                   cupicef.prod
                                     (cupicef.sup
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.set)
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.rule
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I Tlist
                                     (l :
                                        cupicef.Term
                                          (cupicef.sup
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.set)
                                          Tlist =>
                                      binary__relation
                                        (arrows l
                                           (cupicef.cast
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.axiom
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              cupicef.I
                                              (cupicef.univ cupicef.prop
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 cupicef.I))))))))
                         (c =>
                          c
                            (pointwise__lifting0 =>
                             op :
                               cupicef.Term
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (binary__relation
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I))) =>
                             l :
                               cupicef.Term
                                 (cupicef.sup
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.set)
                                 Tlist =>
                             match____Tlist
                               (cupicef.type (cupicef.s cupicef.z))
                               (l0 :
                                  cupicef.Term
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    Tlist =>
                                binary__relation
                                  (arrows l0
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))))
                               (R0 :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (arrows Tnil
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))) =>
                                R_27_ :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (arrows Tnil
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))) =>
                                op R0 R_27_)
                               (A0 :
                                  cupicef.Univ
                                    (cupicef.type (cupicef.s cupicef.z)) =>
                                tl :
                                  cupicef.Term
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    Tlist =>
                                R0 :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (arrows (Tcons A0 tl)
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))) =>
                                R_27_ :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (arrows (Tcons A0 tl)
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))) =>
                                cupicef.prod
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.prop
                                  (cupicef.rule
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.prop)
                                  cupicef.I A0
                                  (x1 :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z))
                                       A0 =>
                                   pointwise__lifting0 op tl (R0 x1)
                                     (R_27_ x1)))
                               l))
                         cupicef.0 Coq__Init__Logic.iff Tnil (eqA x x0)
                         (relation__conjunction A R
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R)
                            x x0)) =>
                  Coq__Init__Logic.and__ind
                    (cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (eqA x x0)
                       (__ : cupicef.Term cupicef.prop (eqA x x0) =>
                        relation__conjunction A R
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R)
                          x x0))
                    (cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (relation__conjunction A R
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R)
                          x x0)
                       (__ :
                          cupicef.Term cupicef.prop
                            (relation__conjunction A R
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R)
                               x x0) =>
                        eqA x x0))
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       R x x0)
                    (H4 :
                       (__ : cupicef.Term cupicef.prop (eqA x x0) ->
                        cupicef.Term cupicef.prop
                          (relation__conjunction A R
                             (Coq__Program__Basics.flip A A
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))
                                R)
                             x x0)) =>
                     H5 :
                       (__ :
                          cupicef.Term cupicef.prop
                            (relation__conjunction A R
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R)
                               x x0) ->
                        cupicef.Term cupicef.prop (eqA x x0)) =>
                     (H6 :
                        (__ : cupicef.Term cupicef.prop (R x x0) ->
                         __0 :
                           cupicef.Term cupicef.prop
                             (Coq__Program__Basics.flip A A
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))
                                R x x0) ->
                         cupicef.Term cupicef.prop (eqA x x0)) =>
                      (H7 :
                         cupicef.Term cupicef.prop
                           (relation__conjunction A R
                              (Coq__Program__Basics.flip A A
                                 (cupicef.cast
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    cupicef.I
                                    (cupicef.univ cupicef.prop
                                       (cupicef.type (cupicef.s cupicef.z))
                                       cupicef.I))
                                 R)
                              x x0) =>
                       Coq__Init__Logic.and__ind (R x x0)
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R x x0)
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R x x0)
                         (H8 : cupicef.Term cupicef.prop (R x x0) =>
                          H9 :
                            cupicef.Term cupicef.prop
                              (Coq__Program__Basics.flip A A
                                 (cupicef.cast
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    cupicef.I
                                    (cupicef.univ cupicef.prop
                                       (cupicef.type (cupicef.s cupicef.z))
                                       cupicef.I))
                                 R x x0) =>
                          H9)
                         H7)
                        (H4 H0))
                       (__ : cupicef.Term cupicef.prop (R x x0) =>
                        __0 :
                          cupicef.Term cupicef.prop
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R x x0) =>
                        H5
                          (Coq__Init__Logic.conj (R x x0)
                             (Coq__Program__Basics.flip A A
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))
                                R x x0)
                             __ __0)))
                    H3)
                   (H2 x0))
                  (H x))
                 (H x0))
              ((H1 :
                  cupicef.Term cupicef.prop
                    (cupicef.fixproj cupicef.1
                       (c =>
                        c
                          (cupicef.SA cupicef.1
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.sup
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.set))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z))))
                                cupicef.I
                                (binary__relation
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I)))
                                (op :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (binary__relation
                                        (cupicef.cast
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           cupicef.I
                                           (cupicef.univ cupicef.prop
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              cupicef.I))) =>
                                 cupicef.prod
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I Tlist
                                   (l :
                                      cupicef.Term
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        Tlist =>
                                    binary__relation
                                      (arrows l
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))))))))
                       (c =>
                        c
                          (pointwise__lifting0 =>
                           op :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z))
                               (binary__relation
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))) =>
                           l :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           match____Tlist
                             (cupicef.type (cupicef.s cupicef.z))
                             (l0 :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              binary__relation
                                (arrows l0
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))))
                             (R0 :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows Tnil
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              R_27_ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows Tnil
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              op R0 R_27_)
                             (A0 :
                                cupicef.Univ
                                  (cupicef.type (cupicef.s cupicef.z)) =>
                              tl :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              R0 :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows (Tcons A0 tl)
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              R_27_ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows (Tcons A0 tl)
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.prop
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.prop)
                                cupicef.I A0
                                (x1 :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A0 =>
                                 pointwise__lifting0 op tl (R0 x1) (R_27_ x1)))
                             l))
                       cupicef.0 Coq__Init__Logic.iff (Tcons A Tnil) (
                       eqA x0)
                       (relation__conjunction A R
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R)
                          x0)) =>
                (H2 :
                   cupicef.Term cupicef.prop
                     (cupicef.fixproj cupicef.1
                        (c =>
                         c
                           (cupicef.SA cupicef.1
                              (cupicef.sup
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.sup
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.set))
                              (cupicef.prod
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (cupicef.rule
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.rule
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.rule
                                       (cupicef.sup
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.set)
                                       (cupicef.type (cupicef.s cupicef.z))))
                                 cupicef.I
                                 (binary__relation
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I)))
                                 (op :
                                    cupicef.Term
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (binary__relation
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))) =>
                                  cupicef.prod
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.rule
                                       (cupicef.sup
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.set)
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.I Tlist
                                    (l :
                                       cupicef.Term
                                         (cupicef.sup
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.set)
                                         Tlist =>
                                     binary__relation
                                       (arrows l
                                          (cupicef.cast
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.type
                                                   (cupicef.s
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.axiom
                                                   (cupicef.type
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             cupicef.I
                                             (cupicef.univ cupicef.prop
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                cupicef.I))))))))
                        (c =>
                         c
                           (pointwise__lifting0 =>
                            op :
                              cupicef.Term
                                (cupicef.type (cupicef.s cupicef.z))
                                (binary__relation
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))) =>
                            l :
                              cupicef.Term
                                (cupicef.sup
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.set)
                                Tlist =>
                            match____Tlist
                              (cupicef.type (cupicef.s cupicef.z))
                              (l0 :
                                 cupicef.Term
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   Tlist =>
                               binary__relation
                                 (arrows l0
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I))))
                              (R0 :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows Tnil
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               R_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows Tnil
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               op R0 R_27_)
                              (A0 :
                                 cupicef.Univ
                                   (cupicef.type (cupicef.s cupicef.z)) =>
                               tl :
                                 cupicef.Term
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   Tlist =>
                               R0 :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows (Tcons A0 tl)
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               R_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows (Tcons A0 tl)
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               cupicef.prod
                                 (cupicef.type (cupicef.s cupicef.z))
                                 cupicef.prop
                                 (cupicef.rule
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.prop)
                                 cupicef.I A0
                                 (x1 :
                                    cupicef.Term
                                      (cupicef.type (cupicef.s cupicef.z)) A0 =>
                                  pointwise__lifting0 op tl (R0 x1)
                                    (R_27_ x1)))
                              l))
                        cupicef.0 Coq__Init__Logic.iff (Tcons A Tnil) (
                        eqA x)
                        (relation__conjunction A R
                           (Coq__Program__Basics.flip A A
                              (cupicef.cast
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z)))
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 cupicef.I
                                 (cupicef.univ cupicef.prop
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.I))
                              R)
                           x)) =>
                 (H3 :
                    cupicef.Term cupicef.prop
                      (cupicef.fixproj cupicef.1
                         (c =>
                          c
                            (cupicef.SA cupicef.1
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.sup
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.set))
                               (cupicef.prod
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.rule
                                     (cupicef.sup
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.set)
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.rule
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.rule
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        (cupicef.type (cupicef.s cupicef.z))))
                                  cupicef.I
                                  (binary__relation
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I)))
                                  (op :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (binary__relation
                                          (cupicef.cast
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.type
                                                   (cupicef.s
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.axiom
                                                   (cupicef.type
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             cupicef.I
                                             (cupicef.univ cupicef.prop
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                cupicef.I))) =>
                                   cupicef.prod
                                     (cupicef.sup
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.set)
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.rule
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I Tlist
                                     (l :
                                        cupicef.Term
                                          (cupicef.sup
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.set)
                                          Tlist =>
                                      binary__relation
                                        (arrows l
                                           (cupicef.cast
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.axiom
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              cupicef.I
                                              (cupicef.univ cupicef.prop
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 cupicef.I))))))))
                         (c =>
                          c
                            (pointwise__lifting0 =>
                             op :
                               cupicef.Term
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (binary__relation
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I))) =>
                             l :
                               cupicef.Term
                                 (cupicef.sup
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.set)
                                 Tlist =>
                             match____Tlist
                               (cupicef.type (cupicef.s cupicef.z))
                               (l0 :
                                  cupicef.Term
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    Tlist =>
                                binary__relation
                                  (arrows l0
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))))
                               (R0 :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (arrows Tnil
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))) =>
                                R_27_ :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (arrows Tnil
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))) =>
                                op R0 R_27_)
                               (A0 :
                                  cupicef.Univ
                                    (cupicef.type (cupicef.s cupicef.z)) =>
                                tl :
                                  cupicef.Term
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    Tlist =>
                                R0 :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (arrows (Tcons A0 tl)
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))) =>
                                R_27_ :
                                  cupicef.Term
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (arrows (Tcons A0 tl)
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))) =>
                                cupicef.prod
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.prop
                                  (cupicef.rule
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.prop)
                                  cupicef.I A0
                                  (x1 :
                                     cupicef.Term
                                       (cupicef.type (cupicef.s cupicef.z))
                                       A0 =>
                                   pointwise__lifting0 op tl (R0 x1)
                                     (R_27_ x1)))
                               l))
                         cupicef.0 Coq__Init__Logic.iff Tnil (eqA x x0)
                         (relation__conjunction A R
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R)
                            x x0)) =>
                  Coq__Init__Logic.and__ind
                    (cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (eqA x x0)
                       (__ : cupicef.Term cupicef.prop (eqA x x0) =>
                        relation__conjunction A R
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R)
                          x x0))
                    (cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (relation__conjunction A R
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R)
                          x x0)
                       (__ :
                          cupicef.Term cupicef.prop
                            (relation__conjunction A R
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R)
                               x x0) =>
                        eqA x x0))
                    (Coq__Program__Basics.flip A A
                       (cupicef.cast
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I
                          (cupicef.univ cupicef.prop
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                       (Coq__Program__Basics.flip A A
                          (cupicef.cast
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             cupicef.I
                             (cupicef.univ cupicef.prop
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I))
                          R)
                       x x0)
                    (H4 :
                       (__ : cupicef.Term cupicef.prop (eqA x x0) ->
                        cupicef.Term cupicef.prop
                          (relation__conjunction A R
                             (Coq__Program__Basics.flip A A
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))
                                R)
                             x x0)) =>
                     H5 :
                       (__ :
                          cupicef.Term cupicef.prop
                            (relation__conjunction A R
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R)
                               x x0) ->
                        cupicef.Term cupicef.prop (eqA x x0)) =>
                     (H6 :
                        (__ : cupicef.Term cupicef.prop (R x x0) ->
                         __0 :
                           cupicef.Term cupicef.prop
                             (Coq__Program__Basics.flip A A
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))
                                R x x0) ->
                         cupicef.Term cupicef.prop (eqA x x0)) =>
                      (H7 :
                         cupicef.Term cupicef.prop
                           (relation__conjunction A R
                              (Coq__Program__Basics.flip A A
                                 (cupicef.cast
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    cupicef.I
                                    (cupicef.univ cupicef.prop
                                       (cupicef.type (cupicef.s cupicef.z))
                                       cupicef.I))
                                 R)
                              x x0) =>
                       Coq__Init__Logic.and__ind (R x x0)
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R x x0)
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R)
                            x x0)
                         (H8 : cupicef.Term cupicef.prop (R x x0) =>
                          H9 :
                            cupicef.Term cupicef.prop
                              (Coq__Program__Basics.flip A A
                                 (cupicef.cast
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    cupicef.I
                                    (cupicef.univ cupicef.prop
                                       (cupicef.type (cupicef.s cupicef.z))
                                       cupicef.I))
                                 R x x0) =>
                          H8)
                         H7)
                        (H4 H0))
                       (__ : cupicef.Term cupicef.prop (R x x0) =>
                        __0 :
                          cupicef.Term cupicef.prop
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R x x0) =>
                        H5
                          (Coq__Init__Logic.conj (R x x0)
                             (Coq__Program__Basics.flip A A
                                (cupicef.cast
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   (cupicef.univ
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.I)
                                   cupicef.I
                                   (cupicef.univ cupicef.prop
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.I))
                                R x x0)
                             __ __0)))
                    H3)
                   (H2 x0))
                  (H x))
                 (H x0)))
           (H0 :
              cupicef.Term cupicef.prop
                (relation__conjunction A
                   (Coq__Program__Basics.flip A A
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      R)
                   (Coq__Program__Basics.flip A A
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      (Coq__Program__Basics.flip A A
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                         R))
                   x x0) =>
            Coq__Init__Logic.and__ind
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 R x x0)
              (Coq__Program__Basics.flip A A
                 (cupicef.cast
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I
                    (cupicef.univ cupicef.prop
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                 (Coq__Program__Basics.flip A A
                    (cupicef.cast
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I
                       (cupicef.univ cupicef.prop
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                    R)
                 x x0)
              (eqA x x0)
              (H1 :
                 cupicef.Term cupicef.prop
                   (Coq__Program__Basics.flip A A
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      R x x0) =>
               H2 :
                 cupicef.Term cupicef.prop
                   (Coq__Program__Basics.flip A A
                      (cupicef.cast
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I
                         (cupicef.univ cupicef.prop
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                      (Coq__Program__Basics.flip A A
                         (cupicef.cast
                            (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I
                            (cupicef.univ cupicef.prop
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
                         R)
                      x x0) =>
               (H3 :
                  cupicef.Term cupicef.prop
                    (cupicef.fixproj cupicef.1
                       (c =>
                        c
                          (cupicef.SA cupicef.1
                             (cupicef.sup
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.sup
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.set))
                             (cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z))))
                                cupicef.I
                                (binary__relation
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I)))
                                (op :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (binary__relation
                                        (cupicef.cast
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           cupicef.I
                                           (cupicef.univ cupicef.prop
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              cupicef.I))) =>
                                 cupicef.prod
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.rule
                                      (cupicef.sup
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.set)
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I Tlist
                                   (l :
                                      cupicef.Term
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        Tlist =>
                                    binary__relation
                                      (arrows l
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))))))))
                       (c =>
                        c
                          (pointwise__lifting0 =>
                           op :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z))
                               (binary__relation
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))) =>
                           l :
                             cupicef.Term
                               (cupicef.sup
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.set)
                               Tlist =>
                           match____Tlist
                             (cupicef.type (cupicef.s cupicef.z))
                             (l0 :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              binary__relation
                                (arrows l0
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))))
                             (R0 :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows Tnil
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              R_27_ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows Tnil
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              op R0 R_27_)
                             (A0 :
                                cupicef.Univ
                                  (cupicef.type (cupicef.s cupicef.z)) =>
                              tl :
                                cupicef.Term
                                  (cupicef.sup
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.set)
                                  Tlist =>
                              R0 :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows (Tcons A0 tl)
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              R_27_ :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (arrows (Tcons A0 tl)
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))) =>
                              cupicef.prod
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.prop
                                (cupicef.rule
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.prop)
                                cupicef.I A0
                                (x1 :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z)) A0 =>
                                 pointwise__lifting0 op tl (R0 x1) (R_27_ x1)))
                             l))
                       cupicef.0 Coq__Init__Logic.iff (Tcons A Tnil) (
                       eqA x0)
                       (relation__conjunction A R
                          (Coq__Program__Basics.flip A A
                             (cupicef.cast
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z)))
                                   cupicef.I)
                                (cupicef.univ
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.I)
                                cupicef.I
                                (cupicef.univ cupicef.prop
                                   (cupicef.type (cupicef.s cupicef.z))
                                   cupicef.I))
                             R)
                          x0)) =>
                (H4 :
                   cupicef.Term cupicef.prop
                     (cupicef.fixproj cupicef.1
                        (c =>
                         c
                           (cupicef.SA cupicef.1
                              (cupicef.sup
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.sup
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.set))
                              (cupicef.prod
                                 (cupicef.type (cupicef.s cupicef.z))
                                 (cupicef.rule
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.rule
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.rule
                                       (cupicef.sup
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.set)
                                       (cupicef.type (cupicef.s cupicef.z))))
                                 cupicef.I
                                 (binary__relation
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I)))
                                 (op :
                                    cupicef.Term
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (binary__relation
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))) =>
                                  cupicef.prod
                                    (cupicef.sup
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.set)
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.rule
                                       (cupicef.sup
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.set)
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.I Tlist
                                    (l :
                                       cupicef.Term
                                         (cupicef.sup
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.set)
                                         Tlist =>
                                     binary__relation
                                       (arrows l
                                          (cupicef.cast
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.type
                                                   (cupicef.s
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             (cupicef.univ
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                (cupicef.axiom
                                                   (cupicef.type
                                                      (cupicef.s cupicef.z)))
                                                cupicef.I)
                                             cupicef.I
                                             (cupicef.univ cupicef.prop
                                                (cupicef.type
                                                   (cupicef.s cupicef.z))
                                                cupicef.I))))))))
                        (c =>
                         c
                           (pointwise__lifting0 =>
                            op :
                              cupicef.Term
                                (cupicef.type (cupicef.s cupicef.z))
                                (binary__relation
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))) =>
                            l :
                              cupicef.Term
                                (cupicef.sup
                                   (cupicef.axiom
                                      (cupicef.type (cupicef.s cupicef.z)))
                                   cupicef.set)
                                Tlist =>
                            match____Tlist
                              (cupicef.type (cupicef.s cupicef.z))
                              (l0 :
                                 cupicef.Term
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   Tlist =>
                               binary__relation
                                 (arrows l0
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I))))
                              (R0 :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows Tnil
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               R_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows Tnil
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               op R0 R_27_)
                              (A0 :
                                 cupicef.Univ
                                   (cupicef.type (cupicef.s cupicef.z)) =>
                               tl :
                                 cupicef.Term
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      cupicef.set)
                                   Tlist =>
                               R0 :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows (Tcons A0 tl)
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               R_27_ :
                                 cupicef.Term
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (arrows (Tcons A0 tl)
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))) =>
                               cupicef.prod
                                 (cupicef.type (cupicef.s cupicef.z))
                                 cupicef.prop
                                 (cupicef.rule
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.prop)
                                 cupicef.I A0
                                 (x1 :
                                    cupicef.Term
                                      (cupicef.type (cupicef.s cupicef.z)) A0 =>
                                  pointwise__lifting0 op tl (R0 x1)
                                    (R_27_ x1)))
                              l))
                        cupicef.0 Coq__Init__Logic.iff Tnil (eqA x0 x0)
                        (relation__conjunction A R
                           (Coq__Program__Basics.flip A A
                              (cupicef.cast
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z)))
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 cupicef.I
                                 (cupicef.univ cupicef.prop
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.I))
                              R)
                           x0 x0)) =>
                 Coq__Init__Logic.and__ind
                   (cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                      (eqA x0 x0)
                      (__ : cupicef.Term cupicef.prop (eqA x0 x0) =>
                       relation__conjunction A R
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R)
                         x0 x0))
                   (cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                      (relation__conjunction A R
                         (Coq__Program__Basics.flip A A
                            (cupicef.cast
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               cupicef.I
                               (cupicef.univ cupicef.prop
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I))
                            R)
                         x0 x0)
                      (__ :
                         cupicef.Term cupicef.prop
                           (relation__conjunction A R
                              (Coq__Program__Basics.flip A A
                                 (cupicef.cast
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    cupicef.I
                                    (cupicef.univ cupicef.prop
                                       (cupicef.type (cupicef.s cupicef.z))
                                       cupicef.I))
                                 R)
                              x0 x0) =>
                       eqA x0 x0))
                   (eqA x x0)
                   (H5 :
                      (__ : cupicef.Term cupicef.prop (eqA x0 x0) ->
                       cupicef.Term cupicef.prop
                         (relation__conjunction A R
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R)
                            x0 x0)) =>
                    H6 :
                      (__ :
                         cupicef.Term cupicef.prop
                           (relation__conjunction A R
                              (Coq__Program__Basics.flip A A
                                 (cupicef.cast
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    cupicef.I
                                    (cupicef.univ cupicef.prop
                                       (cupicef.type (cupicef.s cupicef.z))
                                       cupicef.I))
                                 R)
                              x0 x0) ->
                       cupicef.Term cupicef.prop (eqA x0 x0)) =>
                    (H7 :
                       (__ : cupicef.Term cupicef.prop (R x0 x0) ->
                        __0 :
                          cupicef.Term cupicef.prop
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R x0 x0) ->
                        cupicef.Term cupicef.prop (eqA x0 x0)) =>
                     (H8 :
                        cupicef.Term cupicef.prop
                          (cupicef.fixproj cupicef.1
                             (c =>
                              c
                                (cupicef.SA cupicef.1
                                   (cupicef.sup
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.sup
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.set))
                                   (cupicef.prod
                                      (cupicef.type (cupicef.s cupicef.z))
                                      (cupicef.rule
                                         (cupicef.sup
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.set)
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.rule
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.rule
                                            (cupicef.sup
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.set)
                                            (cupicef.type
                                               (cupicef.s cupicef.z))))
                                      cupicef.I
                                      (binary__relation
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I)))
                                      (op :
                                         cupicef.Term
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (binary__relation
                                              (cupicef.cast
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z)))
                                                 (cupicef.axiom
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z)))
                                                 (cupicef.univ
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z))
                                                    (cupicef.type
                                                       (cupicef.s
                                                          (cupicef.s
                                                             cupicef.z)))
                                                    cupicef.I)
                                                 (cupicef.univ
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z))
                                                    (cupicef.axiom
                                                       (cupicef.type
                                                          (cupicef.s
                                                             cupicef.z)))
                                                    cupicef.I)
                                                 cupicef.I
                                                 (cupicef.univ cupicef.prop
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z))
                                                    cupicef.I))) =>
                                       cupicef.prod
                                         (cupicef.sup
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.set)
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.rule
                                            (cupicef.sup
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.set)
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I Tlist
                                         (l :
                                            cupicef.Term
                                              (cupicef.sup
                                                 (cupicef.axiom
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.set)
                                              Tlist =>
                                          binary__relation
                                            (arrows l
                                               (cupicef.cast
                                                  (cupicef.type
                                                     (cupicef.s
                                                        (cupicef.s cupicef.z)))
                                                  (cupicef.axiom
                                                     (cupicef.type
                                                        (cupicef.s cupicef.z)))
                                                  (cupicef.univ
                                                     (cupicef.type
                                                        (cupicef.s cupicef.z))
                                                     (cupicef.type
                                                        (cupicef.s
                                                           (cupicef.s
                                                              cupicef.z)))
                                                     cupicef.I)
                                                  (cupicef.univ
                                                     (cupicef.type
                                                        (cupicef.s cupicef.z))
                                                     (cupicef.axiom
                                                        (cupicef.type
                                                           (cupicef.s
                                                              cupicef.z)))
                                                     cupicef.I)
                                                  cupicef.I
                                                  (cupicef.univ cupicef.prop
                                                     (cupicef.type
                                                        (cupicef.s cupicef.z))
                                                     cupicef.I))))))))
                             (c =>
                              c
                                (pointwise__lifting0 =>
                                 op :
                                   cupicef.Term
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (binary__relation
                                        (cupicef.cast
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           (cupicef.univ
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              cupicef.I)
                                           cupicef.I
                                           (cupicef.univ cupicef.prop
                                              (cupicef.type
                                                 (cupicef.s cupicef.z))
                                              cupicef.I))) =>
                                 l :
                                   cupicef.Term
                                     (cupicef.sup
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.set)
                                     Tlist =>
                                 match____Tlist
                                   (cupicef.type (cupicef.s cupicef.z))
                                   (l0 :
                                      cupicef.Term
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        Tlist =>
                                    binary__relation
                                      (arrows l0
                                         (cupicef.cast
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.type
                                                  (cupicef.s
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            (cupicef.univ
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               (cupicef.axiom
                                                  (cupicef.type
                                                     (cupicef.s cupicef.z)))
                                               cupicef.I)
                                            cupicef.I
                                            (cupicef.univ cupicef.prop
                                               (cupicef.type
                                                  (cupicef.s cupicef.z))
                                               cupicef.I))))
                                   (R0 :
                                      cupicef.Term
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (arrows Tnil
                                           (cupicef.cast
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.axiom
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              cupicef.I
                                              (cupicef.univ cupicef.prop
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 cupicef.I))) =>
                                    R_27_ :
                                      cupicef.Term
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (arrows Tnil
                                           (cupicef.cast
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.axiom
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              cupicef.I
                                              (cupicef.univ cupicef.prop
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 cupicef.I))) =>
                                    op R0 R_27_)
                                   (A0 :
                                      cupicef.Univ
                                        (cupicef.type (cupicef.s cupicef.z)) =>
                                    tl :
                                      cupicef.Term
                                        (cupicef.sup
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.set)
                                        Tlist =>
                                    R0 :
                                      cupicef.Term
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (arrows (Tcons A0 tl)
                                           (cupicef.cast
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.axiom
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              cupicef.I
                                              (cupicef.univ cupicef.prop
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 cupicef.I))) =>
                                    R_27_ :
                                      cupicef.Term
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (arrows (Tcons A0 tl)
                                           (cupicef.cast
                                              (cupicef.type
                                                 (cupicef.s
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.axiom
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z)))
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.type
                                                    (cupicef.s
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              (cupicef.univ
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 (cupicef.axiom
                                                    (cupicef.type
                                                       (cupicef.s cupicef.z)))
                                                 cupicef.I)
                                              cupicef.I
                                              (cupicef.univ cupicef.prop
                                                 (cupicef.type
                                                    (cupicef.s cupicef.z))
                                                 cupicef.I))) =>
                                    cupicef.prod
                                      (cupicef.type (cupicef.s cupicef.z))
                                      cupicef.prop
                                      (cupicef.rule
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.prop)
                                      cupicef.I A0
                                      (x1 :
                                         cupicef.Term
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           A0 =>
                                       pointwise__lifting0 op tl (R0 x1)
                                         (R_27_ x1)))
                                   l))
                             cupicef.0 Coq__Init__Logic.iff Tnil (eqA x0 x)
                             (relation__conjunction A R
                                (Coq__Program__Basics.flip A A
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))
                                   R)
                                x0 x)) =>
                      Coq__Init__Logic.and__ind
                        (cupicef.prod cupicef.prop cupicef.prop
                           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                           (eqA x0 x)
                           (__ : cupicef.Term cupicef.prop (eqA x0 x) =>
                            relation__conjunction A R
                              (Coq__Program__Basics.flip A A
                                 (cupicef.cast
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    cupicef.I
                                    (cupicef.univ cupicef.prop
                                       (cupicef.type (cupicef.s cupicef.z))
                                       cupicef.I))
                                 R)
                              x0 x))
                        (cupicef.prod cupicef.prop cupicef.prop
                           (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                           (relation__conjunction A R
                              (Coq__Program__Basics.flip A A
                                 (cupicef.cast
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    (cupicef.univ
                                       (cupicef.type (cupicef.s cupicef.z))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       cupicef.I)
                                    cupicef.I
                                    (cupicef.univ cupicef.prop
                                       (cupicef.type (cupicef.s cupicef.z))
                                       cupicef.I))
                                 R)
                              x0 x)
                           (__ :
                              cupicef.Term cupicef.prop
                                (relation__conjunction A R
                                   (Coq__Program__Basics.flip A A
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))
                                      R)
                                   x0 x) =>
                            eqA x0 x))
                        (eqA x x0)
                        (H9 :
                           (__ : cupicef.Term cupicef.prop (eqA x0 x) ->
                            cupicef.Term cupicef.prop
                              (relation__conjunction A R
                                 (Coq__Program__Basics.flip A A
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I))
                                    R)
                                 x0 x)) =>
                         H10 :
                           (__ :
                              cupicef.Term cupicef.prop
                                (relation__conjunction A R
                                   (Coq__Program__Basics.flip A A
                                      (cupicef.cast
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.type
                                               (cupicef.s
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         (cupicef.univ
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            (cupicef.axiom
                                               (cupicef.type
                                                  (cupicef.s cupicef.z)))
                                            cupicef.I)
                                         cupicef.I
                                         (cupicef.univ cupicef.prop
                                            (cupicef.type
                                               (cupicef.s cupicef.z))
                                            cupicef.I))
                                      R)
                                   x0 x) ->
                            cupicef.Term cupicef.prop (eqA x0 x)) =>
                         (H11 :
                            (__ : cupicef.Term cupicef.prop (R x0 x) ->
                             __0 :
                               cupicef.Term cupicef.prop
                                 (Coq__Program__Basics.flip A A
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I))
                                    R x0 x) ->
                             cupicef.Term cupicef.prop (eqA x0 x)) =>
                          (H12 :
                             (__ :
                                cupicef.Term cupicef.prop
                                  (Coq__Program__Basics.flip A A
                                     (cupicef.cast
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.type
                                              (cupicef.s
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        (cupicef.univ
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           (cupicef.axiom
                                              (cupicef.type
                                                 (cupicef.s cupicef.z)))
                                           cupicef.I)
                                        cupicef.I
                                        (cupicef.univ cupicef.prop
                                           (cupicef.type
                                              (cupicef.s cupicef.z))
                                           cupicef.I))
                                     R x0 x) ->
                              cupicef.Term cupicef.prop (eqA x0 x)) =>
                           (H13 : cupicef.Term cupicef.prop (eqA x0 x) =>
                            (H14 :
                               cupicef.Term cupicef.prop
                                 (relation__conjunction A R
                                    (Coq__Program__Basics.flip A A
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))
                                       R)
                                    x0 x) =>
                             Coq__Init__Logic.and__ind (R x0 x)
                               (Coq__Program__Basics.flip A A
                                  (cupicef.cast
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     (cupicef.univ
                                        (cupicef.type (cupicef.s cupicef.z))
                                        (cupicef.axiom
                                           (cupicef.type
                                              (cupicef.s cupicef.z)))
                                        cupicef.I)
                                     cupicef.I
                                     (cupicef.univ cupicef.prop
                                        (cupicef.type (cupicef.s cupicef.z))
                                        cupicef.I))
                                  R x0 x)
                               (eqA x x0)
                               (H15 : cupicef.Term cupicef.prop (R x0 x) =>
                                H16 :
                                  cupicef.Term cupicef.prop
                                    (Coq__Program__Basics.flip A A
                                       (cupicef.cast
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.type
                                                (cupicef.s
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          (cupicef.univ
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             (cupicef.axiom
                                                (cupicef.type
                                                   (cupicef.s cupicef.z)))
                                             cupicef.I)
                                          cupicef.I
                                          (cupicef.univ cupicef.prop
                                             (cupicef.type
                                                (cupicef.s cupicef.z))
                                             cupicef.I))
                                       R x0 x) =>
                                symmetry A eqA
                                  (Equivalence__Symmetric A eqA equ) x0 x H13)
                               H14)
                              (H9 H13))
                             (H12 H2))
                            (H11 H1))
                           (__ : cupicef.Term cupicef.prop (R x0 x) =>
                            __0 :
                              cupicef.Term cupicef.prop
                                (Coq__Program__Basics.flip A A
                                   (cupicef.cast
                                      (cupicef.type
                                         (cupicef.s (cupicef.s cupicef.z)))
                                      (cupicef.axiom
                                         (cupicef.type (cupicef.s cupicef.z)))
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.type
                                            (cupicef.s (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      (cupicef.univ
                                         (cupicef.type (cupicef.s cupicef.z))
                                         (cupicef.axiom
                                            (cupicef.type
                                               (cupicef.s cupicef.z)))
                                         cupicef.I)
                                      cupicef.I
                                      (cupicef.univ cupicef.prop
                                         (cupicef.type (cupicef.s cupicef.z))
                                         cupicef.I))
                                   R x0 x) =>
                            H10
                              (Coq__Init__Logic.conj (R x0 x)
                                 (Coq__Program__Basics.flip A A
                                    (cupicef.cast
                                       (cupicef.type
                                          (cupicef.s (cupicef.s cupicef.z)))
                                       (cupicef.axiom
                                          (cupicef.type (cupicef.s cupicef.z)))
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.type
                                             (cupicef.s (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       (cupicef.univ
                                          (cupicef.type (cupicef.s cupicef.z))
                                          (cupicef.axiom
                                             (cupicef.type
                                                (cupicef.s cupicef.z)))
                                          cupicef.I)
                                       cupicef.I
                                       (cupicef.univ cupicef.prop
                                          (cupicef.type (cupicef.s cupicef.z))
                                          cupicef.I))
                                    R x0 x)
                                 __ __0)))
                        H8)
                       (H3 x))
                      (__ : cupicef.Term cupicef.prop (R x0 x0) =>
                       __0 :
                         cupicef.Term cupicef.prop
                           (Coq__Program__Basics.flip A A
                              (cupicef.cast
                                 (cupicef.type
                                    (cupicef.s (cupicef.s cupicef.z)))
                                 (cupicef.axiom
                                    (cupicef.type (cupicef.s cupicef.z)))
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.type
                                       (cupicef.s (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 (cupicef.univ
                                    (cupicef.type (cupicef.s cupicef.z))
                                    (cupicef.axiom
                                       (cupicef.type (cupicef.s cupicef.z)))
                                    cupicef.I)
                                 cupicef.I
                                 (cupicef.univ cupicef.prop
                                    (cupicef.type (cupicef.s cupicef.z))
                                    cupicef.I))
                              R x0 x0) =>
                       H6
                         (Coq__Init__Logic.conj (R x0 x0)
                            (Coq__Program__Basics.flip A A
                               (cupicef.cast
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  cupicef.I
                                  (cupicef.univ cupicef.prop
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I))
                               R x0 x0)
                            __ __0)))
                   H4)
                  (H3 x0))
                 (H x0))
              H0))).

thm subrelation__partial__order__obligation__1 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (relation__equivalence
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I (Coq__Relations__Relation__Definitions.relation A))
       (relation__equivalence A)
       (relation__conjunction
          (cupicef.cast
             (cupicef.axiom
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I (Coq__Relations__Relation__Definitions.relation A))
          (subrelation A)
          (Coq__Program__Basics.flip
             (cupicef.cast
                (cupicef.axiom
                   (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ
                   (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z))))
                   cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I (Coq__Relations__Relation__Definitions.relation A))
             (cupicef.cast
                (cupicef.axiom
                   (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z))))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ
                   (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.type (cupicef.s cupicef.z))))
                   cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I (Coq__Relations__Relation__Definitions.relation A))
             (cupicef.cast (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I
                (cupicef.univ cupicef.prop
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I))
             (subrelation A))))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   x :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   x0 :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   Coq__Init__Logic.conj
     (cupicef.prod
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop))
        cupicef.prop
        (cupicef.rule
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop))
           cupicef.prop)
        cupicef.I
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop))
           cupicef.I A
           (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
              cupicef.I A
              (x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               Coq__Init__Logic.and
                 (cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x x1 x2)
                    (__ : cupicef.Term cupicef.prop (x x1 x2) => x0 x1 x2))
                 (cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x0 x1 x2)
                    (__ : cupicef.Term cupicef.prop (x0 x1 x2) => x x1 x2)))))
        (__ :
           (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            cupicef.Term cupicef.prop
              (Coq__Init__Logic.and
                 (cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x x1 x2)
                    (__ : cupicef.Term cupicef.prop (x x1 x2) => x0 x1 x2))
                 (cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x0 x1 x2)
                    (__ : cupicef.Term cupicef.prop (x0 x1 x2) => x x1 x2)))) =>
         Coq__Init__Logic.and
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x x1 y)
                    (__0 : cupicef.Term cupicef.prop (x x1 y) => x0 x1 y))))
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x0 x1 y)
                    (__0 : cupicef.Term cupicef.prop (x0 x1 y) => x x1 y))))))
     (cupicef.prod cupicef.prop
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop))
        (cupicef.rule cupicef.prop
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)))
        cupicef.I
        (Coq__Init__Logic.and
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x x1 y)
                    (__ : cupicef.Term cupicef.prop (x x1 y) => x0 x1 y))))
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x0 x1 y)
                    (__ : cupicef.Term cupicef.prop (x0 x1 y) => x x1 y)))))
        (__ :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.and
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule cupicef.prop cupicef.prop)))
                   cupicef.I A
                   (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop)
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule cupicef.prop cupicef.prop))
                      cupicef.I A
                      (y :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.prod cupicef.prop cupicef.prop
                         (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                         (x x1 y)
                         (__ : cupicef.Term cupicef.prop (x x1 y) => x0 x1 y))))
                (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule cupicef.prop cupicef.prop)))
                   cupicef.I A
                   (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop)
                      (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.rule cupicef.prop cupicef.prop))
                      cupicef.I A
                      (y :
                         cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                       cupicef.prod cupicef.prop cupicef.prop
                         (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                         (x0 x1 y)
                         (__ : cupicef.Term cupicef.prop (x0 x1 y) => x x1 y))))) =>
         cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop))
           cupicef.I A
           (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
              cupicef.I A
              (x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               Coq__Init__Logic.and
                 (cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x x1 x2)
                    (__0 : cupicef.Term cupicef.prop (x x1 x2) => x0 x1 x2))
                 (cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (x0 x1 x2)
                    (__0 : cupicef.Term cupicef.prop (x0 x1 x2) => x x1 x2))))))
     (H :
        (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
         x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
         cupicef.Term cupicef.prop
           (Coq__Init__Logic.and
              (cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 x x1 x2)
                 (__ : cupicef.Term cupicef.prop (x x1 x2) => x0 x1 x2))
              (cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (x0 x1 x2)
                 (__ : cupicef.Term cupicef.prop (x0 x1 x2) => x x1 x2)))) =>
      Coq__Init__Logic.conj
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 x x1 y) (__ : cupicef.Term cupicef.prop (x x1 y) => x0 x1 y))))
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 x0 x1 y)
                 (__ : cupicef.Term cupicef.prop (x0 x1 y) => x x1 y))))
        (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         H0 : cupicef.Term cupicef.prop (x x1 y) =>
         Coq__Init__Logic.and__ind
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (x x1 y)
              (__ : cupicef.Term cupicef.prop (x x1 y) => x0 x1 y))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (x0 x1 y)
              (__ : cupicef.Term cupicef.prop (x0 x1 y) => x x1 y))
           (x0 x1 y)
           (H2 :
              (__ : cupicef.Term cupicef.prop (x x1 y) ->
               cupicef.Term cupicef.prop (x0 x1 y)) =>
            H3 :
              (__ : cupicef.Term cupicef.prop (x0 x1 y) ->
               cupicef.Term cupicef.prop (x x1 y)) =>
            H2 H0)
           (H x1 y))
        (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         H0 : cupicef.Term cupicef.prop (x0 x1 y) =>
         Coq__Init__Logic.and__ind
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (x x1 y)
              (__ : cupicef.Term cupicef.prop (x x1 y) => x0 x1 y))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (x0 x1 y)
              (__ : cupicef.Term cupicef.prop (x0 x1 y) => x x1 y))
           (x x1 y)
           (H2 :
              (__ : cupicef.Term cupicef.prop (x x1 y) ->
               cupicef.Term cupicef.prop (x0 x1 y)) =>
            H3 :
              (__ : cupicef.Term cupicef.prop (x0 x1 y) ->
               cupicef.Term cupicef.prop (x x1 y)) =>
            H3 H0)
           (H x1 y)))
     (H :
        cupicef.Term cupicef.prop
          (Coq__Init__Logic.and
             (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop)))
                cupicef.I A
                (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop)
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop))
                   cupicef.I A
                   (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                      (x x1 y)
                      (__ : cupicef.Term cupicef.prop (x x1 y) => x0 x1 y))))
             (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop))
                (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop)))
                cupicef.I A
                (x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                 cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.rule cupicef.prop cupicef.prop)
                   (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.rule cupicef.prop cupicef.prop))
                   cupicef.I A
                   (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                    cupicef.prod cupicef.prop cupicef.prop
                      (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                      (x0 x1 y)
                      (__ : cupicef.Term cupicef.prop (x0 x1 y) => x x1 y))))) =>
      x1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      x2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      Coq__Init__Logic.and__ind
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 x x3 y) (__ : cupicef.Term cupicef.prop (x x3 y) => x0 x3 y))))
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (
                 x0 x3 y)
                 (__ : cupicef.Term cupicef.prop (x0 x3 y) => x x3 y))))
        (Coq__Init__Logic.and
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (x x1 x2)
              (__ : cupicef.Term cupicef.prop (x x1 x2) => x0 x1 x2))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (x0 x1 x2)
              (__ : cupicef.Term cupicef.prop (x0 x1 x2) => x x1 x2)))
        (H0 :
           (x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            __ : cupicef.Term cupicef.prop (x x3 y) ->
            cupicef.Term cupicef.prop (x0 x3 y)) =>
         H1 :
           (x3 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
            __ : cupicef.Term cupicef.prop (x0 x3 y) ->
            cupicef.Term cupicef.prop (x x3 y)) =>
         Coq__Init__Logic.conj
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (x x1 x2)
              (__ : cupicef.Term cupicef.prop (x x1 x2) => x0 x1 x2))
           (cupicef.prod cupicef.prop cupicef.prop
              (cupicef.rule cupicef.prop cupicef.prop) cupicef.I (x0 x1 x2)
              (__ : cupicef.Term cupicef.prop (x0 x1 x2) => x x1 x2))
           (H2 : cupicef.Term cupicef.prop (x x1 x2) => H0 x1 x2 H2)
           (H2 : cupicef.Term cupicef.prop (x0 x1 x2) => H1 x1 x2 H2))
        H).

def subrelation__partial__order :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  cupicef.Term cupicef.prop
    (PartialOrder
       (cupicef.cast
          (cupicef.axiom
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z))))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ
             (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom
                (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.type (cupicef.s cupicef.z))))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I (Coq__Relations__Relation__Definitions.relation A))
       (relation__equivalence A) (relation__equivalence__equivalence A)
       (subrelation A) (relation__implication__preorder A))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   (A0 : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
    subrelation__partial__order__obligation__1 A0) A.

#TYPE_CLASS_INSTANCE subrelation__partial__order.

(; End of translation. ;)
