(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

def Setoid__Theory :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  cupicef.Univ cupicef.prop

:= Coq__Classes__RelationClasses.Equivalence.

def Build__Setoid__Theory :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  Equivalence__Reflexive :
    cupicef.Term cupicef.prop (Coq__Classes__RelationClasses.Reflexive A R) ->
  Equivalence__Symmetric :
    cupicef.Term cupicef.prop (Coq__Classes__RelationClasses.Symmetric A R) ->
  Equivalence__Transitive :
    cupicef.Term cupicef.prop (Coq__Classes__RelationClasses.Transitive A R) ->
  cupicef.Term cupicef.prop (Coq__Classes__RelationClasses.Equivalence A R)

:= Coq__Classes__RelationClasses.Build__Equivalence.

def Seq__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  Aeq :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  s : cupicef.Term cupicef.prop (Setoid__Theory A Aeq) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (Aeq x x)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   Aeq :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   s : cupicef.Term cupicef.prop (Setoid__Theory A Aeq) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   Coq__Classes__RelationClasses.reflexivity A Aeq
     (Coq__Classes__RelationClasses.Equivalence__Reflexive A Aeq s) x.

def Seq__sym :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  Aeq :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  s : cupicef.Term cupicef.prop (Setoid__Theory A Aeq) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (Aeq x y) ->
  cupicef.Term cupicef.prop (Aeq y x)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   Aeq :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   s : cupicef.Term cupicef.prop (Setoid__Theory A Aeq) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H : cupicef.Term cupicef.prop (Aeq x y) =>
   Coq__Classes__RelationClasses.symmetry A Aeq
     (Coq__Classes__RelationClasses.Equivalence__Symmetric A Aeq s) x y H.

def Seq__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  Aeq :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  s : cupicef.Term cupicef.prop (Setoid__Theory A Aeq) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (Aeq x y) ->
  __0 : cupicef.Term cupicef.prop (Aeq y z) ->
  cupicef.Term cupicef.prop (Aeq x z)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   Aeq :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   s : cupicef.Term cupicef.prop (Setoid__Theory A Aeq) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   H : cupicef.Term cupicef.prop (Aeq x y) =>
   H0 : cupicef.Term cupicef.prop (Aeq y z) =>
   Coq__Classes__RelationClasses.transitivity A Aeq
     (Coq__Classes__RelationClasses.Equivalence__Transitive A Aeq s) x y z H
     H0.

thm gen__st :
  A : cupicef.Univ cupicef.set ->
  cupicef.Term cupicef.prop
    (Setoid__Theory
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)
       (Coq__Init__Logic.eq
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I A)))

:= A : cupicef.Univ cupicef.set =>
   Coq__Classes__RelationClasses.Build__Equivalence
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I A)
     (Coq__Init__Logic.eq
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I A))
     (cupicef.cast (cupicef.rule cupicef.set cupicef.prop) cupicef.prop
        (cupicef.prod cupicef.set cupicef.prop
           (cupicef.rule cupicef.set cupicef.prop) cupicef.I A
           (x : cupicef.Term cupicef.set A =>
            Coq__Init__Logic.eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)
              x x))
        (Coq__Classes__RelationClasses.Reflexive
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I A)
           (Coq__Init__Logic.eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)))
        cupicef.I
        (x : cupicef.Term cupicef.set A =>
         Coq__Init__Logic.eq__refl
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x))
     (cupicef.cast
        (cupicef.rule cupicef.set
           (cupicef.rule cupicef.set (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.prop
        (cupicef.prod cupicef.set
           (cupicef.rule cupicef.set (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule cupicef.set
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (x : cupicef.Term cupicef.set A =>
            cupicef.prod cupicef.set (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (y : cupicef.Term cupicef.set A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (Coq__Init__Logic.eq
                    (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ cupicef.set
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    x y)
                 (H :
                    cupicef.Term cupicef.prop
                      (Coq__Init__Logic.eq
                         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ cupicef.set
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I A)
                         x y) =>
                  Coq__Init__Logic.eq
                    (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ cupicef.set
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I A)
                    y x))))
        (Coq__Classes__RelationClasses.Symmetric
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I A)
           (Coq__Init__Logic.eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)))
        cupicef.I
        (x : cupicef.Term cupicef.set A =>
         y : cupicef.Term cupicef.set A =>
         H :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.eq
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x y) =>
         Coq__Init__Logic.eq__sym
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x y H))
     (cupicef.cast
        (cupicef.rule cupicef.set
           (cupicef.rule cupicef.set
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))))
        cupicef.prop
        (cupicef.prod cupicef.set
           (cupicef.rule cupicef.set
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))))
           (cupicef.rule cupicef.set
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.set
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))))
           cupicef.I A
           (x : cupicef.Term cupicef.set A =>
            cupicef.prod cupicef.set
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.set
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))))
              cupicef.I A
              (y : cupicef.Term cupicef.set A =>
               cupicef.prod cupicef.set
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))
                 (cupicef.rule cupicef.set
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))
                 cupicef.I A
                 (z : cupicef.Term cupicef.set A =>
                  cupicef.prod cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))
                    cupicef.I
                    (Coq__Init__Logic.eq
                       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ cupicef.set
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I A)
                       x y)
                    (H :
                       cupicef.Term cupicef.prop
                         (Coq__Init__Logic.eq
                            (cupicef.cast
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               (cupicef.univ cupicef.set
                                  (cupicef.type (cupicef.s cupicef.z))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  cupicef.I)
                               cupicef.I A)
                            x y) =>
                     cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (Coq__Init__Logic.eq
                          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ cupicef.set
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          y z)
                       (H0 :
                          cupicef.Term cupicef.prop
                            (Coq__Init__Logic.eq
                               (cupicef.cast
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  (cupicef.univ cupicef.set
                                     (cupicef.type (cupicef.s cupicef.z))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z))))
                                     cupicef.I)
                                  cupicef.I A)
                               y z) =>
                        Coq__Init__Logic.eq
                          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ cupicef.set
                                (cupicef.type (cupicef.s cupicef.z))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I A)
                          x z))))))
        (Coq__Classes__RelationClasses.Transitive
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              cupicef.I A)
           (Coq__Init__Logic.eq
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I A)))
        cupicef.I
        (x : cupicef.Term cupicef.set A =>
         y : cupicef.Term cupicef.set A =>
         z : cupicef.Term cupicef.set A =>
         H :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.eq
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                x y) =>
         H0 :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.eq
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I A)
                y z) =>
         Coq__Init__Logic.eq__trans
           (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I A)
           x y z H H0)).

(; End of translation. ;)
