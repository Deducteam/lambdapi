(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

def clos__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def t__step :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  cupicef.Term cupicef.prop (clos__trans A R x y).

def t__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (clos__trans A R x y) ->
  __0 : cupicef.Term cupicef.prop (clos__trans A R y z) ->
  cupicef.Term cupicef.prop (clos__trans A R x z).

[ ] cupicef.code_guarded? _ (t__step _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (t__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__trans :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__trans A R x __) ->
     cupicef.Univ s) ->
  case__t__step :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term s (P y (t__step A R x y __))) ->
  case__t__trans :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (clos__trans A R x y) ->
     __0 : cupicef.Term cupicef.prop (clos__trans A R y z) ->
     cupicef.Term s (P z (t__trans A R x y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__trans A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__t__step, case__t__trans, y, __]
  match____clos__trans s A R x P case__t__step case__t__trans {y}
    (t__step A R x y __)
  -->
  case__t__step y __.

[ s, A, R, x, P, case__t__step, case__t__trans, y, z, __, __0]
  match____clos__trans s A R x P case__t__step case__t__trans {z}
    (t__trans A R x y z __ __0)
  -->
  case__t__trans y z __ __0.

[ s, A, R, x, P, s']
  match____clos__trans s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__trans s' A R x (__ => x => P __ x).

def clos__trans__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term cupicef.prop (P x y)) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (clos__trans A R x y) ->
     __0 : cupicef.Term cupicef.prop (P x y) ->
     __1 : cupicef.Term cupicef.prop (clos__trans A R y z) ->
     __2 : cupicef.Term cupicef.prop (P y z) ->
     cupicef.Term cupicef.prop (P x z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__trans A R x a) ->
  cupicef.Term cupicef.prop (P x a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   P :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R x y) ->
      cupicef.Term cupicef.prop (P x y)) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (clos__trans A R x y) ->
      __0 : cupicef.Term cupicef.prop (P x y) ->
      __1 : cupicef.Term cupicef.prop (clos__trans A R y z) ->
      __2 : cupicef.Term cupicef.prop (P y z) ->
      cupicef.Term cupicef.prop (P x z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.2 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (clos__trans A R x a)
                    (c : cupicef.Term cupicef.prop (clos__trans A R x a) =>
                     P x a))))))
     (c =>
      c
        (F =>
         x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__trans A R x a) =>
         match____clos__trans cupicef.prop A R x
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ : cupicef.Term cupicef.prop (clos__trans A R x a0) =>
            P x a0)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R x y) =>
            f x y r)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            c0 : cupicef.Term cupicef.prop (clos__trans A R x y) =>
            c1 : cupicef.Term cupicef.prop (clos__trans A R y z) =>
            f0 x y z c0 (F x y c0) c1 (F y z c1))
           a c))
     cupicef.0.

def clos__trans__1n :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def t1n__step :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  cupicef.Term cupicef.prop (clos__trans__1n A R x y).

def t1n__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  __0 : cupicef.Term cupicef.prop (clos__trans__1n A R y z) ->
  cupicef.Term cupicef.prop (clos__trans__1n A R x z).

[ ] cupicef.code_guarded? _ (t1n__step _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (t1n__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__trans__1n :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__trans__1n A R x __) ->
     cupicef.Univ s) ->
  case__t1n__step :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term s (P y (t1n__step A R x y __))) ->
  case__t1n__trans :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     __0 : cupicef.Term cupicef.prop (clos__trans__1n A R y z) ->
     cupicef.Term s (P z (t1n__trans A R x y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__trans__1n A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__t1n__step, case__t1n__trans, y, __]
  match____clos__trans__1n s A R x P case__t1n__step case__t1n__trans {
    y} (t1n__step A R x y __)
  -->
  case__t1n__step y __.

[ s, A, R, x, P, case__t1n__step, case__t1n__trans, y, z, __, __0]
  match____clos__trans__1n s A R x P case__t1n__step case__t1n__trans {
    z} (t1n__trans A R x y z __ __0)
  -->
  case__t1n__trans y z __ __0.

[ s, A, R, x, P, s']
  match____clos__trans__1n s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__trans__1n s' A R x (__ => x => P __ x).

def clos__trans__1n__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term cupicef.prop (P x y)) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     __0 : cupicef.Term cupicef.prop (clos__trans__1n A R y z) ->
     __1 : cupicef.Term cupicef.prop (P y z) ->
     cupicef.Term cupicef.prop (P x z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__trans__1n A R x a) ->
  cupicef.Term cupicef.prop (P x a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   P :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R x y) ->
      cupicef.Term cupicef.prop (P x y)) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R x y) ->
      __0 : cupicef.Term cupicef.prop (clos__trans__1n A R y z) ->
      __1 : cupicef.Term cupicef.prop (P y z) ->
      cupicef.Term cupicef.prop (P x z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.2 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (clos__trans__1n A R x a)
                    (c : cupicef.Term cupicef.prop (clos__trans__1n A R x a) =>
                     P x a))))))
     (c =>
      c
        (F =>
         x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__trans__1n A R x a) =>
         match____clos__trans__1n cupicef.prop A R x
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ : cupicef.Term cupicef.prop (clos__trans__1n A R x a0) =>
            P x a0)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R x y) =>
            f x y r)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R x y) =>
            c0 : cupicef.Term cupicef.prop (clos__trans__1n A R y z) =>
            f0 x y z r c0 (F y z c0))
           a c))
     cupicef.0.

def clos__trans__n1 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def tn1__step :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  cupicef.Term cupicef.prop (clos__trans__n1 A R x y).

def tn1__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R y z) ->
  __0 : cupicef.Term cupicef.prop (clos__trans__n1 A R x y) ->
  cupicef.Term cupicef.prop (clos__trans__n1 A R x z).

[ ] cupicef.code_guarded? _ (tn1__step _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (tn1__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__trans__n1 :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__trans__n1 A R x __) ->
     cupicef.Univ s) ->
  case__tn1__step :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term s (P y (tn1__step A R x y __))) ->
  case__tn1__trans :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R y z) ->
     __0 : cupicef.Term cupicef.prop (clos__trans__n1 A R x y) ->
     cupicef.Term s (P z (tn1__trans A R x y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__trans__n1 A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__tn1__step, case__tn1__trans, y, __]
  match____clos__trans__n1 s A R x P case__tn1__step case__tn1__trans {
    y} (tn1__step A R x y __)
  -->
  case__tn1__step y __.

[ s, A, R, x, P, case__tn1__step, case__tn1__trans, y, z, __, __0]
  match____clos__trans__n1 s A R x P case__tn1__step case__tn1__trans {
    z} (tn1__trans A R x y z __ __0)
  -->
  case__tn1__trans y z __ __0.

[ s, A, R, x, P, s']
  match____clos__trans__n1 s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__trans__n1 s' A R x (__ => x => P __ x).

def clos__trans__n1__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term cupicef.prop (P y)) ->
  f0 :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R y z) ->
     __0 : cupicef.Term cupicef.prop (clos__trans__n1 A R x y) ->
     __1 : cupicef.Term cupicef.prop (P y) ->
     cupicef.Term cupicef.prop (P z)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__trans__n1 A R x a) ->
  cupicef.Term cupicef.prop (P a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f :
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R x y) ->
      cupicef.Term cupicef.prop (P y)) =>
   f0 :
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R y z) ->
      __0 : cupicef.Term cupicef.prop (clos__trans__n1 A R x y) ->
      __1 : cupicef.Term cupicef.prop (P y) ->
      cupicef.Term cupicef.prop (P z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.1 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (clos__trans__n1 A R x a)
                 (c : cupicef.Term cupicef.prop (clos__trans__n1 A R x a) =>
                  P a)))))
     (c =>
      c
        (F =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__trans__n1 A R x a) =>
         match____clos__trans__n1 cupicef.prop A R x
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ : cupicef.Term cupicef.prop (clos__trans__n1 A R x a0) =>
            P a0)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R x y) =>
            f y r)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R y z) =>
            c0 : cupicef.Term cupicef.prop (clos__trans__n1 A R x y) =>
            f0 y z r c0 (F y c0))
           a c))
     cupicef.0.

def clos__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def r__step :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  cupicef.Term cupicef.prop (clos__refl A R x y).

def r__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (clos__refl A R x x).

[ ] cupicef.code_guarded? _ (r__step _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (r__refl _ _ _) --> cupicef.guarded.

def match____clos__refl :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__refl A R x __) ->
     cupicef.Univ s) ->
  case__r__step :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term s (P y (r__step A R x y __))) ->
  case__r__refl : cupicef.Term s (P x (r__refl A R x)) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__refl A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__r__step, case__r__refl, y, __]
  match____clos__refl s A R x P case__r__step case__r__refl {y}
    (r__step A R x y __)
  -->
  case__r__step y __.

[ s, A, R, x, P, case__r__step, case__r__refl]
  match____clos__refl s A R x P case__r__step case__r__refl {x}
    (r__refl A R x)
  -->
  case__r__refl.

[ s, A, R, x, P, s']
  match____clos__refl s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__refl s' A R x (__ => x => P __ x).

def clos__refl__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term cupicef.prop (P y)) ->
  f0 : cupicef.Term cupicef.prop (P x) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__refl A R x a) ->
  cupicef.Term cupicef.prop (P a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f :
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R x y) ->
      cupicef.Term cupicef.prop (P y)) =>
   f0 : cupicef.Term cupicef.prop (P x) =>
   a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   c : cupicef.Term cupicef.prop (clos__refl A R x a) =>
   match____clos__refl cupicef.prop A R x
     (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      __ : cupicef.Term cupicef.prop (clos__refl A R x a0) =>
      P a0)
     f f0 a c.

def clos__refl__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def rt__step :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  cupicef.Term cupicef.prop (clos__refl__trans A R x y).

def rt__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (clos__refl__trans A R x x).

def rt__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (clos__refl__trans A R x y) ->
  __0 : cupicef.Term cupicef.prop (clos__refl__trans A R y z) ->
  cupicef.Term cupicef.prop (clos__refl__trans A R x z).

[ ] cupicef.code_guarded? _ (rt__step _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rt__refl _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rt__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__refl__trans :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__refl__trans A R x __) ->
     cupicef.Univ s) ->
  case__rt__step :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term s (P y (rt__step A R x y __))) ->
  case__rt__refl : cupicef.Term s (P x (rt__refl A R x)) ->
  case__rt__trans :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (clos__refl__trans A R x y) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__trans A R y z) ->
     cupicef.Term s (P z (rt__trans A R x y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__refl__trans A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__rt__step, case__rt__refl, case__rt__trans, y, __]
  match____clos__refl__trans s A R x P case__rt__step case__rt__refl
    case__rt__trans {y} (rt__step A R x y __)
  -->
  case__rt__step y __.

[ s, A, R, x, P, case__rt__step, case__rt__refl, case__rt__trans]
  match____clos__refl__trans s A R x P case__rt__step case__rt__refl
    case__rt__trans {x} (rt__refl A R x)
  -->
  case__rt__refl.

[ s, A, R, x, P, case__rt__step, case__rt__refl, case__rt__trans, y, z, __, __0]
  match____clos__refl__trans s A R x P case__rt__step case__rt__refl
    case__rt__trans {z} (rt__trans A R x y z __ __0)
  -->
  case__rt__trans y z __ __0.

[ s, A, R, x, P, s']
  match____clos__refl__trans s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__refl__trans s' A R x (__ => x => P __ x).

def clos__refl__trans__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term cupicef.prop (P x y)) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (P x x)) ->
  f1 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (clos__refl__trans A R x y) ->
     __0 : cupicef.Term cupicef.prop (P x y) ->
     __1 : cupicef.Term cupicef.prop (clos__refl__trans A R y z) ->
     __2 : cupicef.Term cupicef.prop (P y z) ->
     cupicef.Term cupicef.prop (P x z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__refl__trans A R x a) ->
  cupicef.Term cupicef.prop (P x a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   P :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R x y) ->
      cupicef.Term cupicef.prop (P x y)) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop (P x x)) =>
   f1 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (clos__refl__trans A R x y) ->
      __0 : cupicef.Term cupicef.prop (P x y) ->
      __1 : cupicef.Term cupicef.prop (clos__refl__trans A R y z) ->
      __2 : cupicef.Term cupicef.prop (P y z) ->
      cupicef.Term cupicef.prop (P x z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.2 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (clos__refl__trans A R x a)
                    (c :
                       cupicef.Term cupicef.prop (clos__refl__trans A R x a) =>
                     P x a))))))
     (c =>
      c
        (F =>
         x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__refl__trans A R x a) =>
         match____clos__refl__trans cupicef.prop A R x
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ : cupicef.Term cupicef.prop (clos__refl__trans A R x a0) =>
            P x a0)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R x y) =>
            f x y r)
           (f0 x)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            c0 : cupicef.Term cupicef.prop (clos__refl__trans A R x y) =>
            c1 : cupicef.Term cupicef.prop (clos__refl__trans A R y z) =>
            f1 x y z c0 (F x y c0) c1 (F y z c1))
           a c))
     cupicef.0.

def clos__refl__trans__1n :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def rt1n__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (clos__refl__trans__1n A R x x).

def rt1n__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  __0 : cupicef.Term cupicef.prop (clos__refl__trans__1n A R y z) ->
  cupicef.Term cupicef.prop (clos__refl__trans__1n A R x z).

[ ] cupicef.code_guarded? _ (rt1n__refl _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rt1n__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__refl__trans__1n :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__refl__trans__1n A R x __) ->
     cupicef.Univ s) ->
  case__rt1n__refl : cupicef.Term s (P x (rt1n__refl A R x)) ->
  case__rt1n__trans :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__trans__1n A R y z) ->
     cupicef.Term s (P z (rt1n__trans A R x y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__refl__trans__1n A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__rt1n__refl, case__rt1n__trans]
  match____clos__refl__trans__1n s A R x P case__rt1n__refl case__rt1n__trans
    {x} (rt1n__refl A R x)
  -->
  case__rt1n__refl.

[ s, A, R, x, P, case__rt1n__refl, case__rt1n__trans, y, z, __, __0]
  match____clos__refl__trans__1n s A R x P case__rt1n__refl case__rt1n__trans
    {z} (rt1n__trans A R x y z __ __0)
  -->
  case__rt1n__trans y z __ __0.

[ s, A, R, x, P, s']
  match____clos__refl__trans__1n s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__refl__trans__1n s' A R x (__ => x => P __ x).

def clos__refl__trans__1n__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (P x x)) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__trans__1n A R y z) ->
     __1 : cupicef.Term cupicef.prop (P y z) ->
     cupicef.Term cupicef.prop (P x z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__refl__trans__1n A R x a) ->
  cupicef.Term cupicef.prop (P x a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   P :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop (P x x)) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R x y) ->
      __0 : cupicef.Term cupicef.prop (clos__refl__trans__1n A R y z) ->
      __1 : cupicef.Term cupicef.prop (P y z) ->
      cupicef.Term cupicef.prop (P x z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.2 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (clos__refl__trans__1n A R x a)
                    (c :
                       cupicef.Term cupicef.prop
                         (clos__refl__trans__1n A R x a) =>
                     P x a))))))
     (c =>
      c
        (F =>
         x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__refl__trans__1n A R x a) =>
         match____clos__refl__trans__1n cupicef.prop A R x
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ : cupicef.Term cupicef.prop (clos__refl__trans__1n A R x a0) =>
            P x a0)
           (f x)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R x y) =>
            c0 : cupicef.Term cupicef.prop (clos__refl__trans__1n A R y z) =>
            f0 x y z r c0 (F y z c0))
           a c))
     cupicef.0.

def clos__refl__trans__n1 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def rtn1__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x x).

def rtn1__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R y z) ->
  __0 : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x y) ->
  cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x z).

[ ] cupicef.code_guarded? _ (rtn1__refl _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rtn1__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__refl__trans__n1 :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x __) ->
     cupicef.Univ s) ->
  case__rtn1__refl : cupicef.Term s (P x (rtn1__refl A R x)) ->
  case__rtn1__trans :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R y z) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x y) ->
     cupicef.Term s (P z (rtn1__trans A R x y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__rtn1__refl, case__rtn1__trans]
  match____clos__refl__trans__n1 s A R x P case__rtn1__refl case__rtn1__trans
    {x} (rtn1__refl A R x)
  -->
  case__rtn1__refl.

[ s, A, R, x, P, case__rtn1__refl, case__rtn1__trans, y, z, __, __0]
  match____clos__refl__trans__n1 s A R x P case__rtn1__refl case__rtn1__trans
    {z} (rtn1__trans A R x y z __ __0)
  -->
  case__rtn1__trans y z __ __0.

[ s, A, R, x, P, s']
  match____clos__refl__trans__n1 s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__refl__trans__n1 s' A R x (__ => x => P __ x).

def clos__refl__trans__n1__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f : cupicef.Term cupicef.prop (P x) ->
  f0 :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R y z) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x y) ->
     __1 : cupicef.Term cupicef.prop (P y) ->
     cupicef.Term cupicef.prop (P z)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x a) ->
  cupicef.Term cupicef.prop (P a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f : cupicef.Term cupicef.prop (P x) =>
   f0 :
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R y z) ->
      __0 : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x y) ->
      __1 : cupicef.Term cupicef.prop (P y) ->
      cupicef.Term cupicef.prop (P z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.1 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (clos__refl__trans__n1 A R x a)
                 (c :
                    cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x a) =>
                  P a)))))
     (c =>
      c
        (F =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x a) =>
         match____clos__refl__trans__n1 cupicef.prop A R x
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x a0) =>
            P a0)
           f
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R y z) =>
            c0 : cupicef.Term cupicef.prop (clos__refl__trans__n1 A R x y) =>
            f0 y z r c0 (F y c0))
           a c))
     cupicef.0.

def clos__refl__sym__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def rst__step :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (R x y) ->
  cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y).

def rst__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (clos__refl__sym__trans A R x x).

def rst__sym :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y) ->
  cupicef.Term cupicef.prop (clos__refl__sym__trans A R y x).

def rst__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y) ->
  __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans A R y z) ->
  cupicef.Term cupicef.prop (clos__refl__sym__trans A R x z).

[ ] cupicef.code_guarded? _ (rst__step _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rst__refl _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rst__sym _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rst__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__refl__sym__trans :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__refl__sym__trans A R __ __0) ->
     cupicef.Univ s) ->
  case__rst__step :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x0 y) ->
     cupicef.Term s (P x0 y (rst__step A R x0 y __))) ->
  case__rst__refl :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term s (P x0 x0 (rst__refl A R x0))) ->
  case__rst__sym :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x0 y) ->
     cupicef.Term s (P y x0 (rst__sym A R x0 y __))) ->
  case__rst__trans :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x0 y) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans A R y z) ->
     cupicef.Term s (P x0 z (rst__trans A R x0 y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x : cupicef.Term cupicef.prop (clos__refl__sym__trans A R __ __0) ->
  cupicef.Term s (P __ __0 x).

[ s, A, R, P, case__rst__step, case__rst__refl, case__rst__sym, case__rst__trans, x0, y, __]
  match____clos__refl__sym__trans s A R P case__rst__step case__rst__refl
    case__rst__sym case__rst__trans {x0} {y} (rst__step A R x0 y __)
  -->
  case__rst__step x0 y __.

[ s, A, R, P, case__rst__step, case__rst__refl, case__rst__sym, case__rst__trans, x0]
  match____clos__refl__sym__trans s A R P case__rst__step case__rst__refl
    case__rst__sym case__rst__trans {x0} {x0} (rst__refl A R x0)
  -->
  case__rst__refl x0.

[ s, A, R, P, case__rst__step, case__rst__refl, case__rst__sym, case__rst__trans, x0, y, __]
  match____clos__refl__sym__trans s A R P case__rst__step case__rst__refl
    case__rst__sym case__rst__trans {y} {x0} (rst__sym A R x0 y __)
  -->
  case__rst__sym x0 y __.

[ s, A, R, P, case__rst__step, case__rst__refl, case__rst__sym, case__rst__trans, x0, y, z, __, __0]
  match____clos__refl__sym__trans s A R P case__rst__step case__rst__refl
    case__rst__sym case__rst__trans {x0} {z} (rst__trans A R x0 y z __ __0)
  -->
  case__rst__trans x0 y z __ __0.

[ s, A, R, P, s']
  match____clos__refl__sym__trans s A R
    (__ =>
     __0 =>
     x =>
     cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ __0 x)))
  -->
  match____clos__refl__sym__trans s' A R (__ => __0 => x => P __ __0 x).

def clos__refl__sym__trans__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (R x y) ->
     cupicef.Term cupicef.prop (P x y)) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (P x x)) ->
  f1 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y) ->
     __0 : cupicef.Term cupicef.prop (P x y) ->
     cupicef.Term cupicef.prop (P y x)) ->
  f2 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y) ->
     __0 : cupicef.Term cupicef.prop (P x y) ->
     __1 : cupicef.Term cupicef.prop (clos__refl__sym__trans A R y z) ->
     __2 : cupicef.Term cupicef.prop (P y z) ->
     cupicef.Term cupicef.prop (P x z)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__refl__sym__trans A R a a0) ->
  cupicef.Term cupicef.prop (P a a0)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (R x y) ->
      cupicef.Term cupicef.prop (P x y)) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop (P x x)) =>
   f1 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y) ->
      __0 : cupicef.Term cupicef.prop (P x y) ->
      cupicef.Term cupicef.prop (P y x)) =>
   f2 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y) ->
      __0 : cupicef.Term cupicef.prop (P x y) ->
      __1 : cupicef.Term cupicef.prop (clos__refl__sym__trans A R y z) ->
      __2 : cupicef.Term cupicef.prop (P y z) ->
      cupicef.Term cupicef.prop (P x z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.2 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (clos__refl__sym__trans A R a a0)
                    (c :
                       cupicef.Term cupicef.prop
                         (clos__refl__sym__trans A R a a0) =>
                     P a a0))))))
     (c =>
      c
        (F =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__refl__sym__trans A R a a0) =>
         match____clos__refl__sym__trans cupicef.prop A R
           (a1 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            a2 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ : cupicef.Term cupicef.prop (clos__refl__sym__trans A R a1 a2) =>
            P a1 a2)
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r : cupicef.Term cupicef.prop (R x y) =>
            f x y r)
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A => f0 x)
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            c0 : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y) =>
            f1 x y c0 (F x y c0))
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            c0 : cupicef.Term cupicef.prop (clos__refl__sym__trans A R x y) =>
            c1 : cupicef.Term cupicef.prop (clos__refl__sym__trans A R y z) =>
            f2 x y z c0 (F x y c0) c1 (F y z c1))
           a a0 c))
     cupicef.0.

def clos__refl__sym__trans__1n :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def rst1n__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R x x).

def rst1n__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (Coq__Init__Logic.or (R x y) (R y x)) ->
  __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R y z) ->
  cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R x z).

[ ] cupicef.code_guarded? _ (rst1n__refl _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rst1n__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__refl__sym__trans__1n :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R x __) ->
     cupicef.Univ s) ->
  case__rst1n__refl : cupicef.Term s (P x (rst1n__refl A R x)) ->
  case__rst1n__trans :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (Coq__Init__Logic.or (R x y) (R y x)) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R y z) ->
     cupicef.Term s (P z (rst1n__trans A R x y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__rst1n__refl, case__rst1n__trans]
  match____clos__refl__sym__trans__1n s A R x P case__rst1n__refl
    case__rst1n__trans {x} (rst1n__refl A R x)
  -->
  case__rst1n__refl.

[ s, A, R, x, P, case__rst1n__refl, case__rst1n__trans, y, z, __, __0]
  match____clos__refl__sym__trans__1n s A R x P case__rst1n__refl
    case__rst1n__trans {z} (rst1n__trans A R x y z __ __0)
  -->
  case__rst1n__trans y z __ __0.

[ s, A, R, x, P, s']
  match____clos__refl__sym__trans__1n s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__refl__sym__trans__1n s' A R x (__ => x => P __ x).

def clos__refl__sym__trans__1n__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  P :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (P x x)) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (Coq__Init__Logic.or (R x y) (R y x)) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R y z) ->
     __1 : cupicef.Term cupicef.prop (P y z) ->
     cupicef.Term cupicef.prop (P x z)) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R x a) ->
  cupicef.Term cupicef.prop (P x a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   P :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop (P x x)) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (Coq__Init__Logic.or (R x y) (R y x)) ->
      __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R y z) ->
      __1 : cupicef.Term cupicef.prop (P y z) ->
      cupicef.Term cupicef.prop (P x z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.2 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I A
              (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I A
                 (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (clos__refl__sym__trans__1n A R x a)
                    (c :
                       cupicef.Term cupicef.prop
                         (clos__refl__sym__trans__1n A R x a) =>
                     P x a))))))
     (c =>
      c
        (F =>
         x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R x a) =>
         match____clos__refl__sym__trans__1n cupicef.prop A R x
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ :
              cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R x a0) =>
            P x a0)
           (f x)
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            o :
              cupicef.Term cupicef.prop (Coq__Init__Logic.or (R x y) (R y x)) =>
            c0 :
              cupicef.Term cupicef.prop (clos__refl__sym__trans__1n A R y z) =>
            f0 x y z o c0 (F y z c0))
           a c))
     cupicef.0.

def clos__refl__sym__trans__n1 :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop.

def rstn1__refl :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x x).

def rstn1__trans :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (Coq__Init__Logic.or (R y z) (R z y)) ->
  __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x y) ->
  cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x z).

[ ] cupicef.code_guarded? _ (rstn1__refl _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (rstn1__trans _ _ _ _ _ _ _) --> cupicef.guarded.

def match____clos__refl__sym__trans__n1 :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x __) ->
     cupicef.Univ s) ->
  case__rstn1__refl : cupicef.Term s (P x (rstn1__refl A R x)) ->
  case__rstn1__trans :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (Coq__Init__Logic.or (R y z) (R z y)) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x y) ->
     cupicef.Term s (P z (rstn1__trans A R x y z __ __0))) ->
  __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x __) ->
  cupicef.Term s (P __ x0).

[ s, A, R, x, P, case__rstn1__refl, case__rstn1__trans]
  match____clos__refl__sym__trans__n1 s A R x P case__rstn1__refl
    case__rstn1__trans {x} (rstn1__refl A R x)
  -->
  case__rstn1__refl.

[ s, A, R, x, P, case__rstn1__refl, case__rstn1__trans, y, z, __, __0]
  match____clos__refl__sym__trans__n1 s A R x P case__rstn1__refl
    case__rstn1__trans {z} (rstn1__trans A R x y z __ __0)
  -->
  case__rstn1__trans y z __ __0.

[ s, A, R, x, P, s']
  match____clos__refl__sym__trans__n1 s A R x
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____clos__refl__sym__trans__n1 s' A R x (__ => x => P __ x).

def clos__refl__sym__trans__n1__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  P :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  f : cupicef.Term cupicef.prop (P x) ->
  f0 :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (Coq__Init__Logic.or (R y z) (R z y)) ->
     __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x y) ->
     __1 : cupicef.Term cupicef.prop (P y) ->
     cupicef.Term cupicef.prop (P z)) ->
  a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  c : cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x a) ->
  cupicef.Term cupicef.prop (P a)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   P :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   f : cupicef.Term cupicef.prop (P x) =>
   f0 :
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (Coq__Init__Logic.or (R y z) (R z y)) ->
      __0 : cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x y) ->
      __1 : cupicef.Term cupicef.prop (P y) ->
      cupicef.Term cupicef.prop (P z)) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.1 cupicef.prop
           (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (clos__refl__sym__trans__n1 A R x a)
                 (c :
                    cupicef.Term cupicef.prop
                      (clos__refl__sym__trans__n1 A R x a) =>
                  P a)))))
     (c =>
      c
        (F =>
         a : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         c : cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x a) =>
         match____clos__refl__sym__trans__n1 cupicef.prop A R x
           (a0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            __ :
              cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x a0) =>
            P a0)
           f
           (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            o :
              cupicef.Term cupicef.prop (Coq__Init__Logic.or (R y z) (R z y)) =>
            c0 :
              cupicef.Term cupicef.prop (clos__refl__sym__trans__n1 A R x y) =>
            f0 y z o c0 (F y c0))
           a c))
     cupicef.0.

def transp :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   R y x.

def union :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R1 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  R2 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation A) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R1 :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   R2 :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation A) =>
   x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
   Coq__Init__Logic.or (R1 x y) (R2 x y).

def le__AsB :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  __ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
      (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  __0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
      (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  cupicef.Univ cupicef.prop.

def le__aa :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (leA x y) ->
  cupicef.Term cupicef.prop
    (le__AsB A B leA leB (Coq__Init__Datatypes.inl A B x)
       (Coq__Init__Datatypes.inl A B y)).

def le__ab :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
  cupicef.Term cupicef.prop
    (le__AsB A B leA leB (Coq__Init__Datatypes.inl A B x)
       (Coq__Init__Datatypes.inr A B y)).

def le__bb :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
  __ : cupicef.Term cupicef.prop (leB x y) ->
  cupicef.Term cupicef.prop
    (le__AsB A B leA leB (Coq__Init__Datatypes.inr A B x)
       (Coq__Init__Datatypes.inr A B y)).

[ ] cupicef.code_guarded? _ (le__aa _ _ _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (le__ab _ _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (le__bb _ _ _ _ _ _ _) --> cupicef.guarded.

def match____le__AsB :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
         (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     __0 :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
         (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     cupicef.Term cupicef.prop (le__AsB A B leA leB __ __0) ->
     cupicef.Univ s) ->
  case__le__aa :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (leA x0 y) ->
     cupicef.Term s
       (P (Coq__Init__Datatypes.inl A B x0) (Coq__Init__Datatypes.inl A B y)
          (le__aa A B leA leB x0 y __))) ->
  case__le__ab :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Term s
       (P (Coq__Init__Datatypes.inl A B x0) (Coq__Init__Datatypes.inr A B y)
          (le__ab A B leA leB x0 y))) ->
  case__le__bb :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __ : cupicef.Term cupicef.prop (leB x0 y) ->
     cupicef.Term s
       (P (Coq__Init__Datatypes.inr A B x0) (Coq__Init__Datatypes.inr A B y)
          (le__bb A B leA leB x0 y __))) ->
  __ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
      (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  __0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
      (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  x : cupicef.Term cupicef.prop (le__AsB A B leA leB __ __0) ->
  cupicef.Term s (P __ __0 x).

[ s, A, B, leA, leB, P, case__le__aa, case__le__ab, case__le__bb, x0, y, __]
  match____le__AsB s A B leA leB P case__le__aa case__le__ab case__le__bb
    {Coq__Init__Datatypes.inl A B x0} {Coq__Init__Datatypes.inl A B y}
    (le__aa A B leA leB x0 y __)
  -->
  case__le__aa x0 y __.

[ s, A, B, leA, leB, P, case__le__aa, case__le__ab, case__le__bb, x0, y]
  match____le__AsB s A B leA leB P case__le__aa case__le__ab case__le__bb
    {Coq__Init__Datatypes.inl A B x0} {Coq__Init__Datatypes.inr A B y}
    (le__ab A B leA leB x0 y)
  -->
  case__le__ab x0 y.

[ s, A, B, leA, leB, P, case__le__aa, case__le__ab, case__le__bb, x0, y, __]
  match____le__AsB s A B leA leB P case__le__aa case__le__ab case__le__bb
    {Coq__Init__Datatypes.inr A B x0} {Coq__Init__Datatypes.inr A B y}
    (le__bb A B leA leB x0 y __)
  -->
  case__le__bb x0 y __.

[ s, A, B, leA, leB, P, s']
  match____le__AsB s A B leA leB
    (__ =>
     __0 =>
     x =>
     cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ __0 x)))
  -->
  match____le__AsB s' A B leA leB (__ => __0 => x => P __ __0 x).

def le__AsB__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
         (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     __0 :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
         (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (leA x y) ->
     cupicef.Term cupicef.prop
       (P (Coq__Init__Datatypes.inl A B x) (Coq__Init__Datatypes.inl A B y))) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Term cupicef.prop
       (P (Coq__Init__Datatypes.inl A B x) (Coq__Init__Datatypes.inr A B y))) ->
  f1 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __ : cupicef.Term cupicef.prop (leB x y) ->
     cupicef.Term cupicef.prop
       (P (Coq__Init__Datatypes.inr A B x) (Coq__Init__Datatypes.inr A B y))) ->
  s :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
      (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  s0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
      (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  l : cupicef.Term cupicef.prop (le__AsB A B leA leB s s0) ->
  cupicef.Term cupicef.prop (P s s0)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   leA :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   leB :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      cupicef.Univ cupicef.prop) =>
   P :
     (__ :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
          (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) ->
      __0 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
          (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (leA x y) ->
      cupicef.Term cupicef.prop
        (P (Coq__Init__Datatypes.inl A B x) (Coq__Init__Datatypes.inl A B y))) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      cupicef.Term cupicef.prop
        (P (Coq__Init__Datatypes.inl A B x) (Coq__Init__Datatypes.inr A B y))) =>
   f1 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      __ : cupicef.Term cupicef.prop (leB x y) ->
      cupicef.Term cupicef.prop
        (P (Coq__Init__Datatypes.inr A B x) (Coq__Init__Datatypes.inr A B y))) =>
   s :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
       (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)) A B) =>
   s0 :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
       (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)) A B) =>
   l : cupicef.Term cupicef.prop (le__AsB A B leA leB s s0) =>
   match____le__AsB cupicef.prop A B leA leB
     (s1 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
          (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) =>
      s2 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z)) cupicef.set)
          (Coq__Init__Datatypes.sum (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) =>
      __ : cupicef.Term cupicef.prop (le__AsB A B leA leB s1 s2) =>
      P s1 s2)
     f f0 f1 s s0 l.

def lexprod :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     cupicef.Univ cupicef.prop) ->
  __ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  __0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  cupicef.Univ cupicef.prop.

def left__lex :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
  y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x_27_) ->
  __ : cupicef.Term cupicef.prop (leA x x_27_) ->
  cupicef.Term cupicef.prop
    (lexprod A B leA leB (Coq__Init__Specif.existT A B x y)
       (Coq__Init__Specif.existT A B x_27_ y_27_)).

def right__lex :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
  y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
  __ : cupicef.Term cupicef.prop (leB x y y_27_) ->
  cupicef.Term cupicef.prop
    (lexprod A B leA leB (Coq__Init__Specif.existT A B x y)
       (Coq__Init__Specif.existT A B x y_27_)).

[ ] cupicef.code_guarded? _ (left__lex _ _ _ _ _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (right__lex _ _ _ _ _ _ _ _) --> cupicef.guarded.

def match____lexprod :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)))
         (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     __0 :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)))
         (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     cupicef.Term cupicef.prop (lexprod A B leA leB __ __0) ->
     cupicef.Univ s) ->
  case__left__lex :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x0) ->
     y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x_27_) ->
     __ : cupicef.Term cupicef.prop (leA x0 x_27_) ->
     cupicef.Term s
       (P (Coq__Init__Specif.existT A B x0 y)
          (Coq__Init__Specif.existT A B x_27_ y_27_)
          (left__lex A B leA leB x0 x_27_ y y_27_ __))) ->
  case__right__lex :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x0) ->
     y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x0) ->
     __ : cupicef.Term cupicef.prop (leB x0 y y_27_) ->
     cupicef.Term s
       (P (Coq__Init__Specif.existT A B x0 y)
          (Coq__Init__Specif.existT A B x0 y_27_)
          (right__lex A B leA leB x0 y y_27_ __))) ->
  __ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  __0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  x : cupicef.Term cupicef.prop (lexprod A B leA leB __ __0) ->
  cupicef.Term s (P __ __0 x).

[ s, A, B, leA, leB, P, case__left__lex, case__right__lex, x0, x_27_, y, y_27_, __]
  match____lexprod s A B leA leB P case__left__lex case__right__lex
    {Coq__Init__Specif.existT A B x0 y}
    {Coq__Init__Specif.existT A B x_27_ y_27_}
    (left__lex A B leA leB x0 x_27_ y y_27_ __)
  -->
  case__left__lex x0 x_27_ y y_27_ __.

[ s, A, B, leA, leB, P, case__left__lex, case__right__lex, x0, y, y_27_, __]
  match____lexprod s A B leA leB P case__left__lex case__right__lex
    {Coq__Init__Specif.existT A B x0 y}
    {Coq__Init__Specif.existT A B x0 y_27_}
    (right__lex A B leA leB x0 y y_27_ __)
  -->
  case__right__lex x0 y y_27_ __.

[ s, A, B, leA, leB, P, s']
  match____lexprod s A B leA leB
    (__ =>
     __0 =>
     x =>
     cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ __0 x)))
  -->
  match____lexprod s' A B leA leB (__ => __0 => x => P __ __0 x).

def lexprod__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)))
         (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     __0 :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)))
         (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x_27_) ->
     __ : cupicef.Term cupicef.prop (leA x x_27_) ->
     cupicef.Term cupicef.prop
       (P (Coq__Init__Specif.existT A B x y)
          (Coq__Init__Specif.existT A B x_27_ y_27_))) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
     __ : cupicef.Term cupicef.prop (leB x y y_27_) ->
     cupicef.Term cupicef.prop
       (P (Coq__Init__Specif.existT A B x y)
          (Coq__Init__Specif.existT A B x y_27_))) ->
  s :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  s0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  l : cupicef.Term cupicef.prop (lexprod A B leA leB s s0) ->
  cupicef.Term cupicef.prop (P s s0)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ (cupicef.type (cupicef.s cupicef.z))) =>
   leA :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   leB :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
      cupicef.Univ cupicef.prop) =>
   P :
     (__ :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)))
          (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) ->
      __0 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)))
          (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
      y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x_27_) ->
      __ : cupicef.Term cupicef.prop (leA x x_27_) ->
      cupicef.Term cupicef.prop
        (P (Coq__Init__Specif.existT A B x y)
           (Coq__Init__Specif.existT A B x_27_ y_27_))) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
      y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) (B x) ->
      __ : cupicef.Term cupicef.prop (leB x y y_27_) ->
      cupicef.Term cupicef.prop
        (P (Coq__Init__Specif.existT A B x y)
           (Coq__Init__Specif.existT A B x y_27_))) =>
   s :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)) A B) =>
   s0 :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)) A B) =>
   l : cupicef.Term cupicef.prop (lexprod A B leA leB s s0) =>
   match____lexprod cupicef.prop A B leA leB
     (s1 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)))
          (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) =>
      s2 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)))
          (Coq__Init__Specif.sigT (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) =>
      __ : cupicef.Term cupicef.prop (lexprod A B leA leB s1 s2) =>
      P s1 s2)
     f f0 s s0 l.

def symprod :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  __ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  __0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  cupicef.Univ cupicef.prop.

def left__sym :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  __ : cupicef.Term cupicef.prop (leA x x_27_) ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
  cupicef.Term cupicef.prop
    (symprod A B leA leB (Coq__Init__Datatypes.pair A B x y)
       (Coq__Init__Datatypes.pair A B x_27_ y)).

def right__sym :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
  y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
  __ : cupicef.Term cupicef.prop (leB y y_27_) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  cupicef.Term cupicef.prop
    (symprod A B leA leB (Coq__Init__Datatypes.pair A B x y)
       (Coq__Init__Datatypes.pair A B x y_27_)).

[ ] cupicef.code_guarded? _ (left__sym _ _ _ _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (right__sym _ _ _ _ _ _ _ _) --> cupicef.guarded.

def match____symprod :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     __0 :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     cupicef.Term cupicef.prop (symprod A B leA leB __ __0) ->
     cupicef.Univ s) ->
  case__left__sym :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (leA x0 x_27_) ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Term s
       (P (Coq__Init__Datatypes.pair A B x0 y)
          (Coq__Init__Datatypes.pair A B x_27_ y)
          (left__sym A B leA leB x0 x_27_ __ y))) ->
  case__right__sym :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __ : cupicef.Term cupicef.prop (leB y y_27_) ->
     x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term s
       (P (Coq__Init__Datatypes.pair A B x0 y)
          (Coq__Init__Datatypes.pair A B x0 y_27_)
          (right__sym A B leA leB y y_27_ __ x0))) ->
  __ :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  __0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  x : cupicef.Term cupicef.prop (symprod A B leA leB __ __0) ->
  cupicef.Term s (P __ __0 x).

[ s, A, B, leA, leB, P, case__left__sym, case__right__sym, x0, x_27_, __, y]
  match____symprod s A B leA leB P case__left__sym case__right__sym
    {Coq__Init__Datatypes.pair A B x0 y}
    {Coq__Init__Datatypes.pair A B x_27_ y}
    (left__sym A B leA leB x0 x_27_ __ y)
  -->
  case__left__sym x0 x_27_ __ y.

[ s, A, B, leA, leB, P, case__left__sym, case__right__sym, y, y_27_, __, x0]
  match____symprod s A B leA leB P case__left__sym case__right__sym
    {Coq__Init__Datatypes.pair A B x0 y}
    {Coq__Init__Datatypes.pair A B x0 y_27_}
    (right__sym A B leA leB y y_27_ __ x0)
  -->
  case__right__sym y y_27_ __ x0.

[ s, A, B, leA, leB, P, s']
  match____symprod s A B leA leB
    (__ =>
     __0 =>
     x =>
     cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ __0 x)))
  -->
  match____symprod s' A B leA leB (__ => __0 => x => P __ __0 x).

def symprod__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  leA :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  leB :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     __0 :
       cupicef.Term
         (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A B) ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __ : cupicef.Term cupicef.prop (leA x x_27_) ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     cupicef.Term cupicef.prop
       (P (Coq__Init__Datatypes.pair A B x y)
          (Coq__Init__Datatypes.pair A B x_27_ y))) ->
  f0 :
    (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
     __ : cupicef.Term cupicef.prop (leB y y_27_) ->
     x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term cupicef.prop
       (P (Coq__Init__Datatypes.pair A B x y)
          (Coq__Init__Datatypes.pair A B x y_27_))) ->
  p :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  p0 :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A B) ->
  s : cupicef.Term cupicef.prop (symprod A B leA leB p p0) ->
  cupicef.Term cupicef.prop (P p p0)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   leA :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   leB :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      cupicef.Univ cupicef.prop) =>
   P :
     (__ :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) ->
      __0 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      x_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __ : cupicef.Term cupicef.prop (leA x x_27_) ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      cupicef.Term cupicef.prop
        (P (Coq__Init__Datatypes.pair A B x y)
           (Coq__Init__Datatypes.pair A B x_27_ y))) =>
   f0 :
     (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      y_27_ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B ->
      __ : cupicef.Term cupicef.prop (leB y y_27_) ->
      x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term cupicef.prop
        (P (Coq__Init__Datatypes.pair A B x y)
           (Coq__Init__Datatypes.pair A B x y_27_))) =>
   p :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)) A B) =>
   p0 :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)) A B) =>
   s : cupicef.Term cupicef.prop (symprod A B leA leB p p0) =>
   match____symprod cupicef.prop A B leA leB
     (p1 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) =>
      p2 :
        cupicef.Term
          (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A B) =>
      __ : cupicef.Term cupicef.prop (symprod A B leA leB p1 p2) =>
      P p1 p2)
     f f0 p p0 s.

def swapprod :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  __ :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A A) ->
  __0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A A) ->
  cupicef.Univ cupicef.prop.

def sp__noswap :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  p :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A A) ->
  __ :
    cupicef.Term cupicef.prop
      (symprod A A R R (Coq__Init__Datatypes.pair A A x y) p) ->
  cupicef.Term cupicef.prop
    (swapprod A R (Coq__Init__Datatypes.pair A A x y) p).

def sp__swap :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
  p :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A A) ->
  __ :
    cupicef.Term cupicef.prop
      (symprod A A R R (Coq__Init__Datatypes.pair A A x y) p) ->
  cupicef.Term cupicef.prop
    (swapprod A R (Coq__Init__Datatypes.pair A A y x) p).

[ ] cupicef.code_guarded? _ (sp__noswap _ _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (sp__swap _ _ _ _ _ _) --> cupicef.guarded.

def match____swapprod :
  s : cupicef.Sort ->
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A A) ->
     __0 :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A A) ->
     cupicef.Term cupicef.prop (swapprod A R __ __0) ->
     cupicef.Univ s) ->
  case__sp__noswap :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     p :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A A) ->
     __ :
       cupicef.Term cupicef.prop
         (symprod A A R R (Coq__Init__Datatypes.pair A A x0 y) p) ->
     cupicef.Term s
       (P (Coq__Init__Datatypes.pair A A x0 y) p (sp__noswap A R x0 y p __))) ->
  case__sp__swap :
    (x0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     p :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A A) ->
     __ :
       cupicef.Term cupicef.prop
         (symprod A A R R (Coq__Init__Datatypes.pair A A x0 y) p) ->
     cupicef.Term s
       (P (Coq__Init__Datatypes.pair A A y x0) p (sp__swap A R x0 y p __))) ->
  __ :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A A) ->
  __0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A A) ->
  x : cupicef.Term cupicef.prop (swapprod A R __ __0) ->
  cupicef.Term s (P __ __0 x).

[ s, A, R, P, case__sp__noswap, case__sp__swap, x0, y, p, __]
  match____swapprod s A R P case__sp__noswap case__sp__swap
    {Coq__Init__Datatypes.pair A A x0 y} {p} (sp__noswap A R x0 y p __)
  -->
  case__sp__noswap x0 y p __.

[ s, A, R, P, case__sp__noswap, case__sp__swap, x0, y, p, __]
  match____swapprod s A R P case__sp__noswap case__sp__swap
    {Coq__Init__Datatypes.pair A A y x0} {p} (sp__swap A R x0 y p __)
  -->
  case__sp__swap x0 y p __.

[ s, A, R, P, s']
  match____swapprod s A R
    (__ =>
     __0 =>
     x =>
     cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ __0 x)))
  -->
  match____swapprod s' A R (__ => __0 => x => P __ __0 x).

def swapprod__ind :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  R :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A A) ->
     __0 :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A A) ->
     cupicef.Univ cupicef.prop) ->
  f :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     p :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A A) ->
     __ :
       cupicef.Term cupicef.prop
         (symprod A A R R (Coq__Init__Datatypes.pair A A x y) p) ->
     cupicef.Term cupicef.prop (P (Coq__Init__Datatypes.pair A A x y) p)) ->
  f0 :
    (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     p :
       cupicef.Term (cupicef.type (cupicef.s cupicef.z))
         (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
            (cupicef.type (cupicef.s cupicef.z)) A A) ->
     __ :
       cupicef.Term cupicef.prop
         (symprod A A R R (Coq__Init__Datatypes.pair A A x y) p) ->
     cupicef.Term cupicef.prop (P (Coq__Init__Datatypes.pair A A y x) p)) ->
  p :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A A) ->
  p0 :
    cupicef.Term (cupicef.type (cupicef.s cupicef.z))
      (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)) A A) ->
  s : cupicef.Term cupicef.prop (swapprod A R p p0) ->
  cupicef.Term cupicef.prop (P p p0)

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   R :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      __0 : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Univ cupicef.prop) =>
   P :
     (__ :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A A) ->
      __0 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A A) ->
      cupicef.Univ cupicef.prop) =>
   f :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      p :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A A) ->
      __ :
        cupicef.Term cupicef.prop
          (symprod A A R R (Coq__Init__Datatypes.pair A A x y) p) ->
      cupicef.Term cupicef.prop (P (Coq__Init__Datatypes.pair A A x y) p)) =>
   f0 :
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      p :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A A) ->
      __ :
        cupicef.Term cupicef.prop
          (symprod A A R R (Coq__Init__Datatypes.pair A A x y) p) ->
      cupicef.Term cupicef.prop (P (Coq__Init__Datatypes.pair A A y x) p)) =>
   p :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)) A A) =>
   p0 :
     cupicef.Term (cupicef.type (cupicef.s cupicef.z))
       (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)) A A) =>
   s : cupicef.Term cupicef.prop (swapprod A R p p0) =>
   match____swapprod cupicef.prop A R
     (p1 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A A) =>
      p2 :
        cupicef.Term (cupicef.type (cupicef.s cupicef.z))
          (Coq__Init__Datatypes.prod (cupicef.type (cupicef.s cupicef.z))
             (cupicef.type (cupicef.s cupicef.z)) A A) =>
      __ : cupicef.Term cupicef.prop (swapprod A R p1 p2) =>
      P p1 p2)
     f f0 p p0 s.

def Ltl :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  __ : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  __0 : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  cupicef.Univ cupicef.prop.

def Lt__nil :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  a : cupicef.Term cupicef.set A ->
  x : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  cupicef.Term cupicef.prop
    (Ltl A leA
       (Coq__Init__Datatypes.nil
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A))
       (Coq__Init__Datatypes.cons
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          a x)).

def Lt__hd :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  a : cupicef.Term cupicef.set A ->
  b : cupicef.Term cupicef.set A ->
  __ : cupicef.Term cupicef.prop (leA a b) ->
  x : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  y : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  cupicef.Term cupicef.prop
    (Ltl A leA
       (Coq__Init__Datatypes.cons
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          a x)
       (Coq__Init__Datatypes.cons
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          b y)).

def Lt__tl :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  a : cupicef.Term cupicef.set A ->
  x : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  y : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  __ : cupicef.Term cupicef.prop (Ltl A leA x y) ->
  cupicef.Term cupicef.prop
    (Ltl A leA
       (Coq__Init__Datatypes.cons
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          a x)
       (Coq__Init__Datatypes.cons
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          a y)).

[ ] cupicef.code_guarded? _ (Lt__nil _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (Lt__hd _ _ _ _ _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (Lt__tl _ _ _ _ _ _) --> cupicef.guarded.

def match____Ltl :
  s : cupicef.Sort ->
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     __0 : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     cupicef.Term cupicef.prop (Ltl A leA __ __0) ->
     cupicef.Univ s) ->
  case__Lt__nil :
    (a : cupicef.Term cupicef.set A ->
     x0 : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     cupicef.Term s
       (P
          (Coq__Init__Datatypes.nil
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A))
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             a x0)
          (Lt__nil A leA a x0))) ->
  case__Lt__hd :
    (a : cupicef.Term cupicef.set A ->
     b : cupicef.Term cupicef.set A ->
     __ : cupicef.Term cupicef.prop (leA a b) ->
     x0 : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     y : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     cupicef.Term s
       (P
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             a x0)
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             b y)
          (Lt__hd A leA a b __ x0 y))) ->
  case__Lt__tl :
    (a : cupicef.Term cupicef.set A ->
     x0 : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     y : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     __ : cupicef.Term cupicef.prop (Ltl A leA x0 y) ->
     cupicef.Term s
       (P
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             a x0)
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             a y)
          (Lt__tl A leA a x0 y __))) ->
  __ : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  __0 : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  x : cupicef.Term cupicef.prop (Ltl A leA __ __0) ->
  cupicef.Term s (P __ __0 x).

[ s, A, leA, P, case__Lt__nil, case__Lt__hd, case__Lt__tl, a, x0]
  match____Ltl s A leA P case__Lt__nil case__Lt__hd case__Lt__tl
    {Coq__Init__Datatypes.nil
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)}
    {Coq__Init__Datatypes.cons
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)
       a x0}
    (Lt__nil A leA a x0)
  -->
  case__Lt__nil a x0.

[ s, A, leA, P, case__Lt__nil, case__Lt__hd, case__Lt__tl, a, b, __, x0, y]
  match____Ltl s A leA P case__Lt__nil case__Lt__hd case__Lt__tl
    {Coq__Init__Datatypes.cons
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)
       a x0}
    {Coq__Init__Datatypes.cons
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)
       b y}
    (Lt__hd A leA a b __ x0 y)
  -->
  case__Lt__hd a b __ x0 y.

[ s, A, leA, P, case__Lt__nil, case__Lt__hd, case__Lt__tl, a, x0, y, __]
  match____Ltl s A leA P case__Lt__nil case__Lt__hd case__Lt__tl
    {Coq__Init__Datatypes.cons
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)
       a x0}
    {Coq__Init__Datatypes.cons
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)
       a y}
    (Lt__tl A leA a x0 y __)
  -->
  case__Lt__tl a x0 y __.

[ s, A, leA, P, s']
  match____Ltl s A leA
    (__ =>
     __0 =>
     x =>
     cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ __0 x)))
  -->
  match____Ltl s' A leA (__ => __0 => x => P __ __0 x).

def let__Nil :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A)

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Datatypes.nil
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I A).

def let__List :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.set

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Datatypes.list cupicef.set A.

def Ltl__ind :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     __0 : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     cupicef.Univ cupicef.prop) ->
  f :
    (a : cupicef.Term cupicef.set A ->
     x : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     cupicef.Term cupicef.prop
       (P
          (Coq__Init__Datatypes.nil
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A))
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             a x))) ->
  f0 :
    (a : cupicef.Term cupicef.set A ->
     b : cupicef.Term cupicef.set A ->
     __ : cupicef.Term cupicef.prop (leA a b) ->
     x : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     y : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     cupicef.Term cupicef.prop
       (P
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             a x)
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             b y))) ->
  f1 :
    (a : cupicef.Term cupicef.set A ->
     x : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     y : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     __ : cupicef.Term cupicef.prop (Ltl A leA x y) ->
     __0 : cupicef.Term cupicef.prop (P x y) ->
     cupicef.Term cupicef.prop
       (P
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             a x)
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             a y))) ->
  l : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  l0 : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  l1 : cupicef.Term cupicef.prop (Ltl A leA l l0) ->
  cupicef.Term cupicef.prop (P l l0)

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   P :
     (__ : cupicef.Term cupicef.set (let__List A leA) ->
      __0 : cupicef.Term cupicef.set (let__List A leA) ->
      cupicef.Univ cupicef.prop) =>
   f :
     (a : cupicef.Term cupicef.set A ->
      x : cupicef.Term cupicef.set (let__List A leA) ->
      cupicef.Term cupicef.prop
        (P (let__Nil A leA)
           (Coq__Init__Datatypes.cons
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I A)
              a x))) =>
   f0 :
     (a : cupicef.Term cupicef.set A ->
      b : cupicef.Term cupicef.set A ->
      __ : cupicef.Term cupicef.prop (leA a b) ->
      x : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
      y : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
      cupicef.Term cupicef.prop
        (P
           (Coq__Init__Datatypes.cons
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I A)
              a x)
           (Coq__Init__Datatypes.cons
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I A)
              b y))) =>
   f1 :
     (a : cupicef.Term cupicef.set A ->
      x : cupicef.Term cupicef.set (let__List A leA) ->
      y : cupicef.Term cupicef.set (let__List A leA) ->
      __ : cupicef.Term cupicef.prop (Ltl A leA x y) ->
      __0 : cupicef.Term cupicef.prop (P x y) ->
      cupicef.Term cupicef.prop
        (P
           (Coq__Init__Datatypes.cons
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I A)
              a x)
           (Coq__Init__Datatypes.cons
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I A)
              a y))) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.2 cupicef.prop
           (cupicef.prod cupicef.set
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.set
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I (let__List A leA)
              (l : cupicef.Term cupicef.set (let__List A leA) =>
               cupicef.prod cupicef.set
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule cupicef.set
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I (let__List A leA)
                 (l0 : cupicef.Term cupicef.set (let__List A leA) =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (Ltl A leA l l0)
                    (l1 : cupicef.Term cupicef.prop (Ltl A leA l l0) =>
                     P l l0))))))
     (c =>
      c
        (F =>
         l : cupicef.Term cupicef.set (let__List A leA) =>
         l0 : cupicef.Term cupicef.set (let__List A leA) =>
         l1 : cupicef.Term cupicef.prop (Ltl A leA l l0) =>
         match____Ltl cupicef.prop A leA
           (l2 : cupicef.Term cupicef.set (let__List A leA) =>
            l3 : cupicef.Term cupicef.set (let__List A leA) =>
            __ : cupicef.Term cupicef.prop (Ltl A leA l2 l3) =>
            P l2 l3)
           (a : cupicef.Term cupicef.set A =>
            x : cupicef.Term cupicef.set (let__List A leA) =>
            f a x)
           (a : cupicef.Term cupicef.set A =>
            b : cupicef.Term cupicef.set A =>
            l2 : cupicef.Term cupicef.prop (leA a b) =>
            x :
              cupicef.Term cupicef.set
                (Coq__Init__Datatypes.list cupicef.set A) =>
            y :
              cupicef.Term cupicef.set
                (Coq__Init__Datatypes.list cupicef.set A) =>
            f0 a b l2 x y)
           (a : cupicef.Term cupicef.set A =>
            x : cupicef.Term cupicef.set (let__List A leA) =>
            y : cupicef.Term cupicef.set (let__List A leA) =>
            l2 : cupicef.Term cupicef.prop (Ltl A leA x y) =>
            f1 a x y l2 (F x y l2))
           l l0 l1))
     cupicef.0.

def Desc :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  __ : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  cupicef.Univ cupicef.prop.

def d__nil :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Term cupicef.prop
    (Desc A leA
       (Coq__Init__Datatypes.nil
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A))).

def d__one :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term cupicef.set A ->
  cupicef.Term cupicef.prop
    (Desc A leA
       (Coq__Init__Datatypes.cons
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          x
          (Coq__Init__Datatypes.nil
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)))).

def d__conc :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  x : cupicef.Term cupicef.set A ->
  y : cupicef.Term cupicef.set A ->
  l : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  __ :
    cupicef.Term cupicef.prop
      (clos__refl
         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
            (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
            (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
               cupicef.I)
            (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
            cupicef.I A)
         leA x y) ->
  __0 :
    cupicef.Term cupicef.prop
      (Desc A leA
         (Coq__Init__Datatypes.app
            (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I A)
            l
            (Coq__Init__Datatypes.cons
               (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.univ cupicef.set
                     (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  cupicef.I A)
               y
               (Coq__Init__Datatypes.nil
                  (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.univ cupicef.set
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     cupicef.I A))))) ->
  cupicef.Term cupicef.prop
    (Desc A leA
       (Coq__Init__Datatypes.app
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          (Coq__Init__Datatypes.app
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             l
             (Coq__Init__Datatypes.cons
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A)
                y
                (Coq__Init__Datatypes.nil
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I A))))
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             x
             (Coq__Init__Datatypes.nil
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A))))).

[ ] cupicef.code_guarded? _ (d__nil _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (d__one _ _ _) --> cupicef.guarded.

[ ] cupicef.code_guarded? _ (d__conc _ _ _ _ _ _ _) --> cupicef.guarded.

def match____Desc :
  s : cupicef.Sort ->
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     cupicef.Term cupicef.prop (Desc A leA __) ->
     cupicef.Univ s) ->
  case__d__nil :
    cupicef.Term s
      (P
         (Coq__Init__Datatypes.nil
            (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I A))
         (d__nil A leA)) ->
  case__d__one :
    (x0 : cupicef.Term cupicef.set A ->
     cupicef.Term s
       (P
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             x0
             (Coq__Init__Datatypes.nil
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A)))
          (d__one A leA x0))) ->
  case__d__conc :
    (x0 : cupicef.Term cupicef.set A ->
     y : cupicef.Term cupicef.set A ->
     l : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     __ :
       cupicef.Term cupicef.prop
         (clos__refl
            (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I A)
            leA x0 y) ->
     __0 :
       cupicef.Term cupicef.prop
         (Desc A leA
            (Coq__Init__Datatypes.app
               (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.univ cupicef.set
                     (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  cupicef.I A)
               l
               (Coq__Init__Datatypes.cons
                  (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.univ cupicef.set
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     cupicef.I A)
                  y
                  (Coq__Init__Datatypes.nil
                     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        (cupicef.univ cupicef.set
                           (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.I)
                        cupicef.I A))))) ->
     cupicef.Term s
       (P
          (Coq__Init__Datatypes.app
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             (Coq__Init__Datatypes.app
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A)
                l
                (Coq__Init__Datatypes.cons
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I A)
                   y
                   (Coq__Init__Datatypes.nil
                      (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ cupicef.set
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I A))))
             (Coq__Init__Datatypes.cons
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A)
                x0
                (Coq__Init__Datatypes.nil
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I A))))
          (d__conc A leA x0 y l __ __0))) ->
  __ : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  x : cupicef.Term cupicef.prop (Desc A leA __) ->
  cupicef.Term s (P __ x).

[ s, A, leA, P, case__d__nil, case__d__one, case__d__conc]
  match____Desc s A leA P case__d__nil case__d__one case__d__conc
    {Coq__Init__Datatypes.nil
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)}
    (d__nil A leA)
  -->
  case__d__nil.

[ s, A, leA, P, case__d__nil, case__d__one, case__d__conc, x0]
  match____Desc s A leA P case__d__nil case__d__one case__d__conc
    {Coq__Init__Datatypes.cons
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)
       x0
       (Coq__Init__Datatypes.nil
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A))}
    (d__one A leA x0)
  -->
  case__d__one x0.

[ s, A, leA, P, case__d__nil, case__d__one, case__d__conc, x0, y, l, __, __0]
  match____Desc s A leA P case__d__nil case__d__one case__d__conc
    {Coq__Init__Datatypes.app
       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
          (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
             cupicef.I)
          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
          cupicef.I A)
       (Coq__Init__Datatypes.app
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          l
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             y
             (Coq__Init__Datatypes.nil
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A))))
       (Coq__Init__Datatypes.cons
          (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
             (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             cupicef.I A)
          x0
          (Coq__Init__Datatypes.nil
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)))}
    (d__conc A leA x0 y l __ __0)
  -->
  case__d__conc x0 y l __ __0.

[ s, A, leA, P, s']
  match____Desc s A leA
    (__ => x => cupicef.uncode _ (cupicef.code (cupicef.cU s') (P __ x)))
  -->
  match____Desc s' A leA (__ => x => P __ x).

def let__Nil0 :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A)

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Datatypes.nil
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I A).

def let__List0 :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.set

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Datatypes.list cupicef.set A.

def Desc__ind :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  P :
    (__ : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     cupicef.Univ cupicef.prop) ->
  f :
    cupicef.Term cupicef.prop
      (P
         (Coq__Init__Datatypes.nil
            (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I A))) ->
  f0 :
    (x : cupicef.Term cupicef.set A ->
     cupicef.Term cupicef.prop
       (P
          (Coq__Init__Datatypes.cons
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             x
             (Coq__Init__Datatypes.nil
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A))))) ->
  f1 :
    (x : cupicef.Term cupicef.set A ->
     y : cupicef.Term cupicef.set A ->
     l : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
     __ :
       cupicef.Term cupicef.prop
         (clos__refl
            (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
               (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
               (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
                  cupicef.I)
               (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  cupicef.I)
               cupicef.I A)
            leA x y) ->
     __0 :
       cupicef.Term cupicef.prop
         (Desc A leA
            (Coq__Init__Datatypes.app
               (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.univ cupicef.set
                     (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  cupicef.I A)
               l
               (Coq__Init__Datatypes.cons
                  (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.univ cupicef.set
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     cupicef.I A)
                  y
                  (Coq__Init__Datatypes.nil
                     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        (cupicef.univ cupicef.set
                           (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.I)
                        cupicef.I A))))) ->
     __1 :
       cupicef.Term cupicef.prop
         (P
            (Coq__Init__Datatypes.app
               (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                  (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                  (cupicef.univ cupicef.set
                     (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                  (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     cupicef.I)
                  cupicef.I A)
               l
               (Coq__Init__Datatypes.cons
                  (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                     (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                     (cupicef.univ cupicef.set
                        (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                     (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        cupicef.I)
                     cupicef.I A)
                  y
                  (Coq__Init__Datatypes.nil
                     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                        (cupicef.univ cupicef.set
                           (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                           (cupicef.axiom
                              (cupicef.type (cupicef.s cupicef.z)))
                           cupicef.I)
                        cupicef.I A))))) ->
     cupicef.Term cupicef.prop
       (P
          (Coq__Init__Datatypes.app
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             (Coq__Init__Datatypes.app
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A)
                l
                (Coq__Init__Datatypes.cons
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I A)
                   y
                   (Coq__Init__Datatypes.nil
                      (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ cupicef.set
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I A))))
             (Coq__Init__Datatypes.cons
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A)
                x
                (Coq__Init__Datatypes.nil
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I A)))))) ->
  l : cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A) ->
  d : cupicef.Term cupicef.prop (Desc A leA l) ->
  cupicef.Term cupicef.prop (P l)

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   P :
     (__ : cupicef.Term cupicef.set (let__List0 A leA) ->
      cupicef.Univ cupicef.prop) =>
   f : cupicef.Term cupicef.prop (P (let__Nil0 A leA)) =>
   f0 :
     (x : cupicef.Term cupicef.set A ->
      cupicef.Term cupicef.prop
        (P
           (Coq__Init__Datatypes.cons
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I A)
              x (let__Nil0 A leA)))) =>
   f1 :
     (x : cupicef.Term cupicef.set A ->
      y : cupicef.Term cupicef.set A ->
      l : cupicef.Term cupicef.set (let__List0 A leA) ->
      __ :
        cupicef.Term cupicef.prop
          (clos__refl
             (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                (cupicef.univ cupicef.set
                   (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   cupicef.I)
                cupicef.I A)
             leA x y) ->
      __0 :
        cupicef.Term cupicef.prop
          (Desc A leA
             (Coq__Init__Datatypes.app
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A)
                l
                (Coq__Init__Datatypes.cons
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I A)
                   y (let__Nil0 A leA)))) ->
      __1 :
        cupicef.Term cupicef.prop
          (P
             (Coq__Init__Datatypes.app
                (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.univ cupicef.set
                      (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   cupicef.I A)
                l
                (Coq__Init__Datatypes.cons
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I A)
                   y (let__Nil0 A leA)))) ->
      cupicef.Term cupicef.prop
        (P
           (Coq__Init__Datatypes.app
              (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.univ cupicef.set
                    (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 cupicef.I A)
              (Coq__Init__Datatypes.app
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ cupicef.set
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I A)
                 l
                 (Coq__Init__Datatypes.cons
                    (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ cupicef.set
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I A)
                    y (let__Nil0 A leA)))
              (Coq__Init__Datatypes.cons
                 (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    (cupicef.univ cupicef.set
                       (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                    (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       cupicef.I)
                    cupicef.I A)
                 x (let__Nil0 A leA))))) =>
   cupicef.fixproj cupicef.1
     (c =>
      c
        (cupicef.SA cupicef.1 cupicef.prop
           (cupicef.prod cupicef.set (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule cupicef.set
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I (let__List0 A leA)
              (l : cupicef.Term cupicef.set (let__List0 A leA) =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (Desc A leA l)
                 (d : cupicef.Term cupicef.prop (Desc A leA l) => P l)))))
     (c =>
      c
        (F =>
         l : cupicef.Term cupicef.set (let__List0 A leA) =>
         d : cupicef.Term cupicef.prop (Desc A leA l) =>
         match____Desc cupicef.prop A leA
           (l0 : cupicef.Term cupicef.set (let__List0 A leA) =>
            __ : cupicef.Term cupicef.prop (Desc A leA l0) =>
            P l0)
           f (x : cupicef.Term cupicef.set A => f0 x)
           (x : cupicef.Term cupicef.set A =>
            y : cupicef.Term cupicef.set A =>
            l0 : cupicef.Term cupicef.set (let__List0 A leA) =>
            c :
              cupicef.Term cupicef.prop
                (clos__refl
                   (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      (cupicef.univ cupicef.set
                         (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                      (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         cupicef.I)
                      cupicef.I A)
                   leA x y) =>
            d0 :
              cupicef.Term cupicef.prop
                (Desc A leA
                   (Coq__Init__Datatypes.app
                      (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                         (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                         (cupicef.univ cupicef.set
                            (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                         (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            cupicef.I)
                         cupicef.I A)
                      l0
                      (Coq__Init__Datatypes.cons
                         (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.univ cupicef.set
                               (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            cupicef.I A)
                         y (let__Nil0 A leA)))) =>
            f1 x y l0 c d0
              (F
                 (Coq__Init__Datatypes.app
                    (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.univ cupicef.set
                          (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       cupicef.I A)
                    l0
                    (Coq__Init__Datatypes.cons
                       (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.univ cupicef.set
                             (cupicef.type (cupicef.s cupicef.z)) cupicef.I)
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          cupicef.I A)
                       y (let__Nil0 A leA)))
                 d0))
           l d))
     cupicef.0.

def let__Nil1 :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A)

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Datatypes.nil
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I A).

def let__List1 :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.set

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Datatypes.list cupicef.set A.

def Pow :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.set

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Specif.sig cupicef.set (let__List1 A leA) (Desc A leA).

def let__Nil2 :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Term cupicef.set (Coq__Init__Datatypes.list cupicef.set A)

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Datatypes.nil
     (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
        (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
        (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
           cupicef.I)
        (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
        cupicef.I A).

def let__List2 :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  cupicef.Univ cupicef.set

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   Coq__Init__Datatypes.list cupicef.set A.

def lex__exp :
  A : cupicef.Univ cupicef.set ->
  leA :
    (__ : cupicef.Term cupicef.set A ->
     __0 : cupicef.Term cupicef.set A ->
     cupicef.Univ cupicef.prop) ->
  a : cupicef.Term cupicef.set (Pow A leA) ->
  b : cupicef.Term cupicef.set (Pow A leA) ->
  cupicef.Univ cupicef.prop

:= A : cupicef.Univ cupicef.set =>
   leA :
     (__ : cupicef.Term cupicef.set A ->
      __0 : cupicef.Term cupicef.set A ->
      cupicef.Univ cupicef.prop) =>
   a : cupicef.Term cupicef.set (Pow A leA) =>
   b : cupicef.Term cupicef.set (Pow A leA) =>
   Ltl A leA
     (Coq__Init__Specif.proj1__sig
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cupicef.I (let__List2 A leA))
        (Desc A leA) a)
     (Coq__Init__Specif.proj1__sig
        (cupicef.cast (cupicef.type (cupicef.s cupicef.z))
           (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.univ cupicef.set (cupicef.type (cupicef.s cupicef.z))
              cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           cupicef.I (let__List2 A leA))
        (Desc A leA) b).

(; End of translation. ;)
