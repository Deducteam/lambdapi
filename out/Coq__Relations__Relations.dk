(; This file was automatically generated by Coqine. ;)
(; The encoding used was: "template_cic". ;)

thm inverse__image__of__equivalence :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  r :
    cupicef.Term
      (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
         (cupicef.type (cupicef.s cupicef.z)))
      (Coq__Relations__Relation__Definitions.relation B) ->
  __ :
    cupicef.Term cupicef.prop
      (Coq__Relations__Relation__Definitions.equivalence B r) ->
  cupicef.Term cupicef.prop
    (Coq__Relations__Relation__Definitions.equivalence A
       (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
        y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
        r (f x) (f y)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   r :
     cupicef.Term
       (cupicef.sup (cupicef.type (cupicef.s cupicef.z))
          (cupicef.type (cupicef.s cupicef.z)))
       (Coq__Relations__Relation__Definitions.relation B) =>
   H :
     cupicef.Term cupicef.prop
       (Coq__Relations__Relation__Definitions.equivalence B r) =>
   Coq__Relations__Relation__Definitions.Build__equivalence A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      r (f x) (f y))
     (Coq__Relations__Relation__Definitions.match____equivalence cupicef.prop
        B r
        (__ :
           cupicef.Term cupicef.prop
             (Coq__Relations__Relation__Definitions.equivalence B r) =>
         Coq__Relations__Relation__Definitions.reflexive A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r (f x) (f y)))
        (cupicef.cast
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop))))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           (cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop)))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop))))
              cupicef.I (Coq__Relations__Relation__Definitions.reflexive B r)
              (equiv__refl :
                 cupicef.Term cupicef.prop
                   (Coq__Relations__Relation__Definitions.reflexive B r) =>
               cupicef.prod cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop)))
                 cupicef.I
                 (Coq__Relations__Relation__Definitions.transitive B r)
                 (equiv__trans :
                    cupicef.Term cupicef.prop
                      (Coq__Relations__Relation__Definitions.transitive B r) =>
                  cupicef.prod cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop)
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop))
                    cupicef.I
                    (Coq__Relations__Relation__Definitions.symmetric B r)
                    (equiv__sym :
                       cupicef.Term cupicef.prop
                         (Coq__Relations__Relation__Definitions.symmetric B r) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          cupicef.prop)
                       cupicef.I A
                       (x :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        r (f x) (f x))))))
           (cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I (Coq__Relations__Relation__Definitions.reflexive B r)
              (equiv__refl :
                 cupicef.Term cupicef.prop
                   (Coq__Relations__Relation__Definitions.reflexive B r) =>
               cupicef.prod cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I
                 (Coq__Relations__Relation__Definitions.transitive B r)
                 (equiv__trans :
                    cupicef.Term cupicef.prop
                      (Coq__Relations__Relation__Definitions.transitive B r) =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (Coq__Relations__Relation__Definitions.symmetric B r)
                    (equiv__sym :
                       cupicef.Term cupicef.prop
                         (Coq__Relations__Relation__Definitions.symmetric B r) =>
                     Coq__Relations__Relation__Definitions.reflexive A
                       (x :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        y :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        r (f x) (f y))))))
           cupicef.I
           (equiv__refl :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.reflexive B r) =>
            equiv__trans :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.transitive B r) =>
            equiv__sym :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.symmetric B r) =>
            x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            equiv__refl (f x)))
        H)
     (Coq__Relations__Relation__Definitions.match____equivalence cupicef.prop
        B r
        (__ :
           cupicef.Term cupicef.prop
             (Coq__Relations__Relation__Definitions.equivalence B r) =>
         Coq__Relations__Relation__Definitions.transitive A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r (f x) (f y)))
        (cupicef.cast
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop
                                (cupicef.rule cupicef.prop cupicef.prop))))))))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           (cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop
                                (cupicef.rule cupicef.prop cupicef.prop)))))))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule cupicef.prop
                                   (cupicef.rule cupicef.prop cupicef.prop))))))))
              cupicef.I (Coq__Relations__Relation__Definitions.reflexive B r)
              (__tmp :
                 cupicef.Term cupicef.prop
                   (Coq__Relations__Relation__Definitions.reflexive B r) =>
               cupicef.prod cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop
                                (cupicef.rule cupicef.prop cupicef.prop))))))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule cupicef.prop
                                   (cupicef.rule cupicef.prop cupicef.prop)))))))
                 cupicef.I
                 (Coq__Relations__Relation__Definitions.transitive B r)
                 (equiv__trans :
                    cupicef.Term cupicef.prop
                      (Coq__Relations__Relation__Definitions.transitive B r) =>
                  cupicef.prod cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop
                                (cupicef.rule cupicef.prop cupicef.prop)))))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule cupicef.prop
                                   (cupicef.rule cupicef.prop cupicef.prop))))))
                    cupicef.I
                    (Coq__Relations__Relation__Definitions.symmetric B r)
                    (__tmp0 :
                       cupicef.Term cupicef.prop
                         (Coq__Relations__Relation__Definitions.symmetric B r) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop
                                (cupicef.rule cupicef.prop cupicef.prop))))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule cupicef.prop
                                   (cupicef.rule cupicef.prop cupicef.prop)))))
                       cupicef.I A
                       (x :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop
                                (cupicef.rule cupicef.prop cupicef.prop)))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule cupicef.prop
                                   (cupicef.rule cupicef.prop cupicef.prop))))
                          cupicef.I A
                          (y :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop
                                (cupicef.rule cupicef.prop cupicef.prop))
                             (cupicef.rule
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.rule cupicef.prop
                                   (cupicef.rule cupicef.prop cupicef.prop)))
                             cupicef.I A
                             (z :
                                cupicef.Term
                                  (cupicef.type (cupicef.s cupicef.z)) A =>
                              cupicef.prod cupicef.prop
                                (cupicef.rule cupicef.prop cupicef.prop)
                                (cupicef.rule cupicef.prop
                                   (cupicef.rule cupicef.prop cupicef.prop))
                                cupicef.I (r (f x) (f y))
                                (H0 :
                                   cupicef.Term cupicef.prop (r (f x) (f y)) =>
                                 cupicef.prod cupicef.prop cupicef.prop
                                   (cupicef.rule cupicef.prop cupicef.prop)
                                   cupicef.I (r (f y) (f z))
                                   (H1 :
                                      cupicef.Term cupicef.prop
                                        (r (f y) (f z)) =>
                                    r (f x) (f z))))))))))
           (cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I (Coq__Relations__Relation__Definitions.reflexive B r)
              (equiv__refl :
                 cupicef.Term cupicef.prop
                   (Coq__Relations__Relation__Definitions.reflexive B r) =>
               cupicef.prod cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I
                 (Coq__Relations__Relation__Definitions.transitive B r)
                 (equiv__trans :
                    cupicef.Term cupicef.prop
                      (Coq__Relations__Relation__Definitions.transitive B r) =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (Coq__Relations__Relation__Definitions.symmetric B r)
                    (equiv__sym :
                       cupicef.Term cupicef.prop
                         (Coq__Relations__Relation__Definitions.symmetric B r) =>
                     Coq__Relations__Relation__Definitions.transitive A
                       (x :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        y :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        r (f x) (f y))))))
           cupicef.I
           (__tmp :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.reflexive B r) =>
            equiv__trans :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.transitive B r) =>
            __tmp0 :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.symmetric B r) =>
            x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H0 : cupicef.Term cupicef.prop (r (f x) (f y)) =>
            H1 : cupicef.Term cupicef.prop (r (f y) (f z)) =>
            equiv__trans (f x) (f y) (f z) H0 H1))
        H)
     (Coq__Relations__Relation__Definitions.match____equivalence cupicef.prop
        B r
        (__ :
           cupicef.Term cupicef.prop
             (Coq__Relations__Relation__Definitions.equivalence B r) =>
         Coq__Relations__Relation__Definitions.symmetric A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            r (f x) (f y)))
        (cupicef.cast
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop))))))
           (cupicef.rule cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)))
           (cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop)))))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop))))))
              cupicef.I (Coq__Relations__Relation__Definitions.reflexive B r)
              (equiv__refl :
                 cupicef.Term cupicef.prop
                   (Coq__Relations__Relation__Definitions.reflexive B r) =>
               cupicef.prod cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop))))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop)))))
                 cupicef.I
                 (Coq__Relations__Relation__Definitions.transitive B r)
                 (equiv__trans :
                    cupicef.Term cupicef.prop
                      (Coq__Relations__Relation__Definitions.transitive B r) =>
                  cupicef.prod cupicef.prop
                    (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop)))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop))))
                    cupicef.I
                    (Coq__Relations__Relation__Definitions.symmetric B r)
                    (equiv__sym :
                       cupicef.Term cupicef.prop
                         (Coq__Relations__Relation__Definitions.symmetric B r) =>
                     cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop))
                       (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop)))
                       cupicef.I A
                       (x :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.rule cupicef.prop cupicef.prop)
                          (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.rule cupicef.prop cupicef.prop))
                          cupicef.I A
                          (y :
                             cupicef.Term
                               (cupicef.type (cupicef.s cupicef.z)) A =>
                           cupicef.prod cupicef.prop cupicef.prop
                             (cupicef.rule cupicef.prop cupicef.prop)
                             cupicef.I (r (f x) (f y))
                             (H0 : cupicef.Term cupicef.prop (r (f x) (f y)) =>
                              r (f y) (f x))))))))
           (cupicef.prod cupicef.prop
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop))
              (cupicef.rule cupicef.prop
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))
              cupicef.I (Coq__Relations__Relation__Definitions.reflexive B r)
              (equiv__refl :
                 cupicef.Term cupicef.prop
                   (Coq__Relations__Relation__Definitions.reflexive B r) =>
               cupicef.prod cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop)
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))
                 cupicef.I
                 (Coq__Relations__Relation__Definitions.transitive B r)
                 (equiv__trans :
                    cupicef.Term cupicef.prop
                      (Coq__Relations__Relation__Definitions.transitive B r) =>
                  cupicef.prod cupicef.prop cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                    (Coq__Relations__Relation__Definitions.symmetric B r)
                    (equiv__sym :
                       cupicef.Term cupicef.prop
                         (Coq__Relations__Relation__Definitions.symmetric B r) =>
                     Coq__Relations__Relation__Definitions.symmetric A
                       (x :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        y :
                          cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                        r (f x) (f y))))))
           cupicef.I
           (equiv__refl :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.reflexive B r) =>
            equiv__trans :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.transitive B r) =>
            equiv__sym :
              cupicef.Term cupicef.prop
                (Coq__Relations__Relation__Definitions.symmetric B r) =>
            x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            H0 : cupicef.Term cupicef.prop (r (f x) (f y)) =>
            equiv__sym (f x) (f y) H0))
        H).

thm inverse__image__of__eq :
  A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) ->
  f :
    (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
     cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) ->
  cupicef.Term cupicef.prop
    (Coq__Relations__Relation__Definitions.equivalence A
       (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
        y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
        Coq__Init__Logic.eq
          (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
             (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
             (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                cupicef.I)
             (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                (cupicef.axiom
                   (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                cupicef.I)
             cupicef.I B)
          (f x) (f y)))

:= A : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   B : cupicef.Univ (cupicef.type (cupicef.s cupicef.z)) =>
   f :
     (__ : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A ->
      cupicef.Term (cupicef.type (cupicef.s cupicef.z)) B) =>
   Coq__Relations__Relation__Definitions.Build__equivalence A
     (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
      Coq__Init__Logic.eq
        (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
           (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
           (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
              (cupicef.axiom (cupicef.type (cupicef.s cupicef.z))) cupicef.I)
           (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              cupicef.I)
           cupicef.I B)
        (f x) (f y))
     (cupicef.cast
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
        cupicef.prop
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z)) cupicef.prop
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z)) cupicef.prop)
           cupicef.I A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            Coq__Init__Logic.eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x) (f x)))
        (Coq__Relations__Relation__Definitions.reflexive A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            Coq__Init__Logic.eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x) (f y)))
        cupicef.I
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         Coq__Init__Logic.eq__refl
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x)))
     (cupicef.cast
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))))
        cupicef.prop
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))))
           cupicef.I A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))))
              cupicef.I A
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop))
                 (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop)))
                 cupicef.I A
                 (z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
                  cupicef.prod cupicef.prop
                    (cupicef.rule cupicef.prop cupicef.prop)
                    (cupicef.rule cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop))
                    cupicef.I
                    (Coq__Init__Logic.eq
                       (cupicef.cast
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             cupicef.I)
                          (cupicef.univ
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             cupicef.I)
                          cupicef.I B)
                       (f x) (f y))
                    (H :
                       cupicef.Term cupicef.prop
                         (Coq__Init__Logic.eq
                            (cupicef.cast
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               (cupicef.univ
                                  (cupicef.type (cupicef.s cupicef.z))
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  cupicef.I)
                               (cupicef.univ
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  cupicef.I)
                               cupicef.I B)
                            (f x) (f y)) =>
                     cupicef.prod cupicef.prop cupicef.prop
                       (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                       (Coq__Init__Logic.eq
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I B)
                          (f y) (f z))
                       (H0 :
                          cupicef.Term cupicef.prop
                            (Coq__Init__Logic.eq
                               (cupicef.cast
                                  (cupicef.axiom
                                     (cupicef.type (cupicef.s cupicef.z)))
                                  (cupicef.axiom
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z))))
                                  (cupicef.univ
                                     (cupicef.type (cupicef.s cupicef.z))
                                     (cupicef.axiom
                                        (cupicef.type (cupicef.s cupicef.z)))
                                     cupicef.I)
                                  (cupicef.univ
                                     (cupicef.type
                                        (cupicef.s (cupicef.s cupicef.z)))
                                     (cupicef.axiom
                                        (cupicef.type
                                           (cupicef.s (cupicef.s cupicef.z))))
                                     cupicef.I)
                                  cupicef.I B)
                               (f y) (f z)) =>
                        Coq__Init__Logic.eq
                          (cupicef.cast
                             (cupicef.axiom
                                (cupicef.type (cupicef.s cupicef.z)))
                             (cupicef.axiom
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z))))
                             (cupicef.univ
                                (cupicef.type (cupicef.s cupicef.z))
                                (cupicef.axiom
                                   (cupicef.type (cupicef.s cupicef.z)))
                                cupicef.I)
                             (cupicef.univ
                                (cupicef.type
                                   (cupicef.s (cupicef.s cupicef.z)))
                                (cupicef.axiom
                                   (cupicef.type
                                      (cupicef.s (cupicef.s cupicef.z))))
                                cupicef.I)
                             cupicef.I B)
                          (f x) (f z)))))))
        (Coq__Relations__Relation__Definitions.transitive A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            Coq__Init__Logic.eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x) (f y)))
        cupicef.I
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         z : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         H :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I B)
                (f x) (f y)) =>
         H0 :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I B)
                (f y) (f z)) =>
         Coq__Init__Logic.eq__trans
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x) (f y) (f z) H H0))
     (cupicef.cast
        (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)))
        cupicef.prop
        (cupicef.prod (cupicef.type (cupicef.s cupicef.z))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop))
           (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop)))
           cupicef.I A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            cupicef.prod (cupicef.type (cupicef.s cupicef.z))
              (cupicef.rule cupicef.prop cupicef.prop)
              (cupicef.rule (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.rule cupicef.prop cupicef.prop))
              cupicef.I A
              (y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
               cupicef.prod cupicef.prop cupicef.prop
                 (cupicef.rule cupicef.prop cupicef.prop) cupicef.I
                 (Coq__Init__Logic.eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I B)
                    (f x) (f y))
                 (H :
                    cupicef.Term cupicef.prop
                      (Coq__Init__Logic.eq
                         (cupicef.cast
                            (cupicef.axiom
                               (cupicef.type (cupicef.s cupicef.z)))
                            (cupicef.axiom
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z))))
                            (cupicef.univ
                               (cupicef.type (cupicef.s cupicef.z))
                               (cupicef.axiom
                                  (cupicef.type (cupicef.s cupicef.z)))
                               cupicef.I)
                            (cupicef.univ
                               (cupicef.type
                                  (cupicef.s (cupicef.s cupicef.z)))
                               (cupicef.axiom
                                  (cupicef.type
                                     (cupicef.s (cupicef.s cupicef.z))))
                               cupicef.I)
                            cupicef.I B)
                         (f x) (f y)) =>
                  Coq__Init__Logic.eq
                    (cupicef.cast
                       (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                       (cupicef.axiom
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                       (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                          (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                          cupicef.I)
                       (cupicef.univ
                          (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                          (cupicef.axiom
                             (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                          cupicef.I)
                       cupicef.I B)
                    (f y) (f x)))))
        (Coq__Relations__Relation__Definitions.symmetric A
           (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
            Coq__Init__Logic.eq
              (cupicef.cast
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                    (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                    cupicef.I)
                 (cupicef.univ
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                    (cupicef.axiom
                       (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                    cupicef.I)
                 cupicef.I B)
              (f x) (f y)))
        cupicef.I
        (x : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         y : cupicef.Term (cupicef.type (cupicef.s cupicef.z)) A =>
         H :
           cupicef.Term cupicef.prop
             (Coq__Init__Logic.eq
                (cupicef.cast
                   (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                   (cupicef.axiom
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                   (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                      (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                      cupicef.I)
                   (cupicef.univ
                      (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                      (cupicef.axiom
                         (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                      cupicef.I)
                   cupicef.I B)
                (f x) (f y)) =>
         Coq__Init__Logic.eq__sym
           (cupicef.cast (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
              (cupicef.axiom (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
              (cupicef.univ (cupicef.type (cupicef.s cupicef.z))
                 (cupicef.axiom (cupicef.type (cupicef.s cupicef.z)))
                 cupicef.I)
              (cupicef.univ (cupicef.type (cupicef.s (cupicef.s cupicef.z)))
                 (cupicef.axiom
                    (cupicef.type (cupicef.s (cupicef.s cupicef.z))))
                 cupicef.I)
              cupicef.I B)
           (f x) (f y) H)).

(; End of translation. ;)
