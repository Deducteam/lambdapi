default: lambdapi.bnf

BNF_GEN := obelisk

lambdapi.bnf: Makefile.bnf ../src/parsing/lpParser.mly
	printf "; DO NOT EDIT THIS FILE MANUALLY\n" > $@
	printf "; It is generated automatically with 'make bnf'.\n\n" >> $@
	printf "QID ::= [UID \".\"]+ UID\n\n" >> $@
	printf "<switch> ::= \"on\"\n           | \"off\"\n\n" >> $@
	printf "<side> ::= \"left\"\n         | \"right\"\n\n" >> $@
	printf "<assert> ::= \"assert\"\n           | \"assertnot\"\n\n" >> $@
	$(BNF_GEN) ../src/parsing/lpParser.mly | sed \
	-e 's/SWITCH/<switch>/g' \
	-e 's/ABORT/"abort"/g' \
	-e 's/ADMITTED/"admitted"/g' \
	-e 's/ADMIT/"admit"/g' \
	-e 's/APPLY/"apply"/g' \
	-e 's/ASSERT/<assert>/g' \
	-e 's/ASSOCIATIVE/"associative"/g' \
	-e 's/ASSUME/"assume"/g' \
	-e 's/ASSIGN/"≔"/g' \
	-e 's/AS/"as"/g' \
	-e 's/BEGIN/"begin"/g' \
	-e 's/BUILTIN/"builtin"/g' \
	-e 's/COERCE_RULE/"coerce_rule"/g' \
	-e 's/COMMUTATIVE/"commutative"/g' \
	-e 's/COMPUTE/"compute"/g' \
	-e 's/CONSTANT/"constant"/g' \
	-e 's/DEBUG_FLAGS/("+"|"-") <string>/g' \
	-e 's/DEBUG/"debug"/g' \
	-e 's/DOT/"."/g' \
	-e 's/END/"end"/g' \
        -e 's/EVAL/"eval"/g' \
	-e 's/FAIL/"fail"/g' \
	-e 's/FLAG/"flag"/g' \
	-e 's/GENERALIZE/"generalize"/g' \
	-e 's/HAVE/"have"/g' \
	-e 's/INDUCTION/"induction"/g' \
	-e 's/INDUCTIVE/"inductive"/g' \
	-e 's/INFIX/"infix"/g' \
	-e 's/INJECTIVE/"injective"/g' \
	-e 's/LET/"let"/g' \
        -e 's/NEG_NAT/"-"<nat>/g' \
	-e 's/NAT/<nat>/g' \
	-e 's/NOTATION/"notation"/g' \
	-e 's/OPEN/"open"/g' \
	-e 's/OPAQUE/"opaque"/g' \
        -e 's/ORELSE/"orelse"/g' \
	-e 's/POSTFIX/"postfix"/g' \
	-e 's/PREFIX/"prefix"/g' \
	-e 's/PRINT/"print"/g' \
	-e 's/PRIVATE/"private"/g' \
	-e 's/PROOFTERM/"proofterm"/g' \
	-e 's/PROTECTED/"protected"/g' \
	-e 's/PROVER_TIMEOUT/"prover_timeout"/g' \
	-e 's/PROVER/"prover"/g' \
	-e 's/QUANTIFIER/"quantifier"/g' \
	-e 's/REFLEXIVITY/"reflexivity"/g' \
	-e 's/REFINE/"refine"/g' \
        -e 's/REMOVE/"remove"/g' \
        -e 's/REPEAT/"repeat"/g' \
	-e 's/REQUIRE/"require"/g' \
        -e 's/RESOLVE/"resolve"/g' \
	-e 's/REWRITE/"rewrite"/g' \
        -e 's/SET/"set"/g' \
	-e 's/UNIF_RULE/"unif_rule"/g' \
	-e 's/RULE/"rule"/g' \
	-e 's/SIDE/<side>/g' \
        -e 's/SEARCH/"search"/g' \
	-e 's/SEQUENTIAL/"sequential"/g' \
	-e 's/SIMPLIFY/"simplify"/g' \
	-e 's/SOLVE/"solve"/g' \
        -e 's/STRINGLIT/<stringlit>/g' \
	-e 's/SYMBOL/"symbol"/g' \
	-e 's/SYMMETRY/"symmetry"/g' \
	-e 's/TRY/"try"/g' \
	-e 's/TYPE_QUERY/"type"/g' \
	-e 's/TYPE_TERM/"TYPE"/g' \
	-e 's/VERBOSE/"verbose"/g' \
	-e 's/WHY3/"why3"/g' \
	-e 's/WITH/"with"/g' \
        -e 's/IN/"in"/g' \
	-e 's/FLOAT/<float>/g' \
	-e 's/HOOK_ARROW/"↪"/g' \
	-e 's/ARROW/"→"/g' \
	-e 's/BACKQUOTE/"`"/g' \
	-e 's/COMMA/","/g' \
	-e 's/SEMICOLON/";"/g' \
	-e 's/COLON/":"/g' \
	-e 's/EQUIV/"≡"/g' \
	-e 's/LAMBDA/"λ"/g' \
	-e 's/L_CU_BRACKET/"{"/g' \
	-e 's/L_PAREN/"("/g' \
	-e 's/L_SQ_BRACKET/"["/g' \
	-e 's/PI/"Π"/g' \
	-e 's/R_CU_BRACKET/"}"/g' \
	-e 's/R_PAREN/")"/g' \
	-e 's/R_SQ_BRACKET/"]"/g' \
	-e 's/TURNSTILE/"⊢"/g' \
	-e 's/VBAR/"|"/g' \
	-e 's/UNDERSCORE/"_"/g' \
	-e 's/UID_EXPL/"@" UID/g' \
	-e 's/UID_META/"?" UID/g' \
	-e 's/UID_PATT/"$$" UID/g' \
	-e 's/QID_EXPL/"@" QID/g' \
	-e 's/| EOF//g' \
	>> $@
