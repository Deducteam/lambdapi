(rule
 (targets version.ml)
 (action
  (with-stdout-to version.ml
    (run ocaml unix.cma %{dep:../../tools/gen_version.ml})))
 (mode fallback))

(library
 (name core)
 (public_name lambdapi.core)
 (synopsis "LambdaPi interactive theorem prover [core]")
 (modules :standard)
 (preprocess (pps sedlex.ppx))
 (libraries pratter sedlex sedlex.ppx unix stdlib-shims timed bindlib why3
  lplib))

(menhir (flags --explain --external-tokens LpLexer) (modules lpParser))

(ocamllex dkLexer)
(menhir
 (flags (--external-tokens DkLexer))
 (modules dkParser))
