{
  "scopeName": "source.lp",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#tactics"
    },
    {
      "include": "#signature-commands"
    },
    {
      "include": "#warning"
    },
    {
      "include": "#misc"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#external"
    }
  ],
  "repository": {
    "commands": {
      "match": "\\b(abort|admit|and|apply|as|assert|assertnot|assume|begin|compute|constant|definition|end|focus|in|injective|let|open|print|private|proofterm|protected|refine|reflexivity|require|rewrite|rule|set|simpl|symmetry|symbol|theorem|type|TYPE|why3)\\b",
      "name": "keyword.control.lp"
    },
    "comments": {
			"patterns": [
				{
					"begin": "//",
					"end": "$",
					"name": "comment.line.double-slash.lp"
				}
			]
    },

    "tactics": {
      "match": "\\b(apply|assume|print|proofterm|refine|reflexivity|rewrite|simpl|symmetry|why3)\\b",
      "name": "keyword.control.tactics.lp"
    },

    "signature-commands": {
      "match": "(begin|end|definition|as|in|let|declared|builtin|rule|symbol|with)\\s+([^\\s+]*)",
      "captures": {
        "1": {"name": "storage.type.lp"},
        "2": {"name": "entity.name.function.theorem.lp"}
      }
    },

    "external": {
      "match": "(open|require)\\s+(([^\\s+]*\\s+)*$)",
      "captures": {
        "1": {"name": "storage.type.lp"},
        "2": {"name": "entity.name.function.theorem.lp"}
      }
    },

    "warning": {
      "match": "\\b(abort|admit|fail)\\b",
      "name": "keyword.control.warning.lp"
    },

    "misc": {
      "match": "\\b(type|assert|assernot|compute|set)\\b",
      "name:": "keyword.control.query.lp"
    },

    "keywords": {
      "match": "\\b(TYPE|left|right|infix|prefix|quantifier|protected|private|injective|constant|opaque)\\b",
      "name": "storage.modifier.lp"
    }    
  }
}
